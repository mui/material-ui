<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="9484" failures="0" errors="0" time="87.643963326">
    <testsuite name="packages/markdown/extractImports.test.mjs" timestamp="2025-09-10T11:25:37.107Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.002774542">
        <testcase classname="packages/markdown/extractImports.test.mjs" name="extractImports &gt; finds all imports" time="0.001493041">
        </testcase>
    </testsuite>
    <testsuite name="packages/markdown/parseMarkdown.test.mjs" timestamp="2025-09-10T11:25:37.108Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="0" time="0.018783333">
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; getTitle &gt; remove backticks" time="0.001125916">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; getDescription &gt; trims the description" time="0.000218292">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; getDescription &gt; remove backticks" time="0.000171125">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; getDescription &gt; should not be greedy" time="0.000076875">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; getHeaders &gt; should return a correct result" time="0.000733666">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; getHeaders &gt; should work with authors broken in two lines" time="0.000200375">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; getHeaders &gt; should work with one author per line" time="0.000240375">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; getHeaders &gt; should work with quotes" time="0.000177708">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; getContents &gt; Split markdown into an array, separating demos &gt; returns a single entry without a demo" time="0.00041425">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; getContents &gt; Split markdown into an array, separating demos &gt; uses a `{{&quot;demo&quot;` marker to split" time="0.000182167">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; getContents &gt; Split markdown into an array, separating demos &gt; ignores possible code" time="0.000072083">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; getContents &gt; Split markdown into an array, separating codeblocks &gt; uses a `&lt;codeblock&gt;` tag to split" time="0.000143292">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; getCodeblock &gt; should return undefined if no codeblock found" time="0.000122833">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; getCodeblock &gt; should return the codeblock" time="0.000294291">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; renderMarkdown &gt; should render markdown lists correctly" time="0.010376667">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; renderMarkdown &gt; should render inline descriptions correctly" time="0.000288625">
        </testcase>
        <testcase classname="packages/markdown/parseMarkdown.test.mjs" name="parseMarkdown &gt; createRender &gt; should collect headers correctly" time="0.0025515">
        </testcase>
    </testsuite>
    <testsuite name="packages/markdown/prepareMarkdown.test.mjs" timestamp="2025-09-10T11:25:37.109Z" hostname="Jans-MacBook-Air.local" tests="10" failures="0" errors="0" skipped="0" time="0.022729625">
        <testcase classname="packages/markdown/prepareMarkdown.test.mjs" name="prepareMarkdown &gt; returns the table of contents with html and emojis preserved and &lt;a&gt; tags stripped" time="0.010572709">
        </testcase>
        <testcase classname="packages/markdown/prepareMarkdown.test.mjs" name="prepareMarkdown &gt; enables word-break for function signatures" time="0.002938625">
        </testcase>
        <testcase classname="packages/markdown/prepareMarkdown.test.mjs" name="prepareMarkdown &gt; use english hash for different locales" time="0.002137667">
        </testcase>
        <testcase classname="packages/markdown/prepareMarkdown.test.mjs" name="prepareMarkdown &gt; use translated hash for translations are not synced" time="0.000351417">
        </testcase>
        <testcase classname="packages/markdown/prepareMarkdown.test.mjs" name="prepareMarkdown &gt; should report missing trailing splashes" time="0.003073916">
        </testcase>
        <testcase classname="packages/markdown/prepareMarkdown.test.mjs" name="prepareMarkdown &gt; should report missing leading splashes" time="0.001684375">
        </testcase>
        <testcase classname="packages/markdown/prepareMarkdown.test.mjs" name="prepareMarkdown &gt; should report title too long" time="0.000200708">
        </testcase>
        <testcase classname="packages/markdown/prepareMarkdown.test.mjs" name="prepareMarkdown &gt; should report description too long" time="0.000111416">
        </testcase>
        <testcase classname="packages/markdown/prepareMarkdown.test.mjs" name="prepareMarkdown &gt; should not accept sh" time="0.000483">
        </testcase>
        <testcase classname="packages/markdown/prepareMarkdown.test.mjs" name="prepareMarkdown &gt; should report duplicated trailing splashes" time="0.000200833">
        </testcase>
    </testsuite>
    <testsuite name="packages/markdown/textToHash.test.mjs" timestamp="2025-09-10T11:25:37.110Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.006555125">
        <testcase classname="packages/markdown/textToHash.test.mjs" name="textToHash &gt; should hash as expected" time="0.005607917">
        </testcase>
        <testcase classname="packages/markdown/textToHash.test.mjs" name="textToHash &gt; should generate a unique hash" time="0.000271917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-icons-material/builder.test.mjs" timestamp="2025-09-10T11:25:37.110Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.658753292">
        <testcase classname="packages/mui-icons-material/builder.test.mjs" name="builder &gt; #getComponentName &gt; should change capitalize dashes" time="0.001153125">
        </testcase>
        <testcase classname="packages/mui-icons-material/builder.test.mjs" name="builder &gt; #getComponentName &gt; should capitalize based on environment path.sep" time="0.000205417">
        </testcase>
        <testcase classname="packages/mui-icons-material/builder.test.mjs" name="builder &gt; should have icons to test with" time="0.000175958">
        </testcase>
        <testcase classname="packages/mui-icons-material/builder.test.mjs" name="builder &gt; --output-dir &gt; script outputs to directory" time="0.203417791">
        </testcase>
        <testcase classname="packages/mui-icons-material/builder.test.mjs" name="builder &gt; --svg-dir, --innerPath, --fileSuffix &gt; script outputs to directory" time="0.30070275">
        </testcase>
        <testcase classname="packages/mui-icons-material/builder.test.mjs" name="builder &gt; Template rendering &gt; should produce the expected output" time="0.152226834">
        </testcase>
    </testsuite>
    <testsuite name="packages/api-docs-builder/buildApiUtils.test.ts" timestamp="2025-09-10T11:25:37.111Z" hostname="Jans-MacBook-Air.local" tests="5" failures="0" errors="0" skipped="0" time="0.002535">
        <testcase classname="packages/api-docs-builder/buildApiUtils.test.ts" name="buildApiUtils &gt; extractPackageFilePath &gt; return info if path is a package (material)" time="0.001153458">
        </testcase>
        <testcase classname="packages/api-docs-builder/buildApiUtils.test.ts" name="buildApiUtils &gt; extractPackageFilePath &gt; return info if path is a package (lab)" time="0.000253791">
        </testcase>
        <testcase classname="packages/api-docs-builder/buildApiUtils.test.ts" name="buildApiUtils &gt; extractPackageFilePath &gt; return info if path is a package (data-grid)" time="0.000153041">
        </testcase>
        <testcase classname="packages/api-docs-builder/buildApiUtils.test.ts" name="buildApiUtils &gt; extractPackageFilePath &gt; return info if path is a package (data-grid-pro)" time="0.000082333">
        </testcase>
        <testcase classname="packages/api-docs-builder/buildApiUtils.test.ts" name="buildApiUtils &gt; extractPackageFilePath &gt; return null if path is not a package" time="0.000134291">
        </testcase>
    </testsuite>
    <testsuite name="packages/api-docs-builder/utils/findApiPages.test.ts" timestamp="2025-09-10T11:25:37.111Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.002214166">
        <testcase classname="packages/api-docs-builder/utils/findApiPages.test.ts" name="extractApiPage &gt; return info for api page" time="0.001417792">
        </testcase>
    </testsuite>
    <testsuite name="packages/api-docs-builder/utils/replaceUrl.test.js" timestamp="2025-09-10T11:25:37.111Z" hostname="Jans-MacBook-Air.local" tests="10" failures="0" errors="0" skipped="0" time="0.01139175">
        <testcase classname="packages/api-docs-builder/utils/replaceUrl.test.js" name="replaceUrl &gt; replace material related pathname" time="0.002753">
        </testcase>
        <testcase classname="packages/api-docs-builder/utils/replaceUrl.test.js" name="replaceUrl &gt; should not change if links have been updated" time="0.0010205">
        </testcase>
        <testcase classname="packages/api-docs-builder/utils/replaceUrl.test.js" name="replaceUrl &gt; replace correct component links" time="0.002342833">
        </testcase>
        <testcase classname="packages/api-docs-builder/utils/replaceUrl.test.js" name="replaceUrl &gt; replace correct API links" time="0.0018475">
        </testcase>
        <testcase classname="packages/api-docs-builder/utils/replaceUrl.test.js" name="replaceUrl &gt; should do nothing if the components have updated" time="0.000152666">
        </testcase>
        <testcase classname="packages/api-docs-builder/utils/replaceUrl.test.js" name="replaceUrl &gt; should do nothing if the APIs have updated" time="0.000375667">
        </testcase>
        <testcase classname="packages/api-docs-builder/utils/replaceUrl.test.js" name="replaceUrl &gt; only replace links for new routes (/material-ui/* &amp; /x/*)" time="0.000673459">
        </testcase>
        <testcase classname="packages/api-docs-builder/utils/replaceUrl.test.js" name="replaceUrl &gt; [i18n] only replace links for new routes (/material-ui/* &amp; /x/*)" time="0.000163542">
        </testcase>
        <testcase classname="packages/api-docs-builder/utils/replaceUrl.test.js" name="replaceUrl &gt; does not replace for old routes" time="0.000252209">
        </testcase>
        <testcase classname="packages/api-docs-builder/utils/replaceUrl.test.js" name="replaceUrl &gt; does not replace for x marketing page" time="0.0000895">
        </testcase>
    </testsuite>
    <testsuite name="packages/api-docs-builder-core/materialUi/getMaterialUiComponentInfo.test.ts" timestamp="2025-09-10T11:25:37.112Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.134004958">
        <testcase classname="packages/api-docs-builder-core/materialUi/getMaterialUiComponentInfo.test.ts" name="getMaterialUiComponentInfo &gt; return correct info for material component file" time="0.133253125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-envinfo/src/envinfo.test.js" timestamp="2025-09-10T11:25:37.112Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.385265167">
        <testcase classname="packages/mui-envinfo/src/envinfo.test.js" name="@mui/envinfo &gt; includes info about the environment relevant to MUI" time="0.383920708">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-stylis-plugin-rtl/src/index.test.ts" timestamp="2025-09-10T11:25:37.112Z" hostname="Jans-MacBook-Air.local" tests="11" failures="0" errors="0" skipped="0" time="0.030782875">
        <testcase classname="packages/mui-stylis-plugin-rtl/src/index.test.ts" name="integration test with stylis &gt; flips simple rules" time="0.027677791">
        </testcase>
        <testcase classname="packages/mui-stylis-plugin-rtl/src/index.test.ts" name="integration test with stylis &gt; flips shorthands" time="0.000346167">
        </testcase>
        <testcase classname="packages/mui-stylis-plugin-rtl/src/index.test.ts" name="integration test with stylis &gt; handles noflip directives" time="0.000339416">
        </testcase>
        <testcase classname="packages/mui-stylis-plugin-rtl/src/index.test.ts" name="integration test with stylis &gt; flips keyframes" time="0.000195542">
        </testcase>
        <testcase classname="packages/mui-stylis-plugin-rtl/src/index.test.ts" name="integration test with stylis &gt; flips media queries" time="0.000152958">
        </testcase>
        <testcase classname="packages/mui-stylis-plugin-rtl/src/index.test.ts" name="integration test with stylis &gt; flips supports queries" time="0.000135708">
        </testcase>
        <testcase classname="packages/mui-stylis-plugin-rtl/src/index.test.ts" name="integration test with stylis &gt; works in tandem with prefixer" time="0.000417584">
        </testcase>
        <testcase classname="packages/mui-stylis-plugin-rtl/src/index.test.ts" name="integration test with stylis &gt; doesn&apos;t crash on empty rules" time="0.000151625">
        </testcase>
        <testcase classname="packages/mui-stylis-plugin-rtl/src/index.test.ts" name="integration test with stylis &gt; works for nested rules" time="0.000263792">
        </testcase>
        <testcase classname="packages/mui-stylis-plugin-rtl/src/index.test.ts" name="integration test with stylis &gt; works for layer rules" time="0.000128083">
        </testcase>
        <testcase classname="packages/mui-stylis-plugin-rtl/src/index.test.ts" name="integration test with stylis &gt; works for nested layer rules" time="0.000146541">
        </testcase>
    </testsuite>
    <testsuite name="packages-internal/test-utils/src/createRenderer.test.js" timestamp="2025-09-10T11:25:37.113Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.023403209">
        <testcase classname="packages-internal/test-utils/src/createRenderer.test.js" name="createRenderer &gt; allows querying descriptions" time="0.021734708">
        </testcase>
    </testsuite>
    <testsuite name="packages-internal/test-utils/src/initMatchers.test.js" timestamp="2025-09-10T11:25:37.113Z" hostname="Jans-MacBook-Air.local" tests="11" failures="0" errors="0" skipped="0" time="0.017509791">
        <testcase classname="packages-internal/test-utils/src/initMatchers.test.js" name="custom matchers &gt; toErrorDev() &gt; passes if the message is exactly the same" time="0.002219458">
        </testcase>
        <testcase classname="packages-internal/test-utils/src/initMatchers.test.js" name="custom matchers &gt; toErrorDev() &gt; passes if the message is a subset" time="0.00033275">
        </testcase>
        <testcase classname="packages-internal/test-utils/src/initMatchers.test.js" name="custom matchers &gt; toErrorDev() &gt; passes if multiple messages are expected" time="0.000357125">
        </testcase>
        <testcase classname="packages-internal/test-utils/src/initMatchers.test.js" name="custom matchers &gt; toErrorDev() &gt; fails if an expected console.error call wasn&apos;t recorded with a useful stacktrace" time="0.008352708">
        </testcase>
        <testcase classname="packages-internal/test-utils/src/initMatchers.test.js" name="custom matchers &gt; toErrorDev() &gt; is case sensitive" time="0.00236375">
        </testcase>
        <testcase classname="packages-internal/test-utils/src/initMatchers.test.js" name="custom matchers &gt; toErrorDev() &gt; fails if the order of calls does not match" time="0.0007015">
        </testcase>
        <testcase classname="packages-internal/test-utils/src/initMatchers.test.js" name="custom matchers &gt; toErrorDev() &gt; fails if there are fewer messages than expected" time="0.000242291">
        </testcase>
        <testcase classname="packages-internal/test-utils/src/initMatchers.test.js" name="custom matchers &gt; toErrorDev() &gt; passes if no messages were recorded if expected" time="0.00027125">
        </testcase>
        <testcase classname="packages-internal/test-utils/src/initMatchers.test.js" name="custom matchers &gt; toErrorDev() &gt; fails if no arguments are used as a way of negating" time="0.000410792">
        </testcase>
        <testcase classname="packages-internal/test-utils/src/initMatchers.test.js" name="custom matchers &gt; toErrorDev() &gt; fails if arguments are passed when negated" time="0.00022125">
        </testcase>
        <testcase classname="packages-internal/test-utils/src/initMatchers.test.js" name="custom matchers &gt; toErrorDev() &gt; ignores `false` messages" time="0.000875166">
        </testcase>
    </testsuite>
    <testsuite name="packages-internal/test-utils/src/mochaHooks.test.js" timestamp="2025-09-10T11:25:37.114Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="2" time="0">
        <testcase classname="packages-internal/test-utils/src/mochaHooks.test.js" name="mochaHooks &gt; afterEach &gt; on unexpected console.(warn|error) in afterEach &gt; throws an error" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages-internal/test-utils/src/mochaHooks.test.js" name="mochaHooks &gt; afterEach &gt; when having missing act() warnings by component &gt; dedupes them" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-private-theming/src/ThemeProvider/ThemeProvider.test.js" timestamp="2025-09-10T11:25:37.114Z" hostname="Jans-MacBook-Air.local" tests="5" failures="0" errors="0" skipped="0" time="0.030972208">
        <testcase classname="packages/mui-private-theming/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; should provide the theme" time="0.016126333">
        </testcase>
        <testcase classname="packages/mui-private-theming/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; should merge the themes" time="0.004624791">
        </testcase>
        <testcase classname="packages/mui-private-theming/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; should memoize the merged output" time="0.005567083">
        </testcase>
        <testcase classname="packages/mui-private-theming/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; warnings &gt; should warn about missing provider" time="0.00214575">
        </testcase>
        <testcase classname="packages/mui-private-theming/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; warnings &gt; should warn about wrong theme function" time="0.001432792">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-private-theming/src/useTheme/useTheme.test.js" timestamp="2025-09-10T11:25:37.114Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.01994175">
        <testcase classname="packages/mui-private-theming/src/useTheme/useTheme.test.js" name="useTheme &gt; should use the theme" time="0.018943666">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-docs/src/HighlightedCode/HighlightedCode.test.tsx" timestamp="2025-09-10T11:25:37.114Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.138783166">
        <testcase classname="packages/mui-docs/src/HighlightedCode/HighlightedCode.test.tsx" name="HighlightedCode &gt; does not crash with default theme" time="0.06688825">
        </testcase>
        <testcase classname="packages/mui-docs/src/HighlightedCode/HighlightedCode.test.tsx" name="HighlightedCode &gt; does not crash with default theme in dark mode" time="0.028385167">
        </testcase>
        <testcase classname="packages/mui-docs/src/HighlightedCode/HighlightedCode.test.tsx" name="HighlightedCode &gt; does not crash with branding theme" time="0.023275625">
        </testcase>
        <testcase classname="packages/mui-docs/src/HighlightedCode/HighlightedCode.test.tsx" name="HighlightedCode &gt; does not crash with branding theme in dark mode" time="0.017094125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-styled-engine/src/styled.test.js" timestamp="2025-09-10T11:25:37.115Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.002084333">
        <testcase classname="packages/mui-styled-engine/src/styled.test.js" name="styled &gt; should help debug wrong args" time="0.001314083">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-styled-engine/src/StyledEngineProvider/StyledEngineProvider.test.js" timestamp="2025-09-10T11:25:37.115Z" hostname="Jans-MacBook-Air.local" tests="5" failures="0" errors="0" skipped="0" time="0.027274292">
        <testcase classname="packages/mui-styled-engine/src/StyledEngineProvider/StyledEngineProvider.test.js" name="[Emotion] StyledEngineProvider &gt; should create styles with @layer" time="0.013823041">
        </testcase>
        <testcase classname="packages/mui-styled-engine/src/StyledEngineProvider/StyledEngineProvider.test.js" name="[Emotion] StyledEngineProvider &gt; should not do anything if the style is layer order" time="0.003163792">
        </testcase>
        <testcase classname="packages/mui-styled-engine/src/StyledEngineProvider/StyledEngineProvider.test.js" name="[Emotion] StyledEngineProvider &gt; should wrap @layer rule" time="0.002114584">
        </testcase>
        <testcase classname="packages/mui-styled-engine/src/StyledEngineProvider/StyledEngineProvider.test.js" name="[Emotion] StyledEngineProvider &gt; able to config layer order through GlobalStyles" time="0.004503417">
        </testcase>
        <testcase classname="packages/mui-styled-engine/src/StyledEngineProvider/StyledEngineProvider.test.js" name="[Emotion] StyledEngineProvider &gt; should reuse the same cache" time="0.002628292">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-styled-engine/src/GlobalStyles/GlobalStyles.test.js" timestamp="2025-09-10T11:25:37.115Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="5" time="0.029186917">
        <testcase classname="packages/mui-styled-engine/src/GlobalStyles/GlobalStyles.test.js" name="GlobalStyles &gt; should add global styles" time="0.002265625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-styled-engine/src/GlobalStyles/GlobalStyles.test.js" name="GlobalStyles &gt; should add global styles using JS syntax" time="0.000656042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-styled-engine/src/GlobalStyles/GlobalStyles.test.js" name="GlobalStyles &gt; should add global styles using function" time="0.000784375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-styled-engine/src/GlobalStyles/GlobalStyles.test.js" name="GlobalStyles &gt; should not throw if no theme is available" time="0.019599291">
        </testcase>
        <testcase classname="packages/mui-styled-engine/src/GlobalStyles/GlobalStyles.test.js" name="GlobalStyles &gt; should give precedence to styled()" time="0.003156583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-styled-engine/src/GlobalStyles/GlobalStyles.test.js" name="GlobalStyles &gt; should give precedence to styled() using JS syntax" time="0.001427125">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-styled-engine-sc/src/styled.test.js" timestamp="2025-09-10T11:25:37.116Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.030849375">
        <testcase classname="packages/mui-styled-engine-sc/src/styled.test.js" name="styled &gt; should help debug wrong args" time="0.007249">
        </testcase>
        <testcase classname="packages/mui-styled-engine-sc/src/styled.test.js" name="styled &gt; should respect the options" time="0.021228333">
        </testcase>
        <testcase classname="packages/mui-styled-engine-sc/src/styled.test.js" name="styled &gt; should not allow styled-components&apos;s APIs: .attrs" time="0.00079875">
        </testcase>
        <testcase classname="packages/mui-styled-engine-sc/src/styled.test.js" name="styled &gt; should allow styled-components&apos;s APIs: .withConfig" time="0.000530875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-styled-engine-sc/src/GlobalStyles/GlobalStyles.test.js" timestamp="2025-09-10T11:25:37.116Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="5" time="0.0172065">
        <testcase classname="packages/mui-styled-engine-sc/src/GlobalStyles/GlobalStyles.test.js" name="GlobalStyles &gt; should add global styles" time="0.003420292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-styled-engine-sc/src/GlobalStyles/GlobalStyles.test.js" name="GlobalStyles &gt; should add global styles using JS syntax" time="0.00057025">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-styled-engine-sc/src/GlobalStyles/GlobalStyles.test.js" name="GlobalStyles &gt; should add global styles using function" time="0.000305083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-styled-engine-sc/src/GlobalStyles/GlobalStyles.test.js" name="GlobalStyles &gt; should not throw if no theme is available" time="0.009981917">
        </testcase>
        <testcase classname="packages/mui-styled-engine-sc/src/GlobalStyles/GlobalStyles.test.js" name="GlobalStyles &gt; should give precedence to styled()" time="0.000476">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-styled-engine-sc/src/GlobalStyles/GlobalStyles.test.js" name="GlobalStyles &gt; should give precedence to styled() using JS syntax" time="0.000541833">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v0.15.0/import-path.test.js" timestamp="2025-09-10T11:25:37.116Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.013774167">
        <testcase classname="packages/mui-codemod/src/v0.15.0/import-path.test.js" name="@mui/codemod &gt; v0.15.0 &gt; import-path &gt; convert path as needed" time="0.01301525">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v1.0.0/color-imports.test.js" timestamp="2025-09-10T11:25:37.117Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.020601709">
        <testcase classname="packages/mui-codemod/src/v1.0.0/color-imports.test.js" name="@mui/codemod &gt; v1.0.0 &gt; color-imports &gt; update color module imports" time="0.019960792">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v1.0.0/import-path.test.js" timestamp="2025-09-10T11:25:37.117Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.046662542">
        <testcase classname="packages/mui-codemod/src/v1.0.0/import-path.test.js" name="@mui/codemod &gt; v1.0.0 &gt; import-path &gt; convert path as needed" time="0.032252375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v1.0.0/import-path.test.js" name="@mui/codemod &gt; v1.0.0 &gt; import-path &gt; should be idempotent" time="0.013631541">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v1.0.0/menu-item-primary-text.test.js" timestamp="2025-09-10T11:25:37.117Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.024510458">
        <testcase classname="packages/mui-codemod/src/v1.0.0/menu-item-primary-text.test.js" name="@mui/codemod &gt; v1.0.0 &gt; menu-item-primary-text &gt; convert property as needed" time="0.018514833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v1.0.0/menu-item-primary-text.test.js" name="@mui/codemod &gt; v1.0.0 &gt; menu-item-primary-text &gt; should be idempotent" time="0.0053275">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v1.0.0/svg-icon-imports.test.js" timestamp="2025-09-10T11:25:37.117Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.017512083">
        <testcase classname="packages/mui-codemod/src/v1.0.0/svg-icon-imports.test.js" name="@mui/codemod &gt; v1.0.0 &gt; svg-icon-imports &gt; update svg-icon imports" time="0.016829042">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v4.0.0/optimal-imports.test.js" timestamp="2025-09-10T11:25:37.117Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.332903958">
        <testcase classname="packages/mui-codemod/src/v4.0.0/optimal-imports.test.js" name="@material-ui/codemod &gt; v4.0.0 &gt; optimal-imports &gt; convert path as needed" time="0.317301417">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v4.0.0/optimal-imports.test.js" name="@material-ui/codemod &gt; v4.0.0 &gt; optimal-imports &gt; should be idempotent" time="0.014604834">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v4.0.0/theme-spacing-api.test.js" timestamp="2025-09-10T11:25:37.117Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.052891166">
        <testcase classname="packages/mui-codemod/src/v4.0.0/theme-spacing-api.test.js" name="@mui/codemod &gt; v4.0.0 &gt; theme-spacing &gt; update theme spacing API" time="0.042794542">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v4.0.0/theme-spacing-api.test.js" name="@mui/codemod &gt; v4.0.0 &gt; theme-spacing &gt; update theme spacing API for destructured" time="0.009267334">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v4.0.0/top-level-imports.test.js" timestamp="2025-09-10T11:25:37.118Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.657654875">
        <testcase classname="packages/mui-codemod/src/v4.0.0/top-level-imports.test.js" name="@mui/codemod &gt; v4.0.0 &gt; top-level-imports &gt; convert path as needed" time="0.647380875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v4.0.0/top-level-imports.test.js" name="@mui/codemod &gt; v4.0.0 &gt; top-level-imports &gt; should be idempotent" time="0.0095205">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/util/findComponentJSX.test.js" timestamp="2025-09-10T11:25:37.118Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.014712708">
        <testcase classname="packages/mui-codemod/src/util/findComponentJSX.test.js" name="@mui/codemod &gt; utils &gt; findComponentJSX &gt; should find all the JSXElements of a given component name" time="0.011546542">
        </testcase>
        <testcase classname="packages/mui-codemod/src/util/findComponentJSX.test.js" name="@mui/codemod &gt; utils &gt; findComponentJSX &gt; should find with custom package name" time="0.002449542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/adapter-v4.test.js" timestamp="2025-09-10T11:25:37.118Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.029693958">
        <testcase classname="packages/mui-codemod/src/v5.0.0/adapter-v4.test.js" name="@mui/codemod &gt; v5.0.0 &gt; adapter-v4 &gt; add adaptV4Theme as needed" time="0.016744875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/adapter-v4.test.js" name="@mui/codemod &gt; v5.0.0 &gt; adapter-v4 &gt; should be idempotent" time="0.003863833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/adapter-v4.test.js" name="@mui/codemod &gt; v5.0.0 &gt; adapter-v4 &gt; works with core import" time="0.003472041">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/adapter-v4.test.js" name="@mui/codemod &gt; v5.0.0 &gt; adapter-v4 &gt; works with other path import" time="0.004760458">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/autocomplete-rename-closeicon.test.js" timestamp="2025-09-10T11:25:37.118Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.018694375">
        <testcase classname="packages/mui-codemod/src/v5.0.0/autocomplete-rename-closeicon.test.js" name="@mui/codemod &gt; v5.0.0 &gt; autocomplete-rename-closeicon &gt; transforms props as needed" time="0.01456325">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/autocomplete-rename-closeicon.test.js" name="@mui/codemod &gt; v5.0.0 &gt; autocomplete-rename-closeicon &gt; should be idempotent" time="0.003116625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/autocomplete-rename-option.test.js" timestamp="2025-09-10T11:25:37.118Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.01520975">
        <testcase classname="packages/mui-codemod/src/v5.0.0/autocomplete-rename-option.test.js" name="@mui/codemod &gt; v5.0.0 &gt; autocomplete-rename-option &gt; transforms props as needed" time="0.012375833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/autocomplete-rename-option.test.js" name="@mui/codemod &gt; v5.0.0 &gt; autocomplete-rename-option &gt; should be idempotent" time="0.002180292">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/avatar-circle-circular.test.js" timestamp="2025-09-10T11:25:37.119Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.017811459">
        <testcase classname="packages/mui-codemod/src/v5.0.0/avatar-circle-circular.test.js" name="@mui/codemod &gt; v5.0.0 &gt; avatar-circle-circular &gt; transforms props as needed" time="0.013555917">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/avatar-circle-circular.test.js" name="@mui/codemod &gt; v5.0.0 &gt; avatar-circle-circular &gt; should be idempotent" time="0.00339875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/badge-overlap-value.test.js" timestamp="2025-09-10T11:25:37.119Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.024734042">
        <testcase classname="packages/mui-codemod/src/v5.0.0/badge-overlap-value.test.js" name="@mui/codemod &gt; v5.0.0 &gt; badge-overlap-value &gt; transforms props as needed" time="0.018967166">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/badge-overlap-value.test.js" name="@mui/codemod &gt; v5.0.0 &gt; badge-overlap-value &gt; should be idempotent" time="0.005004417">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/base-hook-imports.test.js" timestamp="2025-09-10T11:25:37.119Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.016187209">
        <testcase classname="packages/mui-codemod/src/v5.0.0/base-hook-imports.test.js" name="@mui/codemod &gt; v5.0.0 &gt; base-hook-imports &gt; transforms the imports of Base hooks to default imports" time="0.015272958">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/base-remove-component-prop.test.js" timestamp="2025-09-10T11:25:37.119Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.050050875">
        <testcase classname="packages/mui-codemod/src/v5.0.0/base-remove-component-prop.test.js" name="@mui/codemod &gt; v5.0.0 &gt; base-remove-component-prop &gt; transforms props as needed" time="0.025261083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/base-remove-component-prop.test.js" name="@mui/codemod &gt; v5.0.0 &gt; does not add generics if js is used" time="0.02401225">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/base-remove-unstyled-suffix.test.js" timestamp="2025-09-10T11:25:37.119Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.022804708">
        <testcase classname="packages/mui-codemod/src/v5.0.0/base-remove-unstyled-suffix.test.js" name="@mui/codemod &gt; v5.0.0 &gt; base-remove-unstyled-suffix &gt; removes `Unstyled` suffix from Base UI components except default import declarations" time="0.0216335">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/base-rename-components-to-slots.test.js" timestamp="2025-09-10T11:25:37.119Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.028714833">
        <testcase classname="packages/mui-codemod/src/v5.0.0/base-rename-components-to-slots.test.js" name="@mui/codemod &gt; v5.0.0 &gt; base-rename-components-to-slots &gt; transforms props as needed" time="0.0270355">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/base-use-named-exports.test.js" timestamp="2025-09-10T11:25:37.120Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.030773708">
        <testcase classname="packages/mui-codemod/src/v5.0.0/base-use-named-exports.test.js" name="@mui/codemod &gt; v5.0.0 &gt; base-use-named-exports &gt; transforms exports as needed" time="0.021759042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/base-use-named-exports.test.js" name="@mui/codemod &gt; v5.0.0 &gt; base-use-named-exports &gt; should be idempotent" time="0.005004083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/base-use-named-exports.test.js" name="@mui/codemod &gt; v5.0.0 &gt; base-use-named-exports &gt; warns when deep import is found but transforms all the valid ones" time="0.0027145">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/box-borderradius-values.test.js" timestamp="2025-09-10T11:25:37.120Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.016520375">
        <testcase classname="packages/mui-codemod/src/v5.0.0/box-borderradius-values.test.js" name="@mui/codemod &gt; v5.0.0 &gt; box-borderradius-values &gt; transforms props as needed" time="0.015901">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/box-rename-css.test.js" timestamp="2025-09-10T11:25:37.120Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.024092167">
        <testcase classname="packages/mui-codemod/src/v5.0.0/box-rename-css.test.js" name="@mui/codemod &gt; v5.0.0 &gt; box-rename-css &gt; transforms props as needed" time="0.019129417">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/box-rename-css.test.js" name="@mui/codemod &gt; v5.0.0 &gt; box-rename-css &gt; should be idempotent" time="0.003571875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/box-rename-gap.test.js" timestamp="2025-09-10T11:25:37.120Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.019095">
        <testcase classname="packages/mui-codemod/src/v5.0.0/box-rename-gap.test.js" name="@mui/codemod &gt; v5.0.0 &gt; box-rename-gap &gt; transforms props as needed" time="0.015219417">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/box-rename-gap.test.js" name="@mui/codemod &gt; v5.0.0 &gt; box-rename-gap &gt; should be idempotent" time="0.002071834">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/box-sx-prop.test.js" timestamp="2025-09-10T11:25:37.120Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.039344334">
        <testcase classname="packages/mui-codemod/src/v5.0.0/box-sx-prop.test.js" name="@mui/codemod &gt; v5.0.0 &gt; box-sx-prop &gt; transforms props as needed" time="0.028195792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/box-sx-prop.test.js" name="@mui/codemod &gt; v5.0.0 &gt; box-sx-prop &gt; should be idempotent" time="0.004454958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/box-sx-prop.test.js" name="@mui/codemod &gt; v5.0.0 &gt; box-sx-prop &gt; alias, transforms props as needed" time="0.004206958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/box-sx-prop.test.js" name="@mui/codemod &gt; v5.0.0 &gt; box-sx-prop &gt; alias, should be idempotent" time="0.001638708">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/button-color-prop.test.js" timestamp="2025-09-10T11:25:37.121Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.021679042">
        <testcase classname="packages/mui-codemod/src/v5.0.0/button-color-prop.test.js" name="@mui/codemod &gt; v5.0.0 &gt; button-color-prop &gt; transforms props as needed" time="0.014528375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/button-color-prop.test.js" name="@mui/codemod &gt; v5.0.0 &gt; button-color-prop &gt; should be idempotent" time="0.005496875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/chip-variant-prop.test.js" timestamp="2025-09-10T11:25:37.121Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.015974875">
        <testcase classname="packages/mui-codemod/src/v5.0.0/chip-variant-prop.test.js" name="@mui/codemod &gt; v5.0.0 &gt; chip-variant-prop &gt; transforms props as needed" time="0.013722125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/chip-variant-prop.test.js" name="@mui/codemod &gt; v5.0.0 &gt; chip-variant-prop &gt; should be idempotent" time="0.001524167">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/circularprogress-variant.test.js" timestamp="2025-09-10T11:25:37.121Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.017629958">
        <testcase classname="packages/mui-codemod/src/v5.0.0/circularprogress-variant.test.js" name="@mui/codemod &gt; v5.0.0 &gt; circularprogress-variant &gt; transforms props as needed" time="0.013872125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/circularprogress-variant.test.js" name="@mui/codemod &gt; v5.0.0 &gt; circularprogress-variant &gt; should be idempotent" time="0.002978417">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/collapse-rename-collapsedheight.test.js" timestamp="2025-09-10T11:25:37.122Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.0219705">
        <testcase classname="packages/mui-codemod/src/v5.0.0/collapse-rename-collapsedheight.test.js" name="@mui/codemod &gt; v5.0.0 &gt; collapse-rename-collapsedheight &gt; transforms props as needed" time="0.016870542">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/collapse-rename-collapsedheight.test.js" name="@mui/codemod &gt; v5.0.0 &gt; collapse-rename-collapsedheight &gt; should be idempotent" time="0.004222875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/component-rename-prop.test.js" timestamp="2025-09-10T11:25:37.122Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.0169465">
        <testcase classname="packages/mui-codemod/src/v5.0.0/component-rename-prop.test.js" name="@mui/codemod &gt; v5.0.0 &gt; component-rename-prop &gt; transforms props as needed" time="0.012097125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/component-rename-prop.test.js" name="@mui/codemod &gt; v5.0.0 &gt; component-rename-prop &gt; should be idempotent" time="0.002675541">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/core-styles-import.test.js" timestamp="2025-09-10T11:25:37.122Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.015945625">
        <testcase classname="packages/mui-codemod/src/v5.0.0/core-styles-import.test.js" name="@mui/codemod &gt; v5.0.0 &gt; core-styles-import &gt; transforms as needed" time="0.013065917">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/core-styles-import.test.js" name="@mui/codemod &gt; v5.0.0 &gt; core-styles-import &gt; should be idempotent" time="0.002166125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/create-theme.test.js" timestamp="2025-09-10T11:25:37.123Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.025770167">
        <testcase classname="packages/mui-codemod/src/v5.0.0/create-theme.test.js" name="@mui/codemod &gt; v5.0.0 &gt; create-theme &gt; transforms createMuiTheme as needed" time="0.014391125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/create-theme.test.js" name="@mui/codemod &gt; v5.0.0 &gt; create-theme &gt; should be idempotent" time="0.003438958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/create-theme.test.js" name="@mui/codemod &gt; v5.0.0 &gt; create-theme &gt; transforms with core import" time="0.002972834">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/create-theme.test.js" name="@mui/codemod &gt; v5.0.0 &gt; create-theme &gt; existing custom createTheme" time="0.004108042">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/date-pickers-moved-to-x.test.js" timestamp="2025-09-10T11:25:37.123Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.079273334">
        <testcase classname="packages/mui-codemod/src/v5.0.0/date-pickers-moved-to-x.test.js" name="@mui/codemod &gt; v5.0.0 &gt; date-pickers-moved-to-x &gt; transforms exports as needed (lab sub module)" time="0.031848417">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/date-pickers-moved-to-x.test.js" name="@mui/codemod &gt; v5.0.0 &gt; date-pickers-moved-to-x &gt; should be idempotent (lab sub module)" time="0.012741541">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/date-pickers-moved-to-x.test.js" name="@mui/codemod &gt; v5.0.0 &gt; date-pickers-moved-to-x &gt; transforms exports as needed (lab root with only community exports)" time="0.009197416">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/date-pickers-moved-to-x.test.js" name="@mui/codemod &gt; v5.0.0 &gt; date-pickers-moved-to-x &gt; should be idempotent (lab root with only community exports)" time="0.010306583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/date-pickers-moved-to-x.test.js" name="@mui/codemod &gt; v5.0.0 &gt; date-pickers-moved-to-x &gt; transforms exports as needed (lab root with pro exports)" time="0.007693792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/date-pickers-moved-to-x.test.js" name="@mui/codemod &gt; v5.0.0 &gt; date-pickers-moved-to-x &gt; should be idempotent (lab root with pro exports)" time="0.006415166">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/dialog-props.test.js" timestamp="2025-09-10T11:25:37.123Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.0130355">
        <testcase classname="packages/mui-codemod/src/v5.0.0/dialog-props.test.js" name="@mui/codemod &gt; v5.0.0 &gt; dialog-props &gt; transforms props as needed" time="0.011096542">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/dialog-props.test.js" name="@mui/codemod &gt; v5.0.0 &gt; dialog-props &gt; should be idempotent" time="0.001249916">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/dialog-title-props.test.js" timestamp="2025-09-10T11:25:37.124Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.015003">
        <testcase classname="packages/mui-codemod/src/v5.0.0/dialog-title-props.test.js" name="@mui/codemod &gt; v5.0.0 &gt; dialog-title-props &gt; transforms props as needed" time="0.012706458">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/dialog-title-props.test.js" name="@mui/codemod &gt; v5.0.0 &gt; dialog-title-props &gt; should be idempotent" time="0.001500958">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/emotion-prepend-cache.test.js" timestamp="2025-09-10T11:25:37.124Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.032475541">
        <testcase classname="packages/mui-codemod/src/v5.0.0/emotion-prepend-cache.test.js" name="@mui/codemod &gt; v5.0.0 &gt; emotion-prepend-cache &gt; append to createCache" time="0.022308209">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/emotion-prepend-cache.test.js" name="@mui/codemod &gt; v5.0.0 &gt; emotion-prepend-cache &gt; should be idempotent" time="0.002253125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/emotion-prepend-cache.test.js" name="@mui/codemod &gt; v5.0.0 &gt; emotion-prepend-cache &gt; append to custom naming" time="0.003049416">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/emotion-prepend-cache.test.js" name="@mui/codemod &gt; v5.0.0 &gt; emotion-prepend-cache &gt; turn existing prepend to true" time="0.003454584">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/expansion-panel-component.test.js" timestamp="2025-09-10T11:25:37.124Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.004238416">
        <testcase classname="packages/mui-codemod/src/v5.0.0/expansion-panel-component.test.js" name="@mui/codemod &gt; v5.0.0 &gt; expansion-panel-component &gt; transforms as needed" time="0.0031305">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/expansion-panel-component.test.js" name="@mui/codemod &gt; v5.0.0 &gt; expansion-panel-component &gt; should be idempotent" time="0.000282542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/fab-variant.test.js" timestamp="2025-09-10T11:25:37.124Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.018650583">
        <testcase classname="packages/mui-codemod/src/v5.0.0/fab-variant.test.js" name="@mui/codemod &gt; v5.0.0 &gt; fab-variant &gt; transforms as needed" time="0.014726583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/fab-variant.test.js" name="@mui/codemod &gt; v5.0.0 &gt; fab-variant &gt; should be idempotent" time="0.002920625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/fade-rename-alpha.test.js" timestamp="2025-09-10T11:25:37.125Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.02338075">
        <testcase classname="packages/mui-codemod/src/v5.0.0/fade-rename-alpha.test.js" name="@mui/codemod &gt; v5.0.0 &gt; fade-rename-alpha &gt; transforms props as needed" time="0.019557625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/fade-rename-alpha.test.js" name="@mui/codemod &gt; v5.0.0 &gt; fade-rename-alpha &gt; should be idempotent" time="0.001745166">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/fade-rename-alpha.test.js" name="@mui/codemod &gt; v5.0.0 &gt; fade-rename-alpha &gt; should not modify local functions" time="0.001225667">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/grid-justify-justifycontent.test.js" timestamp="2025-09-10T11:25:37.125Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.017044458">
        <testcase classname="packages/mui-codemod/src/v5.0.0/grid-justify-justifycontent.test.js" name="@mui/codemod &gt; v5.0.0 &gt; grid-justify-justifycontent &gt; transforms props as needed" time="0.013518583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/grid-justify-justifycontent.test.js" name="@mui/codemod &gt; v5.0.0 &gt; grid-justify-justifycontent &gt; should be idempotent" time="0.002380708">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/grid-list-component.test.js" timestamp="2025-09-10T11:25:37.125Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.003461625">
        <testcase classname="packages/mui-codemod/src/v5.0.0/grid-list-component.test.js" name="@mui/codemod &gt; v5.0.0 &gt; grid-list-component &gt; transforms MuiThemeProvider as needed" time="0.002321125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/grid-list-component.test.js" name="@mui/codemod &gt; v5.0.0 &gt; grid-list-component &gt; should be idempotent" time="0.000272833">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/icon-button-size.test.js" timestamp="2025-09-10T11:25:37.126Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.018914333">
        <testcase classname="packages/mui-codemod/src/v5.0.0/icon-button-size.test.js" name="@mui/codemod &gt; v5.0.0 &gt; icon-button-size &gt; transforms as needed" time="0.013000625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/icon-button-size.test.js" name="@mui/codemod &gt; v5.0.0 &gt; icon-button-size &gt; should be idempotent" time="0.005082125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/joy-avatar-remove-imgProps.test.js" timestamp="2025-09-10T11:25:37.126Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.020436416">
        <testcase classname="packages/mui-codemod/src/v5.0.0/joy-avatar-remove-imgProps.test.js" name="@mui/codemod &gt; v5.0.0 &gt; joy-avatar-remove-imgProps &gt; transforms `imgProps` prop to `slotProps.img`" time="0.019724791">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/joy-rename-classname-prefix.test.js" timestamp="2025-09-10T11:25:37.126Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.002326458">
        <testcase classname="packages/mui-codemod/src/v5.0.0/joy-rename-classname-prefix.test.js" name="@mui/codemod &gt; v5.0.0 &gt; joy-rename-classname-prefix &gt; transforms classname prefix from Joy to Mui" time="0.00165575">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/joy-rename-components-to-slots.test.js" timestamp="2025-09-10T11:25:37.126Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.022570125">
        <testcase classname="packages/mui-codemod/src/v5.0.0/joy-rename-components-to-slots.test.js" name="@mui/codemod &gt; v5.0.0 &gt; joy-rename-components-to-slots &gt; transforms props as needed" time="0.021829666">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/joy-rename-row-prop.test.js" timestamp="2025-09-10T11:25:37.126Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.018000917">
        <testcase classname="packages/mui-codemod/src/v5.0.0/joy-rename-row-prop.test.js" name="@mui/codemod &gt; v5.0.0 &gt; joy-rename-row-prop &gt; transforms `row` prop to `orientation=&quot;horizontal&quot;`" time="0.017102541">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/joy-text-field-to-input.test.js" timestamp="2025-09-10T11:25:37.127Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.029800167">
        <testcase classname="packages/mui-codemod/src/v5.0.0/joy-text-field-to-input.test.js" name="@mui/codemod &gt; v5.0.0 &gt; joy-text-field-to-input &gt; transform Joy TextField into Joy Input" time="0.029150584">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" timestamp="2025-09-10T11:25:37.127Z" hostname="Jans-MacBook-Air.local" tests="39" failures="0" errors="0" skipped="0" time="0.4374345">
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; falls back to the filename for naming" time="0.029632167">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; first &gt; transforms as needed" time="0.059749625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; first &gt; should be idempotent" time="0.031808708">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; second &gt; transforms as needed" time="0.012975916">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; second &gt; should be idempotent" time="0.006611917">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; third &gt; transforms as needed" time="0.011637666">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; third &gt; should be idempotent" time="0.002320417">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; fourth &gt; transforms as needed" time="0.006252458">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; fourth &gt; should be idempotent" time="0.004270583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; fifth &gt; transforms as needed" time="0.019548958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; fifth &gt; should be idempotent" time="0.00857725">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; sixth &gt; transforms as needed" time="0.018131333">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; sixth &gt; should be idempotent" time="0.005053916">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; seventh &gt; transforms as needed" time="0.017756958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; seventh &gt; should be idempotent" time="0.004578667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; with createStyles &gt; transforms as needed" time="0.006246458">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-styled &gt; with createStyles &gt; should be idempotent" time="0.00127775">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; with createStyles on withStyles &gt; transforms as needed" time="0.007001333">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; with createStyles on withStyles &gt; should be idempotent" time="0.001435458">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; with createStyles on withStyles directly &gt; transforms as needed" time="0.006644833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; with createStyles on withStyles directly &gt; should be idempotent" time="0.001364333">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; with createStyles directly &gt; transforms as needed" time="0.003919125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; with createStyles directly &gt; should be idempotent" time="0.001473292">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; transforms React.Fragment &gt; transforms as needed" time="0.035231708">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; transforms React.Fragment &gt; should be idempotent" time="0.022212959">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; transforms Fragment &gt; transforms as needed" time="0.007846375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; transforms Fragment &gt; should be idempotent" time="0.004352541">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; transforms &lt;&gt; &gt; transforms as needed" time="0.007309459">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; transforms &lt;&gt; &gt; should be idempotent" time="0.002385">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; transforms SomeNamespace.SomeComponent &gt; transforms as needed" time="0.005182958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; transforms SomeNamespace.SomeComponent &gt; should be idempotent" time="0.003366334">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; does not transform React.Suspense &gt; transforms as needed" time="0.004331041">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; does not transform React.Suspense &gt; should be idempotent" time="0.001347875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; bugs - #28317 export function declaration &gt; transforms as needed" time="0.006930458">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; bugs - #28317 export function declaration &gt; should be idempotent" time="0.001286542">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; bugs - #28317 export class declaration &gt; transforms as needed" time="0.006352125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; bugs - #28317 export class declaration &gt; should be idempotent" time="0.002450625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; bugs - #29363 multiple makeStyles with the same classKeys &gt; transforms as needed" time="0.04581975">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-styled.test.js" name="@mui/codemod &gt; v5.0.0 &gt; bugs - #29363 multiple makeStyles with the same classKeys &gt; should be idempotent" time="0.010693833">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/jss-to-tss-react.test.js" timestamp="2025-09-10T11:25:37.129Z" hostname="Jans-MacBook-Air.local" tests="11" failures="0" errors="0" skipped="0" time="0.127305875">
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-tss-react.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-tss-react &gt; transforms @material-ui/core/styles makeStyles to use tss-react" time="0.028188">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-tss-react.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-tss-react &gt; should be idempotent" time="0.003784292">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-tss-react.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-tss-react &gt; transforms @material-ui/core makeStyles to use tss-react" time="0.020855625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-tss-react.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-tss-react &gt; adds todo comments for scenarios that are not supported" time="0.024696833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-tss-react.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-tss-react &gt; transforms makeStyles with style rules returned by function to use tss-react" time="0.005935792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-tss-react.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-tss-react &gt; transforms @mui/styles makeStyles to use tss-react" time="0.00475875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-tss-react.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-tss-react &gt; transforms @mui/styles/makeStyles to use tss-react" time="0.006233667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-tss-react.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-tss-react &gt; transforms typescript makeStyles with nested selectors to use tss-react" time="0.007773042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-tss-react.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-tss-react &gt; transforms typescript makeStyles example in docs to use tss-react" time="0.006137458">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-tss-react.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-tss-react &gt; transforms typescript makeStyles advanced example in docs with params to use tss-react" time="0.009483667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/jss-to-tss-react.test.js" name="@mui/codemod &gt; v5.0.0 &gt; jss-to-tss-react &gt; transforms withStyles to use tss-react" time="0.008263834">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/link-underline-hover.test.js" timestamp="2025-09-10T11:25:37.130Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.020668666">
        <testcase classname="packages/mui-codemod/src/v5.0.0/link-underline-hover.test.js" name="@mui/codemod &gt; v5.0.0 &gt; link-underline-hover &gt; transforms props as needed" time="0.016474208">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/link-underline-hover.test.js" name="@mui/codemod &gt; v5.0.0 &gt; link-underline-hover &gt; should be idempotent" time="0.003430083">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/material-ui-styles.test.js" timestamp="2025-09-10T11:25:37.130Z" hostname="Jans-MacBook-Air.local" tests="5" failures="0" errors="0" skipped="0" time="0.034691083">
        <testcase classname="packages/mui-codemod/src/v5.0.0/material-ui-styles.test.js" name="@mui/codemod &gt; v5.0.0 &gt; material-ui-styles &gt; transforms props as needed" time="0.019934042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/material-ui-styles.test.js" name="@mui/codemod &gt; v5.0.0 &gt; material-ui-styles &gt; should be idempotent" time="0.00461625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/material-ui-styles.test.js" name="@mui/codemod &gt; v5.0.0 &gt; material-ui-styles &gt; remove no variable import" time="0.002123625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/material-ui-styles.test.js" name="@mui/codemod &gt; v5.0.0 &gt; material-ui-styles &gt; transform core import" time="0.004589333">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/material-ui-styles.test.js" name="@mui/codemod &gt; v5.0.0 &gt; material-ui-styles &gt; transform types import" time="0.002484459">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/material-ui-types.test.js" timestamp="2025-09-10T11:25:37.131Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.031400792">
        <testcase classname="packages/mui-codemod/src/v5.0.0/material-ui-types.test.js" name="@mui/codemod &gt; v5.0.0 &gt; material-ui-types &gt; transforms props as needed" time="0.023743125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/material-ui-types.test.js" name="@mui/codemod &gt; v5.0.0 &gt; material-ui-types &gt; should be idempotent" time="0.006546625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/modal-props.test.js" timestamp="2025-09-10T11:25:37.131Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.014456166">
        <testcase classname="packages/mui-codemod/src/v5.0.0/modal-props.test.js" name="@mui/codemod &gt; v5.0.0 &gt; modal-props &gt; transforms props as needed" time="0.011451667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/modal-props.test.js" name="@mui/codemod &gt; v5.0.0 &gt; modal-props &gt; should be idempotent" time="0.0021785">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/moved-lab-modules.test.js" timestamp="2025-09-10T11:25:37.131Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.026375792">
        <testcase classname="packages/mui-codemod/src/v5.0.0/moved-lab-modules.test.js" name="@mui/codemod &gt; v5.0.0 &gt; moved-lab-modules &gt; transforms exports as needed" time="0.021474416">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/moved-lab-modules.test.js" name="@mui/codemod &gt; v5.0.0 &gt; moved-lab-modules &gt; should be idempotent" time="0.003349292">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/mui-replace.test.js" timestamp="2025-09-10T11:25:37.131Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.0038075">
        <testcase classname="packages/mui-codemod/src/v5.0.0/mui-replace.test.js" name="@material-ui/codemod &gt; v5.0.0 &gt; mui-replace &gt; replace material-ui with mui" time="0.002277834">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/mui-replace.test.js" name="@material-ui/codemod &gt; v5.0.0 &gt; mui-replace &gt; should be idempotent" time="0.000274167">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/optimal-imports.test.js" timestamp="2025-09-10T11:25:37.132Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.310510333">
        <testcase classname="packages/mui-codemod/src/v5.0.0/optimal-imports.test.js" name="@mui/codemod &gt; v5.0.0 &gt; optimal-imports &gt; convert path as needed" time="0.305142375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/optimal-imports.test.js" name="@mui/codemod &gt; v5.0.0 &gt; optimal-imports &gt; should be idempotent" time="0.004097167">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/pagination-round-circular.test.js" timestamp="2025-09-10T11:25:37.132Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.019657083">
        <testcase classname="packages/mui-codemod/src/v5.0.0/pagination-round-circular.test.js" name="@mui/codemod &gt; v5.0.0 &gt; pagination-round-circular &gt; transforms props as needed" time="0.01630075">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/pagination-round-circular.test.js" name="@mui/codemod &gt; v5.0.0 &gt; pagination-round-circular &gt; should be idempotent" time="0.002635833">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/path-imports.test.js" timestamp="2025-09-10T11:25:37.132Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.352021625">
        <testcase classname="packages/mui-codemod/src/v5.0.0/path-imports.test.js" name="@mui/codemod &gt; v5.0.0 &gt; path-imports &gt; convert path as needed" time="0.185966">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/path-imports.test.js" name="@mui/codemod &gt; v5.0.0 &gt; path-imports &gt; should be idempotent" time="0.165235542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/preset-safe.test.js" timestamp="2025-09-10T11:25:37.132Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="1.873938458">
        <testcase classname="packages/mui-codemod/src/v5.0.0/preset-safe.test.js" name="@mui/codemod &gt; v5.0.0 &gt; preset-safe &gt; transforms props as needed" time="1.207226875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/preset-safe.test.js" name="@mui/codemod &gt; v5.0.0 &gt; preset-safe &gt; should be idempotent" time="0.665139542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/rename-css-variables.test.js" timestamp="2025-09-10T11:25:37.132Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.002788083">
        <testcase classname="packages/mui-codemod/src/v5.0.0/rename-css-variables.test.js" name="@mui/codemod &gt; v5.0.0 &gt; rename-css-variables &gt; renames css variables based on the new rules" time="0.001745">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/rename-css-variables.test.js" name="@mui/codemod &gt; v5.0.0 &gt; should be idempotent" time="0.000291125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/root-ref.test.js" timestamp="2025-09-10T11:25:37.133Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.005016292">
        <testcase classname="packages/mui-codemod/src/v5.0.0/root-ref.test.js" name="@mui/codemod &gt; v5.0.0 &gt; root-ref &gt; transforms props as needed" time="0.003419459">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/root-ref.test.js" name="@mui/codemod &gt; v5.0.0 &gt; root-ref &gt; should be idempotent" time="0.000309625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/skeleton-variant.test.js" timestamp="2025-09-10T11:25:37.133Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.025343291">
        <testcase classname="packages/mui-codemod/src/v5.0.0/skeleton-variant.test.js" name="@mui/codemod &gt; v5.0.0 &gt; skeleton-variant &gt; transforms props as needed" time="0.021088583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/skeleton-variant.test.js" name="@mui/codemod &gt; v5.0.0 &gt; skeleton-variant &gt; should be idempotent" time="0.003539417">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/styled-engine-provider.test.js" timestamp="2025-09-10T11:25:37.133Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.035844625">
        <testcase classname="packages/mui-codemod/src/v5.0.0/styled-engine-provider.test.js" name="@mui/codemod &gt; v5.0.0 &gt; new style-engine-provider import &gt; import StyleEngineProvider after MuiThemeProvider" time="0.018182916">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/styled-engine-provider.test.js" name="@mui/codemod &gt; v5.0.0 &gt; new style-engine-provider import &gt; should be idempotent" time="0.004780542">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/styled-engine-provider.test.js" name="@mui/codemod &gt; v5.0.0 &gt; new style-engine-provider import &gt; import StyleEngineProvider after ThemeProvider" time="0.011344958">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/table-props.test.js" timestamp="2025-09-10T11:25:37.133Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.022514666">
        <testcase classname="packages/mui-codemod/src/v5.0.0/table-props.test.js" name="@mui/codemod &gt; v5.0.0 &gt; table-props &gt; transforms as needed" time="0.017869166">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/table-props.test.js" name="@mui/codemod &gt; v5.0.0 &gt; table-props &gt; should be idempotent" time="0.003923917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/tabs-scroll-buttons.test.js" timestamp="2025-09-10T11:25:37.133Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.014925875">
        <testcase classname="packages/mui-codemod/src/v5.0.0/tabs-scroll-buttons.test.js" name="@mui/codemod &gt; v5.0.0 &gt; tabs-scroll-buttons &gt; transforms as needed" time="0.012086917">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/tabs-scroll-buttons.test.js" name="@mui/codemod &gt; v5.0.0 &gt; tabs-scroll-buttons &gt; should be idempotent" time="0.002078209">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/textarea-minmax-rows.test.js" timestamp="2025-09-10T11:25:37.134Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.017682375">
        <testcase classname="packages/mui-codemod/src/v5.0.0/textarea-minmax-rows.test.js" name="@mui/codemod &gt; v5.0.0 &gt; textarea-minmax-rows &gt; transforms props as needed" time="0.014058916">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/textarea-minmax-rows.test.js" name="@mui/codemod &gt; v5.0.0 &gt; textarea-minmax-rows &gt; should be idempotent" time="0.002873458">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/theme-breakpoints-width.test.js" timestamp="2025-09-10T11:25:37.134Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.003155417">
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-breakpoints-width.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-breakpoints-width &gt; transforms props as needed" time="0.002096625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-breakpoints-width.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-breakpoints-width &gt; should be idempotent" time="0.000284958">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/theme-breakpoints.test.js" timestamp="2025-09-10T11:25:37.134Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.018993708">
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-breakpoints.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-breakpoints &gt; transforms props as needed" time="0.017374667">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/theme-options.test.js" timestamp="2025-09-10T11:25:37.134Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.002853417">
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-options.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-options &gt; transforms props as needed" time="0.001874875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-options.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-options &gt; should be idempotent" time="0.000271583">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/theme-palette-mode.test.js" timestamp="2025-09-10T11:25:37.134Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.003253292">
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-palette-mode.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-palette-mode &gt; transforms props as needed" time="0.00232625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-palette-mode.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-palette-mode &gt; should be idempotent" time="0.000245959">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/theme-provider.test.js" timestamp="2025-09-10T11:25:37.135Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.023944167">
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-provider.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-provider &gt; transforms MuiThemeProvider as needed" time="0.016930084">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-provider.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-provider &gt; should be idempotent" time="0.002692042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-provider.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-provider &gt; transforms MuiThemeProvider in core import" time="0.003565875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/theme-spacing.test.js" timestamp="2025-09-10T11:25:37.135Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.005719417">
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-spacing.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-spacing &gt; transforms props as needed" time="0.0024075">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-spacing.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-spacing &gt; should be idempotent" time="0.000283042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-spacing.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-spacing &gt; large file - transforms props as needed" time="0.0018855">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-spacing.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-spacing &gt; large file - should be idempotent" time="0.000355125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/theme-typography-round.test.js" timestamp="2025-09-10T11:25:37.135Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.004315208">
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-typography-round.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-typography-round &gt; transforms props as needed" time="0.0025605">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/theme-typography-round.test.js" name="@mui/codemod &gt; v5.0.0 &gt; theme-typography-round &gt; should be idempotent" time="0.000304083">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/top-level-imports.test.js" timestamp="2025-09-10T11:25:37.135Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.602016">
        <testcase classname="packages/mui-codemod/src/v5.0.0/top-level-imports.test.js" name="@mui/codemod &gt; v5.0.0 &gt; top-level-imports &gt; convert path as needed" time="0.59540775">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/top-level-imports.test.js" name="@mui/codemod &gt; v5.0.0 &gt; top-level-imports &gt; should be idempotent" time="0.005329166">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/transitions.test.js" timestamp="2025-09-10T11:25:37.136Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.031794292">
        <testcase classname="packages/mui-codemod/src/v5.0.0/transitions.test.js" name="@mui/codemod &gt; v5.0.0 &gt; transitions &gt; transforms transitions as needed" time="0.025893834">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/transitions.test.js" name="@mui/codemod &gt; v5.0.0 &gt; transitions &gt; should be idempotent" time="0.004184333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/tree-view-moved-to-x.test.js" timestamp="2025-09-10T11:25:37.136Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.027114583">
        <testcase classname="packages/mui-codemod/src/v5.0.0/tree-view-moved-to-x.test.js" name="@mui/codemod &gt; v5.0.0 &gt; tree-view-moved-to-x &gt; transforms exports as needed (lab sub module)" time="0.015575375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/tree-view-moved-to-x.test.js" name="@mui/codemod &gt; v5.0.0 &gt; tree-view-moved-to-x &gt; should be idempotent (lab sub module)" time="0.003299416">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/tree-view-moved-to-x.test.js" name="@mui/codemod &gt; v5.0.0 &gt; tree-view-moved-to-x &gt; transforms exports as needed (lab root)" time="0.003924375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/tree-view-moved-to-x.test.js" name="@mui/codemod &gt; v5.0.0 &gt; tree-view-moved-to-x &gt; should be idempotent (lab root)" time="0.00252225">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/use-autocomplete.test.js" timestamp="2025-09-10T11:25:37.136Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.019040917">
        <testcase classname="packages/mui-codemod/src/v5.0.0/use-autocomplete.test.js" name="@mui/codemod &gt; v5.0.0 &gt; use-autocomplete &gt; transforms props as needed" time="0.015642916">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/use-autocomplete.test.js" name="@mui/codemod &gt; v5.0.0 &gt; use-autocomplete &gt; should be idempotent" time="0.002224167">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/use-transitionprops.test.js" timestamp="2025-09-10T11:25:37.136Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.051684875">
        <testcase classname="packages/mui-codemod/src/v5.0.0/use-transitionprops.test.js" name="@mui/codemod &gt; v5.0.0 &gt; use-transitionprops &gt; transforms props as needed" time="0.029342625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/use-transitionprops.test.js" name="@mui/codemod &gt; v5.0.0 &gt; use-transitionprops &gt; should be idempotent" time="0.020069792">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/variant-prop.test.js" timestamp="2025-09-10T11:25:37.136Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.058983417">
        <testcase classname="packages/mui-codemod/src/v5.0.0/variant-prop.test.js" name="@mui/codemod &gt; v5.0.0 &gt; variant-prop &gt; transforms props as needed" time="0.0427205">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/variant-prop.test.js" name="@mui/codemod &gt; v5.0.0 &gt; variant-prop &gt; should be idempotent" time="0.015532583">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/with-mobile-dialog.test.js" timestamp="2025-09-10T11:25:37.137Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.032384333">
        <testcase classname="packages/mui-codemod/src/v5.0.0/with-mobile-dialog.test.js" name="@mui/codemod &gt; v5.0.0 &gt; with-mobile-dialog &gt; transforms as needed" time="0.020988917">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/with-mobile-dialog.test.js" name="@mui/codemod &gt; v5.0.0 &gt; with-mobile-dialog &gt; should be idempotent" time="0.008836791">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/with-mobile-dialog.test.js" name="@mui/codemod &gt; v5.0.0 &gt; with-mobile-dialog &gt; should not remove import from core" time="0.001756375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v5.0.0/with-width.test.js" timestamp="2025-09-10T11:25:37.137Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.027353458">
        <testcase classname="packages/mui-codemod/src/v5.0.0/with-width.test.js" name="@mui/codemod &gt; v5.0.0 &gt; with-width &gt; transforms props as needed" time="0.018323291">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/with-width.test.js" name="@mui/codemod &gt; v5.0.0 &gt; with-width &gt; should be idempotent" time="0.006592042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v5.0.0/with-width.test.js" name="@mui/codemod &gt; v5.0.0 &gt; with-width &gt; should not remove import from core" time="0.001729125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/accordion-props/accordion-props.test.js" timestamp="2025-09-10T11:25:37.137Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.097832584">
        <testcase classname="packages/mui-codemod/src/deprecations/accordion-props/accordion-props.test.js" name="@mui/codemod &gt; deprecations &gt; accordion-props &gt; transforms props as needed" time="0.0437755">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/accordion-props/accordion-props.test.js" name="@mui/codemod &gt; deprecations &gt; accordion-props &gt; should be idempotent" time="0.014355166">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/accordion-props/accordion-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] accordion-props &gt; transforms props as needed" time="0.005377708">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/accordion-props/accordion-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] accordion-props &gt; should be idempotent" time="0.012277125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/accordion-props/accordion-props.test.js" name="@mui/codemod &gt; deprecations &gt; [custom package] accordion-props &gt; transforms props as needed" time="0.016549167">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/accordion-props/accordion-props.test.js" name="@mui/codemod &gt; deprecations &gt; [custom package] accordion-props &gt; should be idempotent" time="0.004402791">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/accordion-summary-classes/accordion-summary-classes.test.js" timestamp="2025-09-10T11:25:37.138Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.070788709">
        <testcase classname="packages/mui-codemod/src/deprecations/accordion-summary-classes/accordion-summary-classes.test.js" name="@mui/codemod &gt; deprecations &gt; accordion-summary-classes &gt; js-transform &gt; transforms props as needed" time="0.040453291">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/accordion-summary-classes/accordion-summary-classes.test.js" name="@mui/codemod &gt; deprecations &gt; accordion-summary-classes &gt; js-transform &gt; should be idempotent" time="0.011575583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/accordion-summary-classes/accordion-summary-classes.test.js" name="@mui/codemod &gt; deprecations &gt; accordion-summary-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.006075042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/accordion-summary-classes/accordion-summary-classes.test.js" name="@mui/codemod &gt; deprecations &gt; accordion-summary-classes &gt; [package] js-transform &gt; should be idempotent" time="0.004407">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/accordion-summary-classes/accordion-summary-classes.test.js" name="@mui/codemod &gt; deprecations &gt; accordion-summary-classes &gt; css-transform &gt; transforms classes as needed" time="0.0058755">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/accordion-summary-classes/accordion-summary-classes.test.js" name="@mui/codemod &gt; deprecations &gt; accordion-summary-classes &gt; css-transform &gt; should be idempotent" time="0.00055725">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/accordion-summary-classes/accordion-summary-classes.test.js" name="@mui/codemod &gt; deprecations &gt; accordion-summary-classes &gt; test-cases &gt; should not be the same" time="0.000351667">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/alert-classes/alert-classes.test.js" timestamp="2025-09-10T11:25:37.138Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.099881209">
        <testcase classname="packages/mui-codemod/src/deprecations/alert-classes/alert-classes.test.js" name="@mui/codemod &gt; deprecations &gt; alert-classes &gt; js-transform &gt; transforms props as needed" time="0.045897917">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/alert-classes/alert-classes.test.js" name="@mui/codemod &gt; deprecations &gt; alert-classes &gt; js-transform &gt; should be idempotent" time="0.012330292">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/alert-classes/alert-classes.test.js" name="@mui/codemod &gt; deprecations &gt; alert-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.024744583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/alert-classes/alert-classes.test.js" name="@mui/codemod &gt; deprecations &gt; alert-classes &gt; [package] js-transform &gt; should be idempotent" time="0.009792958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/alert-classes/alert-classes.test.js" name="@mui/codemod &gt; deprecations &gt; alert-classes &gt; css-transform &gt; transforms classes as needed" time="0.00417075">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/alert-classes/alert-classes.test.js" name="@mui/codemod &gt; deprecations &gt; alert-classes &gt; css-transform &gt; should be idempotent" time="0.0005695">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/alert-classes/alert-classes.test.js" name="@mui/codemod &gt; deprecations &gt; alert-classes &gt; test-cases &gt; should not be the same" time="0.000302666">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/alert-props/alert-props.test.js" timestamp="2025-09-10T11:25:37.139Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.104003833">
        <testcase classname="packages/mui-codemod/src/deprecations/alert-props/alert-props.test.js" name="@mui/codemod &gt; deprecations &gt; alert-props &gt; transforms props as needed" time="0.046500708">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/alert-props/alert-props.test.js" name="@mui/codemod &gt; deprecations &gt; alert-props &gt; should be idempotent" time="0.008544583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/alert-props/alert-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] alert-props &gt; transforms props as needed" time="0.016447375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/alert-props/alert-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] alert-props &gt; should be idempotent" time="0.010171583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/alert-props/alert-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] alert-props &gt; transforms props as needed" time="0.011387833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/alert-props/alert-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] alert-props &gt; should be idempotent" time="0.009025084">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/autocomplete-props/autocomplete-props.test.js" timestamp="2025-09-10T11:25:37.139Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.237408209">
        <testcase classname="packages/mui-codemod/src/deprecations/autocomplete-props/autocomplete-props.test.js" name="@mui/codemod &gt; deprecations &gt; autocomplete-props &gt; transforms props as needed" time="0.062938917">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/autocomplete-props/autocomplete-props.test.js" name="@mui/codemod &gt; deprecations &gt; autocomplete-props &gt; should be idempotent" time="0.017545458">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/autocomplete-props/autocomplete-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] autocomplete-props &gt; transforms props as needed" time="0.065957875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/autocomplete-props/autocomplete-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] autocomplete-props &gt; should be idempotent" time="0.042802375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/autocomplete-props/autocomplete-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] autocomplete-props &gt; transforms props as needed" time="0.030953583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/autocomplete-props/autocomplete-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] autocomplete-props &gt; should be idempotent" time="0.01566625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/avatar-group-props/avatar-group-props.test.js" timestamp="2025-09-10T11:25:37.139Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.071445792">
        <testcase classname="packages/mui-codemod/src/deprecations/avatar-group-props/avatar-group-props.test.js" name="@mui/codemod &gt; deprecations &gt; avatar-group-props &gt; transforms props as needed" time="0.03888175">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/avatar-group-props/avatar-group-props.test.js" name="@mui/codemod &gt; deprecations &gt; avatar-group-props &gt; should be idempotent" time="0.007116459">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/avatar-group-props/avatar-group-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] avatar-group-props &gt; transforms props as needed" time="0.009328209">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/avatar-group-props/avatar-group-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] avatar-group-props &gt; should be idempotent" time="0.0042305">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/avatar-group-props/avatar-group-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] avatar-group-props &gt; transforms props as needed" time="0.005388667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/avatar-group-props/avatar-group-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] avatar-group-props &gt; should be idempotent" time="0.005362333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/avatar-props/avatar-props.test.js" timestamp="2025-09-10T11:25:37.140Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.060129667">
        <testcase classname="packages/mui-codemod/src/deprecations/avatar-props/avatar-props.test.js" name="@mui/codemod &gt; deprecations &gt; avatar-props &gt; transforms props as needed" time="0.026079083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/avatar-props/avatar-props.test.js" name="@mui/codemod &gt; deprecations &gt; avatar-props &gt; should be idempotent" time="0.011882667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/avatar-props/avatar-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] avatar-props &gt; transforms props as needed" time="0.00545375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/avatar-props/avatar-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] avatar-props &gt; should be idempotent" time="0.005958584">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/avatar-props/avatar-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] avatar-props &gt; transforms props as needed" time="0.006513458">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/avatar-props/avatar-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] avatar-props &gt; should be idempotent" time="0.003120167">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/backdrop-props/backdrop-props.test.js" timestamp="2025-09-10T11:25:37.140Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.089494041">
        <testcase classname="packages/mui-codemod/src/deprecations/backdrop-props/backdrop-props.test.js" name="@mui/codemod &gt; deprecations &gt; backdrop-props &gt; transforms as needed" time="0.04253475">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/backdrop-props/backdrop-props.test.js" name="@mui/codemod &gt; deprecations &gt; backdrop-props &gt; should be idempotent" time="0.009798584">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/backdrop-props/backdrop-props.test.js" name="@mui/codemod &gt; deprecations &gt; backdrop-props &gt; transforms as needed" time="0.013773583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/backdrop-props/backdrop-props.test.js" name="@mui/codemod &gt; deprecations &gt; backdrop-props &gt; should be idempotent" time="0.009492875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/backdrop-props/backdrop-props.test.js" name="@mui/codemod &gt; deprecations &gt; backdrop-props &gt; transforms as needed" time="0.006239792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/backdrop-props/backdrop-props.test.js" name="@mui/codemod &gt; deprecations &gt; backdrop-props &gt; should be idempotent" time="0.004465">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/badge-props/badge-props.test.js" timestamp="2025-09-10T11:25:37.141Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.086713417">
        <testcase classname="packages/mui-codemod/src/deprecations/badge-props/badge-props.test.js" name="@mui/codemod &gt; deprecations &gt; badge-props &gt; transforms props as needed" time="0.044044375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/badge-props/badge-props.test.js" name="@mui/codemod &gt; deprecations &gt; badge-props &gt; should be idempotent" time="0.007010208">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/badge-props/badge-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] badge-props &gt; transforms props as needed" time="0.011746583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/badge-props/badge-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] badge-props &gt; should be idempotent" time="0.008614791">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/badge-props/badge-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] badge-props &gt; transforms props as needed" time="0.006914583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/badge-props/badge-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] badge-props &gt; should be idempotent" time="0.005960709">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/button-classes/button-classes.test.js" timestamp="2025-09-10T11:25:37.141Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.325975083">
        <testcase classname="packages/mui-codemod/src/deprecations/button-classes/button-classes.test.js" name="@mui/codemod &gt; deprecations &gt; button-classes &gt; js-transform &gt; transforms props as needed" time="0.114121292">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/button-classes/button-classes.test.js" name="@mui/codemod &gt; deprecations &gt; button-classes &gt; js-transform &gt; should be idempotent" time="0.076631416">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/button-classes/button-classes.test.js" name="@mui/codemod &gt; deprecations &gt; button-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.07335275">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/button-classes/button-classes.test.js" name="@mui/codemod &gt; deprecations &gt; button-classes &gt; [package] js-transform &gt; should be idempotent" time="0.052702792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/button-classes/button-classes.test.js" name="@mui/codemod &gt; deprecations &gt; button-classes &gt; css-transform &gt; transforms classes as needed" time="0.006095459">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/button-classes/button-classes.test.js" name="@mui/codemod &gt; deprecations &gt; button-classes &gt; css-transform &gt; should be idempotent" time="0.00095">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/button-classes/button-classes.test.js" name="@mui/codemod &gt; deprecations &gt; button-classes &gt; test-cases &gt; should not be the same" time="0.0004895">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/button-group-classes/button-group-classes.test.js" timestamp="2025-09-10T11:25:37.142Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.201151125">
        <testcase classname="packages/mui-codemod/src/deprecations/button-group-classes/button-group-classes.test.js" name="@mui/codemod &gt; deprecations &gt; button-group-classes &gt; js-transform &gt; transforms props as needed" time="0.0887905">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/button-group-classes/button-group-classes.test.js" name="@mui/codemod &gt; deprecations &gt; button-group-classes &gt; js-transform &gt; should be idempotent" time="0.035737542">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/button-group-classes/button-group-classes.test.js" name="@mui/codemod &gt; deprecations &gt; button-group-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.03838975">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/button-group-classes/button-group-classes.test.js" name="@mui/codemod &gt; deprecations &gt; button-group-classes &gt; [package] js-transform &gt; should be idempotent" time="0.027314375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/button-group-classes/button-group-classes.test.js" name="@mui/codemod &gt; deprecations &gt; button-group-classes &gt; css-transform &gt; transforms classes as needed" time="0.008612042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/button-group-classes/button-group-classes.test.js" name="@mui/codemod &gt; deprecations &gt; button-group-classes &gt; css-transform &gt; should be idempotent" time="0.000756542">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/button-group-classes/button-group-classes.test.js" name="@mui/codemod &gt; deprecations &gt; button-group-classes &gt; test-cases &gt; should not be the same" time="0.000288417">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/chip-classes/chip-classes.test.js" timestamp="2025-09-10T11:25:37.142Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.2281145">
        <testcase classname="packages/mui-codemod/src/deprecations/chip-classes/chip-classes.test.js" name="@mui/codemod &gt; deprecations &gt; chip-classes &gt; js-transform &gt; transforms props as needed" time="0.092192834">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/chip-classes/chip-classes.test.js" name="@mui/codemod &gt; deprecations &gt; chip-classes &gt; js-transform &gt; should be idempotent" time="0.051082917">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/chip-classes/chip-classes.test.js" name="@mui/codemod &gt; deprecations &gt; chip-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.037966042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/chip-classes/chip-classes.test.js" name="@mui/codemod &gt; deprecations &gt; chip-classes &gt; [package] js-transform &gt; should be idempotent" time="0.037624083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/chip-classes/chip-classes.test.js" name="@mui/codemod &gt; deprecations &gt; chip-classes &gt; css-transform &gt; transforms classes as needed" time="0.004744875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/chip-classes/chip-classes.test.js" name="@mui/codemod &gt; deprecations &gt; chip-classes &gt; css-transform &gt; should be idempotent" time="0.000812834">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/chip-classes/chip-classes.test.js" name="@mui/codemod &gt; deprecations &gt; chip-classes &gt; test-cases &gt; should not be the same" time="0.000286209">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/card-header-props/card-header-props.test.js" timestamp="2025-09-10T11:25:37.143Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.063819917">
        <testcase classname="packages/mui-codemod/src/deprecations/card-header-props/card-header-props.test.js" name="@mui/codemod &gt; deprecations &gt; tooltip-props &gt; transforms as needed" time="0.034590084">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/card-header-props/card-header-props.test.js" name="@mui/codemod &gt; deprecations &gt; tooltip-props &gt; should be idempotent" time="0.010826958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/card-header-props/card-header-props.test.js" name="@mui/codemod &gt; deprecations &gt; tooltip-props &gt; transforms as needed" time="0.010649458">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/card-header-props/card-header-props.test.js" name="@mui/codemod &gt; deprecations &gt; tooltip-props &gt; should be idempotent" time="0.006388958">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/dialog-props/dialog-props.test.js" timestamp="2025-09-10T11:25:37.143Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.093080042">
        <testcase classname="packages/mui-codemod/src/deprecations/dialog-props/dialog-props.test.js" name="@mui/codemod &gt; deprecations &gt; dialog-props &gt; transforms props as needed" time="0.048715958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/dialog-props/dialog-props.test.js" name="@mui/codemod &gt; deprecations &gt; dialog-props &gt; should be idempotent" time="0.007847083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/dialog-props/dialog-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] dialog-props &gt; transforms props as needed" time="0.007758791">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/dialog-props/dialog-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] dialog-props &gt; should be idempotent" time="0.010775625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/dialog-props/dialog-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] dialog-props &gt; transforms props as needed" time="0.006145458">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/dialog-props/dialog-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] dialog-props &gt; should be idempotent" time="0.009627125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/circular-progress-classes/circular-progress-classes.test.js" timestamp="2025-09-10T11:25:37.143Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.047735583">
        <testcase classname="packages/mui-codemod/src/deprecations/circular-progress-classes/circular-progress-classes.test.js" name="@mui/codemod &gt; deprecations &gt; circular-progress-classes &gt; js-transform &gt; transforms props as needed" time="0.022401167">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/circular-progress-classes/circular-progress-classes.test.js" name="@mui/codemod &gt; deprecations &gt; circular-progress-classes &gt; js-transform &gt; should be idempotent" time="0.003900833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/circular-progress-classes/circular-progress-classes.test.js" name="@mui/codemod &gt; deprecations &gt; circular-progress-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.008054292">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/circular-progress-classes/circular-progress-classes.test.js" name="@mui/codemod &gt; deprecations &gt; circular-progress-classes &gt; [package] js-transform &gt; should be idempotent" time="0.007233875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/circular-progress-classes/circular-progress-classes.test.js" name="@mui/codemod &gt; deprecations &gt; circular-progress-classes &gt; css-transform &gt; transforms classes as needed" time="0.003689875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/circular-progress-classes/circular-progress-classes.test.js" name="@mui/codemod &gt; deprecations &gt; circular-progress-classes &gt; css-transform &gt; should be idempotent" time="0.000522416">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/circular-progress-classes/circular-progress-classes.test.js" name="@mui/codemod &gt; deprecations &gt; circular-progress-classes &gt; test-cases &gt; should not be the same" time="0.000217792">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/dialog-classes/dialog-classes.test.js" timestamp="2025-09-10T11:25:37.144Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.058938292">
        <testcase classname="packages/mui-codemod/src/deprecations/dialog-classes/dialog-classes.test.js" name="@mui/codemod &gt; deprecations &gt; dialog-classes &gt; js-transform &gt; transforms props as needed" time="0.028173">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/dialog-classes/dialog-classes.test.js" name="@mui/codemod &gt; deprecations &gt; dialog-classes &gt; js-transform &gt; should be idempotent" time="0.003747625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/dialog-classes/dialog-classes.test.js" name="@mui/codemod &gt; deprecations &gt; dialog-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.007632334">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/dialog-classes/dialog-classes.test.js" name="@mui/codemod &gt; deprecations &gt; dialog-classes &gt; [package] js-transform &gt; should be idempotent" time="0.008218625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/dialog-classes/dialog-classes.test.js" name="@mui/codemod &gt; deprecations &gt; dialog-classes &gt; css-transform &gt; transforms classes as needed" time="0.004103208">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/dialog-classes/dialog-classes.test.js" name="@mui/codemod &gt; deprecations &gt; dialog-classes &gt; css-transform &gt; should be idempotent" time="0.0005205">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/dialog-classes/dialog-classes.test.js" name="@mui/codemod &gt; deprecations &gt; dialog-classes &gt; test-cases &gt; should not be the same" time="0.000229333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/drawer-classes/drawer-classes.test.js" timestamp="2025-09-10T11:25:37.144Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.099608958">
        <testcase classname="packages/mui-codemod/src/deprecations/drawer-classes/drawer-classes.test.js" name="@mui/codemod &gt; deprecations &gt; drawer-classes &gt; js-transform &gt; transforms props as needed" time="0.053981792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/drawer-classes/drawer-classes.test.js" name="@mui/codemod &gt; deprecations &gt; drawer-classes &gt; js-transform &gt; should be idempotent" time="0.0138175">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/drawer-classes/drawer-classes.test.js" name="@mui/codemod &gt; deprecations &gt; drawer-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.017292083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/drawer-classes/drawer-classes.test.js" name="@mui/codemod &gt; deprecations &gt; drawer-classes &gt; [package] js-transform &gt; should be idempotent" time="0.008218542">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/drawer-classes/drawer-classes.test.js" name="@mui/codemod &gt; deprecations &gt; drawer-classes &gt; css-transform &gt; transforms classes as needed" time="0.00399875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/drawer-classes/drawer-classes.test.js" name="@mui/codemod &gt; deprecations &gt; drawer-classes &gt; css-transform &gt; should be idempotent" time="0.000747792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/drawer-classes/drawer-classes.test.js" name="@mui/codemod &gt; deprecations &gt; drawer-classes &gt; test-cases &gt; should not be the same" time="0.000291334">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/divider-props/divider-props.test.js" timestamp="2025-09-10T11:25:37.145Z" hostname="Jans-MacBook-Air.local" tests="8" failures="0" errors="0" skipped="0" time="0.075108959">
        <testcase classname="packages/mui-codemod/src/deprecations/divider-props/divider-props.test.js" name="@mui/codemod &gt; deprecations &gt; divider-props &gt; transforms props as needed" time="0.029468834">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/divider-props/divider-props.test.js" name="@mui/codemod &gt; deprecations &gt; divider-props &gt; should be idempotent" time="0.005692083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/divider-props/divider-props.test.js" name="@mui/codemod &gt; deprecations &gt; divider-props &gt; actual.js should not be equal to expected.js" time="0.000275333">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/divider-props/divider-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] divider-props &gt; transforms props as needed" time="0.019951708">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/divider-props/divider-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] divider-props &gt; should be idempotent" time="0.010533792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/divider-props/divider-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] divider-props &gt; theme.actual.js should not be equal to theme.expected.js" time="0.000213333">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/divider-props/divider-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] divider-props &gt; transforms props as needed" time="0.00418475">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/divider-props/divider-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] divider-props &gt; should be idempotent" time="0.003001417">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/drawer-props/drawer-props.test.js" timestamp="2025-09-10T11:25:37.145Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.143352458">
        <testcase classname="packages/mui-codemod/src/deprecations/drawer-props/drawer-props.test.js" name="@mui/codemod &gt; deprecations &gt; drawer-props &gt; transforms as needed" time="0.069496542">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/drawer-props/drawer-props.test.js" name="@mui/codemod &gt; deprecations &gt; drawer-props &gt; should be idempotent" time="0.016379792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/drawer-props/drawer-props.test.js" name="@mui/codemod &gt; deprecations &gt; drawer-props &gt; transforms as needed" time="0.019213709">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/drawer-props/drawer-props.test.js" name="@mui/codemod &gt; deprecations &gt; drawer-props &gt; should be idempotent" time="0.010850667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/drawer-props/drawer-props.test.js" name="@mui/codemod &gt; deprecations &gt; drawer-props &gt; transforms as needed" time="0.01297125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/drawer-props/drawer-props.test.js" name="@mui/codemod &gt; deprecations &gt; drawer-props &gt; should be idempotent" time="0.01344725">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/filled-input-props/filled-input-props.test.js" timestamp="2025-09-10T11:25:37.146Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.074584875">
        <testcase classname="packages/mui-codemod/src/deprecations/filled-input-props/filled-input-props.test.js" name="@mui/codemod &gt; deprecations &gt; filled-input-props &gt; transforms as needed" time="0.023542209">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/filled-input-props/filled-input-props.test.js" name="@mui/codemod &gt; deprecations &gt; filled-input-props &gt; should be idempotent" time="0.004738792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/filled-input-props/filled-input-props.test.js" name="@mui/codemod &gt; deprecations &gt; filled-input-props &gt; transforms as needed" time="0.016490042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/filled-input-props/filled-input-props.test.js" name="@mui/codemod &gt; deprecations &gt; filled-input-props &gt; should be idempotent" time="0.009872958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/filled-input-props/filled-input-props.test.js" name="@mui/codemod &gt; deprecations &gt; filled-input-props &gt; transforms as needed" time="0.012174459">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/filled-input-props/filled-input-props.test.js" name="@mui/codemod &gt; deprecations &gt; filled-input-props &gt; should be idempotent" time="0.006700791">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/form-control-label-props/form-control-label-props.test.js" timestamp="2025-09-10T11:25:37.146Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.048255834">
        <testcase classname="packages/mui-codemod/src/deprecations/form-control-label-props/form-control-label-props.test.js" name="@mui/codemod &gt; deprecations &gt; form-control-label-props &gt; transforms props as needed" time="0.0175295">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/form-control-label-props/form-control-label-props.test.js" name="@mui/codemod &gt; deprecations &gt; form-control-label-props &gt; should be idempotent" time="0.005159167">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/form-control-label-props/form-control-label-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] form-control-label-props &gt; transforms props as needed" time="0.006023833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/form-control-label-props/form-control-label-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] form-control-label-props &gt; should be idempotent" time="0.005626417">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/form-control-label-props/form-control-label-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] form-control-label-props &gt; transforms props as needed" time="0.010415083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/form-control-label-props/form-control-label-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] form-control-label-props &gt; should be idempotent" time="0.002106542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/image-list-item-bar-classes/image-list-item-bar-classes.test.js" timestamp="2025-09-10T11:25:37.146Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.057209791">
        <testcase classname="packages/mui-codemod/src/deprecations/image-list-item-bar-classes/image-list-item-bar-classes.test.js" name="@mui/codemod &gt; deprecations &gt; image-list-item-bar-classes &gt; js-transform &gt; transforms props as needed" time="0.025469667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/image-list-item-bar-classes/image-list-item-bar-classes.test.js" name="@mui/codemod &gt; deprecations &gt; image-list-item-bar-classes &gt; js-transform &gt; should be idempotent" time="0.013997333">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/image-list-item-bar-classes/image-list-item-bar-classes.test.js" name="@mui/codemod &gt; deprecations &gt; image-list-item-bar-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.005133667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/image-list-item-bar-classes/image-list-item-bar-classes.test.js" name="@mui/codemod &gt; deprecations &gt; image-list-item-bar-classes &gt; [package] js-transform &gt; should be idempotent" time="0.00704925">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/image-list-item-bar-classes/image-list-item-bar-classes.test.js" name="@mui/codemod &gt; deprecations &gt; image-list-item-bar-classes &gt; css-transform &gt; transforms classes as needed" time="0.003295458">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/image-list-item-bar-classes/image-list-item-bar-classes.test.js" name="@mui/codemod &gt; deprecations &gt; image-list-item-bar-classes &gt; css-transform &gt; should be idempotent" time="0.000691792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/image-list-item-bar-classes/image-list-item-bar-classes.test.js" name="@mui/codemod &gt; deprecations &gt; image-list-item-bar-classes &gt; test-cases &gt; should not be the same" time="0.000273625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/input-base-classes/input-base-classes.test.js" timestamp="2025-09-10T11:25:37.147Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.089901375">
        <testcase classname="packages/mui-codemod/src/deprecations/input-base-classes/input-base-classes.test.js" name="@mui/codemod &gt; deprecations &gt; input-base-classes &gt; js-transform &gt; transforms props as needed" time="0.05908725">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-base-classes/input-base-classes.test.js" name="@mui/codemod &gt; deprecations &gt; input-base-classes &gt; js-transform &gt; should be idempotent" time="0.009936791">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-base-classes/input-base-classes.test.js" name="@mui/codemod &gt; deprecations &gt; input-base-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.009417166">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-base-classes/input-base-classes.test.js" name="@mui/codemod &gt; deprecations &gt; input-base-classes &gt; [package] js-transform &gt; should be idempotent" time="0.0046365">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-base-classes/input-base-classes.test.js" name="@mui/codemod &gt; deprecations &gt; input-base-classes &gt; css-transform &gt; transforms classes as needed" time="0.003976833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-base-classes/input-base-classes.test.js" name="@mui/codemod &gt; deprecations &gt; input-base-classes &gt; css-transform &gt; should be idempotent" time="0.000790334">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-base-classes/input-base-classes.test.js" name="@mui/codemod &gt; deprecations &gt; input-base-classes &gt; test-cases &gt; should not be the same" time="0.000502917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/input-base-props/input-base-props.test.js" timestamp="2025-09-10T11:25:37.147Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.060358417">
        <testcase classname="packages/mui-codemod/src/deprecations/input-base-props/input-base-props.test.js" name="@mui/codemod &gt; deprecations &gt; input-base-props &gt; transforms as needed" time="0.027477375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-base-props/input-base-props.test.js" name="@mui/codemod &gt; deprecations &gt; input-base-props &gt; should be idempotent" time="0.008281792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-base-props/input-base-props.test.js" name="@mui/codemod &gt; deprecations &gt; input-base-props &gt; transforms as needed" time="0.010248042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-base-props/input-base-props.test.js" name="@mui/codemod &gt; deprecations &gt; input-base-props &gt; should be idempotent" time="0.006070584">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-base-props/input-base-props.test.js" name="@mui/codemod &gt; deprecations &gt; input-base-props &gt; transforms as needed" time="0.004597417">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-base-props/input-base-props.test.js" name="@mui/codemod &gt; deprecations &gt; input-base-props &gt; should be idempotent" time="0.002824042">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/input-props/input-props.test.js" timestamp="2025-09-10T11:25:37.148Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.065212708">
        <testcase classname="packages/mui-codemod/src/deprecations/input-props/input-props.test.js" name="@mui/codemod &gt; deprecations &gt; input-props &gt; transforms as needed" time="0.031240875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-props/input-props.test.js" name="@mui/codemod &gt; deprecations &gt; input-props &gt; should be idempotent" time="0.004500958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-props/input-props.test.js" name="@mui/codemod &gt; deprecations &gt; input-props &gt; transforms as needed" time="0.01413675">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-props/input-props.test.js" name="@mui/codemod &gt; deprecations &gt; input-props &gt; should be idempotent" time="0.004369208">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-props/input-props.test.js" name="@mui/codemod &gt; deprecations &gt; input-props &gt; transforms as needed" time="0.007196417">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/input-props/input-props.test.js" name="@mui/codemod &gt; deprecations &gt; input-props &gt; should be idempotent" time="0.00282475">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/linear-progress-classes/linear-progress-classes.test.js" timestamp="2025-09-10T11:25:37.148Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.128116917">
        <testcase classname="packages/mui-codemod/src/deprecations/linear-progress-classes/linear-progress-classes.test.js" name="@mui/codemod &gt; deprecations &gt; linear-progress-classes &gt; js-transform &gt; transforms props as needed" time="0.066314417">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/linear-progress-classes/linear-progress-classes.test.js" name="@mui/codemod &gt; deprecations &gt; linear-progress-classes &gt; js-transform &gt; should be idempotent" time="0.033222708">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/linear-progress-classes/linear-progress-classes.test.js" name="@mui/codemod &gt; deprecations &gt; linear-progress-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.010559709">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/linear-progress-classes/linear-progress-classes.test.js" name="@mui/codemod &gt; deprecations &gt; linear-progress-classes &gt; [package] js-transform &gt; should be idempotent" time="0.010117375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/linear-progress-classes/linear-progress-classes.test.js" name="@mui/codemod &gt; deprecations &gt; linear-progress-classes &gt; css-transform &gt; transforms classes as needed" time="0.005854">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/linear-progress-classes/linear-progress-classes.test.js" name="@mui/codemod &gt; deprecations &gt; linear-progress-classes &gt; css-transform &gt; should be idempotent" time="0.000530583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/linear-progress-classes/linear-progress-classes.test.js" name="@mui/codemod &gt; deprecations &gt; linear-progress-classes &gt; test-cases &gt; should not be the same" time="0.000285">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/list-item-props/list-item-props.test.js" timestamp="2025-09-10T11:25:37.149Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.109108125">
        <testcase classname="packages/mui-codemod/src/deprecations/list-item-props/list-item-props.test.js" name="@mui/codemod &gt; deprecations &gt; list-item-props &gt; transforms props as needed" time="0.039263834">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/list-item-props/list-item-props.test.js" name="@mui/codemod &gt; deprecations &gt; list-item-props &gt; should be idempotent" time="0.005163583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/list-item-props/list-item-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] list-item-props &gt; transforms props as needed" time="0.01934875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/list-item-props/list-item-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] list-item-props &gt; should be idempotent" time="0.02546525">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/list-item-props/list-item-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] list-item-props &gt; transforms props as needed" time="0.005802167">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/list-item-props/list-item-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] list-item-props &gt; should be idempotent" time="0.01241875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/menu-props/menu-props.test.js" timestamp="2025-09-10T11:25:37.149Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.10553325">
        <testcase classname="packages/mui-codemod/src/deprecations/menu-props/menu-props.test.js" name="@mui/codemod &gt; deprecations &gt; menu-props &gt; transforms as needed" time="0.060819125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/menu-props/menu-props.test.js" name="@mui/codemod &gt; deprecations &gt; menu-props &gt; should be idempotent" time="0.013824084">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/menu-props/menu-props.test.js" name="@mui/codemod &gt; deprecations &gt; menu-props &gt; transforms as needed" time="0.007633834">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/menu-props/menu-props.test.js" name="@mui/codemod &gt; deprecations &gt; menu-props &gt; should be idempotent" time="0.0069705">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/menu-props/menu-props.test.js" name="@mui/codemod &gt; deprecations &gt; menu-props &gt; transforms as needed" time="0.008495958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/menu-props/menu-props.test.js" name="@mui/codemod &gt; deprecations &gt; menu-props &gt; should be idempotent" time="0.00664125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/mobile-stepper-props/mobile-stepper-props.test.js" timestamp="2025-09-10T11:25:37.150Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.05216675">
        <testcase classname="packages/mui-codemod/src/deprecations/mobile-stepper-props/mobile-stepper-props.test.js" name="@mui/codemod &gt; deprecations &gt; mobile-stepper-props &gt; transforms as needed" time="0.024632291">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/mobile-stepper-props/mobile-stepper-props.test.js" name="@mui/codemod &gt; deprecations &gt; mobile-stepper-props &gt; should be idempotent" time="0.006259375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/mobile-stepper-props/mobile-stepper-props.test.js" name="@mui/codemod &gt; deprecations &gt; mobile-stepper-props &gt; transforms as needed" time="0.006014959">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/mobile-stepper-props/mobile-stepper-props.test.js" name="@mui/codemod &gt; deprecations &gt; mobile-stepper-props &gt; should be idempotent" time="0.001627">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/mobile-stepper-props/mobile-stepper-props.test.js" name="@mui/codemod &gt; deprecations &gt; mobile-stepper-props &gt; transforms as needed" time="0.003741958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/mobile-stepper-props/mobile-stepper-props.test.js" name="@mui/codemod &gt; deprecations &gt; mobile-stepper-props &gt; should be idempotent" time="0.008209667">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/modal-props/modal-props.test.js" timestamp="2025-09-10T11:25:37.150Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.06830625">
        <testcase classname="packages/mui-codemod/src/deprecations/modal-props/modal-props.test.js" name="@mui/codemod &gt; deprecations &gt; modal-props &gt; transforms as needed" time="0.027584333">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/modal-props/modal-props.test.js" name="@mui/codemod &gt; deprecations &gt; modal-props &gt; should be idempotent" time="0.009199209">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/modal-props/modal-props.test.js" name="@mui/codemod &gt; deprecations &gt; modal-props &gt; transforms as needed" time="0.0139815">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/modal-props/modal-props.test.js" name="@mui/codemod &gt; deprecations &gt; modal-props &gt; should be idempotent" time="0.007866292">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/modal-props/modal-props.test.js" name="@mui/codemod &gt; deprecations &gt; modal-props &gt; transforms as needed" time="0.004732">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/modal-props/modal-props.test.js" name="@mui/codemod &gt; deprecations &gt; modal-props &gt; should be idempotent" time="0.003906625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/outlined-input-props/outlined-input-props.test.js" timestamp="2025-09-10T11:25:37.151Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.07968575">
        <testcase classname="packages/mui-codemod/src/deprecations/outlined-input-props/outlined-input-props.test.js" name="@mui/codemod &gt; deprecations &gt; outlined-input-props &gt; transforms as needed" time="0.024181667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/outlined-input-props/outlined-input-props.test.js" name="@mui/codemod &gt; deprecations &gt; outlined-input-props &gt; should be idempotent" time="0.014211958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/outlined-input-props/outlined-input-props.test.js" name="@mui/codemod &gt; deprecations &gt; outlined-input-props &gt; transforms as needed" time="0.022350583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/outlined-input-props/outlined-input-props.test.js" name="@mui/codemod &gt; deprecations &gt; outlined-input-props &gt; should be idempotent" time="0.010466209">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/outlined-input-props/outlined-input-props.test.js" name="@mui/codemod &gt; deprecations &gt; outlined-input-props &gt; transforms as needed" time="0.004682542">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/outlined-input-props/outlined-input-props.test.js" name="@mui/codemod &gt; deprecations &gt; outlined-input-props &gt; should be idempotent" time="0.002803666">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/pagination-item-classes/pagination-item-classes.test.js" timestamp="2025-09-10T11:25:37.151Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.17549425">
        <testcase classname="packages/mui-codemod/src/deprecations/pagination-item-classes/pagination-item-classes.test.js" name="@mui/codemod &gt; deprecations &gt; pagination-item-classes &gt; js-transform &gt; transforms props as needed" time="0.083186042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/pagination-item-classes/pagination-item-classes.test.js" name="@mui/codemod &gt; deprecations &gt; pagination-item-classes &gt; js-transform &gt; should be idempotent" time="0.040739375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/pagination-item-classes/pagination-item-classes.test.js" name="@mui/codemod &gt; deprecations &gt; pagination-item-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.034913625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/pagination-item-classes/pagination-item-classes.test.js" name="@mui/codemod &gt; deprecations &gt; pagination-item-classes &gt; [package] js-transform &gt; should be idempotent" time="0.010773584">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/pagination-item-classes/pagination-item-classes.test.js" name="@mui/codemod &gt; deprecations &gt; pagination-item-classes &gt; css-transform &gt; transforms classes as needed" time="0.003388125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/pagination-item-classes/pagination-item-classes.test.js" name="@mui/codemod &gt; deprecations &gt; pagination-item-classes &gt; css-transform &gt; should be idempotent" time="0.0007725">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/pagination-item-classes/pagination-item-classes.test.js" name="@mui/codemod &gt; deprecations &gt; pagination-item-classes &gt; test-cases &gt; should not be the same" time="0.000285792">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/popover-props/popover-props.test.js" timestamp="2025-09-10T11:25:37.151Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.104385375">
        <testcase classname="packages/mui-codemod/src/deprecations/popover-props/popover-props.test.js" name="@mui/codemod &gt; deprecations &gt; popover-props &gt; transforms as needed" time="0.049146083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/popover-props/popover-props.test.js" name="@mui/codemod &gt; deprecations &gt; popover-props &gt; should be idempotent" time="0.016479291">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/popover-props/popover-props.test.js" name="@mui/codemod &gt; deprecations &gt; popover-props &gt; transforms as needed" time="0.007169917">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/popover-props/popover-props.test.js" name="@mui/codemod &gt; deprecations &gt; popover-props &gt; should be idempotent" time="0.007958208">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/popover-props/popover-props.test.js" name="@mui/codemod &gt; deprecations &gt; popover-props &gt; transforms as needed" time="0.010887042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/popover-props/popover-props.test.js" name="@mui/codemod &gt; deprecations &gt; popover-props &gt; should be idempotent" time="0.011676208">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/pagination-item-props/pagination-item-props.test.js" timestamp="2025-09-10T11:25:37.152Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.045676583">
        <testcase classname="packages/mui-codemod/src/deprecations/pagination-item-props/pagination-item-props.test.js" name="@mui/codemod &gt; deprecations &gt; pagination-item-props &gt; transforms props as needed" time="0.019996541">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/pagination-item-props/pagination-item-props.test.js" name="@mui/codemod &gt; deprecations &gt; pagination-item-props &gt; should be idempotent" time="0.00295425">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/pagination-item-props/pagination-item-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] pagination-item-props &gt; transforms props as needed" time="0.010663208">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/pagination-item-props/pagination-item-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] pagination-item-props &gt; should be idempotent" time="0.003899792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/pagination-item-props/pagination-item-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] pagination-item-props &gt; transforms props as needed" time="0.004758375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/pagination-item-props/pagination-item-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] pagination-item-props &gt; should be idempotent" time="0.001745083">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/rating-props/rating-props.test.js" timestamp="2025-09-10T11:25:37.152Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.066641583">
        <testcase classname="packages/mui-codemod/src/deprecations/rating-props/rating-props.test.js" name="@mui/codemod &gt; deprecations &gt; rating-props &gt; transforms as needed" time="0.029828708">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/rating-props/rating-props.test.js" name="@mui/codemod &gt; deprecations &gt; rating-props &gt; should be idempotent" time="0.009493625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/rating-props/rating-props.test.js" name="@mui/codemod &gt; deprecations &gt; rating-props &gt; transforms as needed" time="0.009158083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/rating-props/rating-props.test.js" name="@mui/codemod &gt; deprecations &gt; rating-props &gt; should be idempotent" time="0.00734825">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/rating-props/rating-props.test.js" name="@mui/codemod &gt; deprecations &gt; rating-props &gt; transforms as needed" time="0.006194666">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/rating-props/rating-props.test.js" name="@mui/codemod &gt; deprecations &gt; rating-props &gt; should be idempotent" time="0.003017917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/popper-props/popper-props.test.js" timestamp="2025-09-10T11:25:37.153Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.044365875">
        <testcase classname="packages/mui-codemod/src/deprecations/popper-props/popper-props.test.js" name="@mui/codemod &gt; deprecations &gt; popper-props &gt; transforms as needed" time="0.021151334">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/popper-props/popper-props.test.js" name="@mui/codemod &gt; deprecations &gt; popper-props &gt; should be idempotent" time="0.003394083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/popper-props/popper-props.test.js" name="@mui/codemod &gt; deprecations &gt; popper-props &gt; transforms as needed" time="0.008863375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/popper-props/popper-props.test.js" name="@mui/codemod &gt; deprecations &gt; popper-props &gt; should be idempotent" time="0.005043625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/popper-props/popper-props.test.js" name="@mui/codemod &gt; deprecations &gt; popper-props &gt; transforms as needed" time="0.003004125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/popper-props/popper-props.test.js" name="@mui/codemod &gt; deprecations &gt; popper-props &gt; should be idempotent" time="0.001865166">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/select-classes/select-classes.test.js" timestamp="2025-09-10T11:25:37.153Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.045882167">
        <testcase classname="packages/mui-codemod/src/deprecations/select-classes/select-classes.test.js" name="@mui/codemod &gt; deprecations &gt; select-classes &gt; js-transform &gt; transforms props as needed" time="0.020414417">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/select-classes/select-classes.test.js" name="@mui/codemod &gt; deprecations &gt; select-classes &gt; js-transform &gt; should be idempotent" time="0.009036167">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/select-classes/select-classes.test.js" name="@mui/codemod &gt; deprecations &gt; select-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.008159291">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/select-classes/select-classes.test.js" name="@mui/codemod &gt; deprecations &gt; select-classes &gt; [package] js-transform &gt; should be idempotent" time="0.002591834">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/select-classes/select-classes.test.js" name="@mui/codemod &gt; deprecations &gt; select-classes &gt; css-transform &gt; transforms classes as needed" time="0.003182209">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/select-classes/select-classes.test.js" name="@mui/codemod &gt; deprecations &gt; select-classes &gt; css-transform &gt; should be idempotent" time="0.000663416">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/select-classes/select-classes.test.js" name="@mui/codemod &gt; deprecations &gt; select-classes &gt; test-cases &gt; should not be the same" time="0.000223958">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/slider-classes/slider-classes.test.js" timestamp="2025-09-10T11:25:37.154Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.067582291">
        <testcase classname="packages/mui-codemod/src/deprecations/slider-classes/slider-classes.test.js" name="@mui/codemod &gt; deprecations &gt; slider-classes &gt; js-transform &gt; transforms props as needed" time="0.033440833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/slider-classes/slider-classes.test.js" name="@mui/codemod &gt; deprecations &gt; slider-classes &gt; js-transform &gt; should be idempotent" time="0.009389791">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/slider-classes/slider-classes.test.js" name="@mui/codemod &gt; deprecations &gt; slider-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.01075975">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/slider-classes/slider-classes.test.js" name="@mui/codemod &gt; deprecations &gt; slider-classes &gt; [package] js-transform &gt; should be idempotent" time="0.007904416">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/slider-classes/slider-classes.test.js" name="@mui/codemod &gt; deprecations &gt; slider-classes &gt; css-transform &gt; transforms classes as needed" time="0.003637917">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/slider-classes/slider-classes.test.js" name="@mui/codemod &gt; deprecations &gt; slider-classes &gt; css-transform &gt; should be idempotent" time="0.000674625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/slider-classes/slider-classes.test.js" name="@mui/codemod &gt; deprecations &gt; slider-classes &gt; test-cases &gt; should not be the same" time="0.000287458">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/slider-props/slider-props.test.js" timestamp="2025-09-10T11:25:37.156Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.067436167">
        <testcase classname="packages/mui-codemod/src/deprecations/slider-props/slider-props.test.js" name="@mui/codemod &gt; deprecations &gt; slider-props &gt; transforms props as needed" time="0.025714167">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/slider-props/slider-props.test.js" name="@mui/codemod &gt; deprecations &gt; slider-props &gt; should be idempotent" time="0.009055542">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/slider-props/slider-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] slider-props &gt; transforms props as needed" time="0.009321834">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/slider-props/slider-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] slider-props &gt; should be idempotent" time="0.008239375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/slider-props/slider-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] slider-props &gt; transforms props as needed" time="0.00517675">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/slider-props/slider-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] slider-props &gt; should be idempotent" time="0.008799166">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/snackbar-props/snackbar-props.test.js" timestamp="2025-09-10T11:25:37.157Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.098407708">
        <testcase classname="packages/mui-codemod/src/deprecations/snackbar-props/snackbar-props.test.js" name="@mui/codemod &gt; deprecations &gt; snackbar-props &gt; transforms as needed" time="0.045068542">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/snackbar-props/snackbar-props.test.js" name="@mui/codemod &gt; deprecations &gt; snackbar-props &gt; should be idempotent" time="0.014952584">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/snackbar-props/snackbar-props.test.js" name="@mui/codemod &gt; deprecations &gt; snackbar-props &gt; transforms as needed" time="0.011734292">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/snackbar-props/snackbar-props.test.js" name="@mui/codemod &gt; deprecations &gt; snackbar-props &gt; should be idempotent" time="0.011112167">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/snackbar-props/snackbar-props.test.js" name="@mui/codemod &gt; deprecations &gt; snackbar-props &gt; transforms as needed" time="0.007977375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/snackbar-props/snackbar-props.test.js" name="@mui/codemod &gt; deprecations &gt; snackbar-props &gt; should be idempotent" time="0.006414959">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/list-item-text-props/list-item-text-props.test.js" timestamp="2025-09-10T11:25:37.157Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.085775458">
        <testcase classname="packages/mui-codemod/src/deprecations/list-item-text-props/list-item-text-props.test.js" name="@mui/codemod &gt; deprecations &gt; list-item-text-props &gt; transforms props as needed" time="0.03098975">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/list-item-text-props/list-item-text-props.test.js" name="@mui/codemod &gt; deprecations &gt; list-item-text-props &gt; should be idempotent" time="0.014220375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/list-item-text-props/list-item-text-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] list-item-text-props &gt; transforms props as needed" time="0.017732375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/list-item-text-props/list-item-text-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] list-item-text-props &gt; should be idempotent" time="0.008480208">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/list-item-text-props/list-item-text-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] list-item-text-props &gt; transforms props as needed" time="0.007239708">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/list-item-text-props/list-item-text-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] list-item-text-props &gt; should be idempotent" time="0.004153458">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/speed-dial-action-props/speed-dial-action-props.test.js" timestamp="2025-09-10T11:25:37.158Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.148453375">
        <testcase classname="packages/mui-codemod/src/deprecations/speed-dial-action-props/speed-dial-action-props.test.js" name="@mui/codemod &gt; deprecations &gt; speed-dial-action-props &gt; transforms as needed" time="0.049275166">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/speed-dial-action-props/speed-dial-action-props.test.js" name="@mui/codemod &gt; deprecations &gt; speed-dial-action-props &gt; should be idempotent" time="0.016738125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/speed-dial-action-props/speed-dial-action-props.test.js" name="@mui/codemod &gt; deprecations &gt; speed-dial-action-props &gt; transforms as needed" time="0.02585475">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/speed-dial-action-props/speed-dial-action-props.test.js" name="@mui/codemod &gt; deprecations &gt; speed-dial-action-props &gt; should be idempotent" time="0.025042625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/speed-dial-action-props/speed-dial-action-props.test.js" name="@mui/codemod &gt; deprecations &gt; speed-dial-action-props &gt; transforms as needed" time="0.015495792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/speed-dial-action-props/speed-dial-action-props.test.js" name="@mui/codemod &gt; deprecations &gt; speed-dial-action-props &gt; should be idempotent" time="0.015124958">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/step-content-props/step-content-props.test.js" timestamp="2025-09-10T11:25:37.158Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.092761125">
        <testcase classname="packages/mui-codemod/src/deprecations/step-content-props/step-content-props.test.js" name="@mui/codemod &gt; deprecations &gt; step-content-props &gt; transforms props as needed" time="0.046459958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-content-props/step-content-props.test.js" name="@mui/codemod &gt; deprecations &gt; step-content-props &gt; should be idempotent" time="0.008761375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-content-props/step-content-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] step-content-props &gt; transforms props as needed" time="0.006966">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-content-props/step-content-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] step-content-props &gt; should be idempotent" time="0.006215583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-content-props/step-content-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] step-content-props &gt; transforms props as needed" time="0.015641">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-content-props/step-content-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] step-content-props &gt; should be idempotent" time="0.007399542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/step-connector-classes/step-connector-classes.test.js" timestamp="2025-09-10T11:25:37.159Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.053106292">
        <testcase classname="packages/mui-codemod/src/deprecations/step-connector-classes/step-connector-classes.test.js" name="@mui/codemod &gt; deprecations &gt; step-connector-classes &gt; js-transform &gt; transforms props as needed" time="0.02355675">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-connector-classes/step-connector-classes.test.js" name="@mui/codemod &gt; deprecations &gt; step-connector-classes &gt; js-transform &gt; should be idempotent" time="0.007484875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-connector-classes/step-connector-classes.test.js" name="@mui/codemod &gt; deprecations &gt; step-connector-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.009031083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-connector-classes/step-connector-classes.test.js" name="@mui/codemod &gt; deprecations &gt; step-connector-classes &gt; [package] js-transform &gt; should be idempotent" time="0.007268291">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-connector-classes/step-connector-classes.test.js" name="@mui/codemod &gt; deprecations &gt; step-connector-classes &gt; css-transform &gt; transforms classes as needed" time="0.003091708">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-connector-classes/step-connector-classes.test.js" name="@mui/codemod &gt; deprecations &gt; step-connector-classes &gt; css-transform &gt; should be idempotent" time="0.000479417">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-connector-classes/step-connector-classes.test.js" name="@mui/codemod &gt; deprecations &gt; step-connector-classes &gt; test-cases &gt; should not be the same" time="0.000219792">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/tab-classes/tab-classes.test.js" timestamp="2025-09-10T11:25:37.159Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.037309708">
        <testcase classname="packages/mui-codemod/src/deprecations/tab-classes/tab-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; js-transform &gt; transforms props as needed" time="0.019106791">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tab-classes/tab-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; js-transform &gt; should be idempotent" time="0.003983167">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tab-classes/tab-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.005327541">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tab-classes/tab-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; [package] js-transform &gt; should be idempotent" time="0.001945667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tab-classes/tab-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; css-transform &gt; transforms classes as needed" time="0.004418959">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tab-classes/tab-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; css-transform &gt; should be idempotent" time="0.000573834">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tab-classes/tab-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; test-cases &gt; should not be the same" time="0.000270459">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/step-label-props/step-label-props.test.js" timestamp="2025-09-10T11:25:37.160Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.087631167">
        <testcase classname="packages/mui-codemod/src/deprecations/step-label-props/step-label-props.test.js" name="@mui/codemod &gt; deprecations &gt; step-label-props &gt; transforms props as needed" time="0.039625583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-label-props/step-label-props.test.js" name="@mui/codemod &gt; deprecations &gt; step-label-props &gt; should be idempotent" time="0.013672958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-label-props/step-label-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] step-label-props &gt; transforms props as needed" time="0.008514333">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-label-props/step-label-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] step-label-props &gt; should be idempotent" time="0.011590083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-label-props/step-label-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] step-label-props &gt; transforms props as needed" time="0.006038708">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/step-label-props/step-label-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] step-label-props &gt; should be idempotent" time="0.006801542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/table-pagination-props/table-pagination-props.test.js" timestamp="2025-09-10T11:25:37.160Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.100187417">
        <testcase classname="packages/mui-codemod/src/deprecations/table-pagination-props/table-pagination-props.test.js" name="@mui/codemod &gt; deprecations &gt; table-pagination-props &gt; transforms as needed" time="0.049154916">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/table-pagination-props/table-pagination-props.test.js" name="@mui/codemod &gt; deprecations &gt; table-pagination-props &gt; should be idempotent" time="0.015604042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/table-pagination-props/table-pagination-props.test.js" name="@mui/codemod &gt; deprecations &gt; table-pagination-props &gt; transforms as needed" time="0.011290292">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/table-pagination-props/table-pagination-props.test.js" name="@mui/codemod &gt; deprecations &gt; table-pagination-props &gt; should be idempotent" time="0.003263792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/table-pagination-props/table-pagination-props.test.js" name="@mui/codemod &gt; deprecations &gt; table-pagination-props &gt; transforms as needed" time="0.013534917">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/table-pagination-props/table-pagination-props.test.js" name="@mui/codemod &gt; deprecations &gt; table-pagination-props &gt; should be idempotent" time="0.0060335">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/table-sort-label-classes/table-sort-label-classes.test.js" timestamp="2025-09-10T11:25:37.161Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.051735042">
        <testcase classname="packages/mui-codemod/src/deprecations/table-sort-label-classes/table-sort-label-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; js-transform &gt; transforms props as needed" time="0.019879083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/table-sort-label-classes/table-sort-label-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; js-transform &gt; should be idempotent" time="0.003985625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/table-sort-label-classes/table-sort-label-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.007043875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/table-sort-label-classes/table-sort-label-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; [package] js-transform &gt; should be idempotent" time="0.009372334">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/table-sort-label-classes/table-sort-label-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; css-transform &gt; transforms classes as needed" time="0.008332917">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/table-sort-label-classes/table-sort-label-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; css-transform &gt; should be idempotent" time="0.001267416">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/table-sort-label-classes/table-sort-label-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; test-cases &gt; should not be the same" time="0.000392833">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/speed-dial-props/speed-dial-props.test.js" timestamp="2025-09-10T11:25:37.161Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.077316541">
        <testcase classname="packages/mui-codemod/src/deprecations/speed-dial-props/speed-dial-props.test.js" name="@mui/codemod &gt; deprecations &gt; speed-dial-props &gt; transforms props as needed" time="0.042163375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/speed-dial-props/speed-dial-props.test.js" name="@mui/codemod &gt; deprecations &gt; speed-dial-props &gt; should be idempotent" time="0.008639916">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/speed-dial-props/speed-dial-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] speed-dial-props &gt; transforms props as needed" time="0.005446209">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/speed-dial-props/speed-dial-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] speed-dial-props &gt; should be idempotent" time="0.004212208">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/speed-dial-props/speed-dial-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] speed-dial-props &gt; transforms props as needed" time="0.007391292">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/speed-dial-props/speed-dial-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] speed-dial-props &gt; should be idempotent" time="0.008318625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/text-field-props/text-field-props.test.js" timestamp="2025-09-10T11:25:37.162Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.072044916">
        <testcase classname="packages/mui-codemod/src/deprecations/text-field-props/text-field-props.test.js" name="@mui/codemod &gt; deprecations &gt; text-field-props &gt; transforms as needed" time="0.030845625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/text-field-props/text-field-props.test.js" name="@mui/codemod &gt; deprecations &gt; text-field-props &gt; should be idempotent" time="0.010549416">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/text-field-props/text-field-props.test.js" name="@mui/codemod &gt; deprecations &gt; text-field-props &gt; transforms as needed" time="0.005075375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/text-field-props/text-field-props.test.js" name="@mui/codemod &gt; deprecations &gt; text-field-props &gt; should be idempotent" time="0.003756291">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/text-field-props/text-field-props.test.js" name="@mui/codemod &gt; deprecations &gt; text-field-props &gt; transforms as needed" time="0.014567625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/text-field-props/text-field-props.test.js" name="@mui/codemod &gt; deprecations &gt; text-field-props &gt; should be idempotent" time="0.005496208">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/tabs-props/tabs-props.test.js" timestamp="2025-09-10T11:25:37.162Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.070458709">
        <testcase classname="packages/mui-codemod/src/deprecations/tabs-props/tabs-props.test.js" name="@mui/codemod &gt; deprecations &gt; tabs-props &gt; transforms as needed" time="0.0335535">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tabs-props/tabs-props.test.js" name="@mui/codemod &gt; deprecations &gt; tabs-props &gt; should be idempotent" time="0.013593334">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tabs-props/tabs-props.test.js" name="@mui/codemod &gt; deprecations &gt; tabs-props &gt; transforms as needed" time="0.005253667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tabs-props/tabs-props.test.js" name="@mui/codemod &gt; deprecations &gt; tabs-props &gt; should be idempotent" time="0.002697083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tabs-props/tabs-props.test.js" name="@mui/codemod &gt; deprecations &gt; tabs-props &gt; transforms as needed" time="0.008417708">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tabs-props/tabs-props.test.js" name="@mui/codemod &gt; deprecations &gt; tabs-props &gt; should be idempotent" time="0.005969584">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/tabs-classes/tabs-classes.test.js" timestamp="2025-09-10T11:25:37.163Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.040774875">
        <testcase classname="packages/mui-codemod/src/deprecations/tabs-classes/tabs-classes.test.js" name="@mui/codemod &gt; deprecations &gt; chip-classes &gt; js-transform &gt; transforms props as needed" time="0.018653792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tabs-classes/tabs-classes.test.js" name="@mui/codemod &gt; deprecations &gt; chip-classes &gt; js-transform &gt; should be idempotent" time="0.003471083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tabs-classes/tabs-classes.test.js" name="@mui/codemod &gt; deprecations &gt; chip-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.003114417">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tabs-classes/tabs-classes.test.js" name="@mui/codemod &gt; deprecations &gt; chip-classes &gt; [package] js-transform &gt; should be idempotent" time="0.006807">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tabs-classes/tabs-classes.test.js" name="@mui/codemod &gt; deprecations &gt; chip-classes &gt; css-transform &gt; transforms classes as needed" time="0.003688375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tabs-classes/tabs-classes.test.js" name="@mui/codemod &gt; deprecations &gt; chip-classes &gt; css-transform &gt; should be idempotent" time="0.003288708">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tabs-classes/tabs-classes.test.js" name="@mui/codemod &gt; deprecations &gt; chip-classes &gt; test-cases &gt; should not be the same" time="0.000273917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/tooltip-props/tooltip-props.test.js" timestamp="2025-09-10T11:25:37.163Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.138600583">
        <testcase classname="packages/mui-codemod/src/deprecations/tooltip-props/tooltip-props.test.js" name="@mui/codemod &gt; deprecations &gt; tooltip-props &gt; transforms as needed" time="0.053112958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tooltip-props/tooltip-props.test.js" name="@mui/codemod &gt; deprecations &gt; tooltip-props &gt; should be idempotent" time="0.015719084">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tooltip-props/tooltip-props.test.js" name="@mui/codemod &gt; deprecations &gt; tooltip-props &gt; transforms as needed" time="0.023164375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tooltip-props/tooltip-props.test.js" name="@mui/codemod &gt; deprecations &gt; tooltip-props &gt; should be idempotent" time="0.019067292">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tooltip-props/tooltip-props.test.js" name="@mui/codemod &gt; deprecations &gt; tooltip-props &gt; transforms as needed" time="0.017346833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/tooltip-props/tooltip-props.test.js" name="@mui/codemod &gt; deprecations &gt; tooltip-props &gt; should be idempotent" time="0.00917125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/typography-props/typography-props.test.js" timestamp="2025-09-10T11:25:37.164Z" hostname="Jans-MacBook-Air.local" tests="8" failures="0" errors="0" skipped="0" time="0.070899375">
        <testcase classname="packages/mui-codemod/src/deprecations/typography-props/typography-props.test.js" name="@mui/codemod &gt; deprecations &gt; typography-props &gt; transforms props as needed" time="0.03566125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/typography-props/typography-props.test.js" name="@mui/codemod &gt; deprecations &gt; typography-props &gt; should be idempotent" time="0.009836375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/typography-props/typography-props.test.js" name="@mui/codemod &gt; deprecations &gt; typography-props &gt; actual.js should not be equal to expected.js" time="0.000279667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/typography-props/typography-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] typography-props &gt; transforms props as needed" time="0.005402375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/typography-props/typography-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] typography-props &gt; should be idempotent" time="0.006945417">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/typography-props/typography-props.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] typography-props &gt; theme.actual.js should not be equal to theme.expected.js" time="0.00050125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/typography-props/typography-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] typography-props &gt; transforms props as needed" time="0.006181417">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/typography-props/typography-props.test.js" name="@mui/codemod &gt; deprecations &gt; [package] typography-props &gt; should be idempotent" time="0.004796708">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/deprecations/toggle-button-group-classes/toggle-button-group-classes.test.js" timestamp="2025-09-10T11:25:37.164Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.044407083">
        <testcase classname="packages/mui-codemod/src/deprecations/toggle-button-group-classes/toggle-button-group-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; js-transform &gt; transforms props as needed" time="0.021915916">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/toggle-button-group-classes/toggle-button-group-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; js-transform &gt; should be idempotent" time="0.0038895">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/toggle-button-group-classes/toggle-button-group-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; [package] js-transform &gt; transforms props as needed" time="0.0049585">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/toggle-button-group-classes/toggle-button-group-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; [package] js-transform &gt; should be idempotent" time="0.00799525">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/toggle-button-group-classes/toggle-button-group-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; css-transform &gt; transforms classes as needed" time="0.003475375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/toggle-button-group-classes/toggle-button-group-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; css-transform &gt; should be idempotent" time="0.000577584">
        </testcase>
        <testcase classname="packages/mui-codemod/src/deprecations/toggle-button-group-classes/toggle-button-group-classes.test.js" name="@mui/codemod &gt; deprecations &gt; toggle-button-group-classes &gt; test-cases &gt; should not be the same" time="0.000230875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v6.0.0/list-item-button-prop/list-item-button-prop.test.js" timestamp="2025-09-10T11:25:37.165Z" hostname="Jans-MacBook-Air.local" tests="9" failures="0" errors="0" skipped="0" time="0.07069075">
        <testcase classname="packages/mui-codemod/src/v6.0.0/list-item-button-prop/list-item-button-prop.test.js" name="@mui/codemod &gt; deprecations &gt; list-item-button-prop &gt; transforms props as needed" time="0.038419542">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/list-item-button-prop/list-item-button-prop.test.js" name="@mui/codemod &gt; deprecations &gt; list-item-button-prop &gt; should be idempotent" time="0.004943541">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/list-item-button-prop/list-item-button-prop.test.js" name="@mui/codemod &gt; deprecations &gt; list-item-button-prop &gt; actual.js should not be equal to expected.js" time="0.000343792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/list-item-button-prop/list-item-button-prop.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] button-props &gt; transforms props as needed" time="0.0097715">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/list-item-button-prop/list-item-button-prop.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] button-props &gt; should be idempotent" time="0.003992709">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/list-item-button-prop/list-item-button-prop.test.js" name="@mui/codemod &gt; deprecations &gt; [theme] button-props &gt; theme.actual.js should not be equal to theme.expected.js" time="0.000204125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/list-item-button-prop/list-item-button-prop.test.js" name="@mui/codemod &gt; deprecations &gt; [package] button-props &gt; transforms props as needed" time="0.006789583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/list-item-button-prop/list-item-button-prop.test.js" name="@mui/codemod &gt; deprecations &gt; [package] button-props &gt; should be idempotent" time="0.003203583">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/list-item-button-prop/list-item-button-prop.test.js" name="@mui/codemod &gt; deprecations &gt; should skip files that do not import ListItem from @mui/material" time="0.00190225">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v6.0.0/system-props/removeSystemProps.test.js" timestamp="2025-09-10T11:25:37.165Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.082465792">
        <testcase classname="packages/mui-codemod/src/v6.0.0/system-props/removeSystemProps.test.js" name="@mui/codemod &gt; v6.0.0 - removeSystemProps &gt; transforms props as needed" time="0.055261209">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/system-props/removeSystemProps.test.js" name="@mui/codemod &gt; v6.0.0 - removeSystemProps &gt; should be idempotent" time="0.026407625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" timestamp="2025-09-10T11:25:37.165Z" hostname="Jans-MacBook-Air.local" tests="16" failures="0" errors="0" skipped="0" time="0.165401083">
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; basic sx-v6 &gt; transforms props as needed" time="0.029758042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; basic sx-v6 &gt; should be idempotent" time="0.006876375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; css vars sx-v6 &gt; transforms props as needed" time="0.020880084">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; css vars sx-v6 &gt; should be idempotent" time="0.00650475">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; dynamic spread sx-v6 &gt; transforms props as needed" time="0.028731333">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; dynamic spread sx-v6 &gt; should be idempotent" time="0.010887041">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; dynamic conditional sx-v6 &gt; transforms props as needed" time="0.003415791">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; dynamic conditional sx-v6 &gt; should be idempotent" time="0.002561708">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; should not delete line breaks &gt; transforms props as needed" time="0.006516417">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; should not delete line breaks &gt; should be idempotent" time="0.006011833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; conditional sx-v6 &gt; transforms props as needed" time="0.00727225">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; conditional sx-v6 &gt; should be idempotent" time="0.004803333">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; applyStyles sx-v6 &gt; transforms props as needed" time="0.015366958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; applyStyles sx-v6 &gt; should be idempotent" time="0.008352833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; inheritance sx-v6 &gt; should do nothing" time="0.003847584">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/sx-prop/sx-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; inheritance sx-v6 &gt; should be idempotent" time="0.001872458">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" timestamp="2025-09-10T11:25:37.166Z" hostname="Jans-MacBook-Air.local" tests="16" failures="0" errors="0" skipped="0" time="0.232172708">
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; basic styled-v6 &gt; transforms props as needed" time="0.059822166">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; basic styled-v6 &gt; should be idempotent" time="0.026647833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; logical styled-v6 &gt; transforms props as needed" time="0.018233209">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; logical styled-v6 &gt; should be idempotent" time="0.008504375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; nested spread styled-v6 &gt; transforms props as needed" time="0.012413083">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; nested spread styled-v6 &gt; should be idempotent" time="0.006196208">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; object map styled-v6 &gt; transforms props as needed" time="0.016772292">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; object map styled-v6 &gt; should be idempotent" time="0.006619125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; conditional styled-v6 &gt; transforms props as needed" time="0.025969667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; conditional styled-v6 &gt; should be idempotent" time="0.012033625">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; theme palette mode styled-v6 &gt; transforms props as needed" time="0.005237042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; theme palette mode styled-v6 &gt; should be idempotent" time="0.01182325">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; theme palette mode and variants styled-v6 &gt; transforms props as needed" time="0.0019475">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; theme palette mode and variants styled-v6 &gt; should be idempotent" time="0.006054333">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; dynamic props styled-v6 &gt; transforms props as needed" time="0.008883667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/styled/styled-v6.test.js" name="@mui/codemod &gt; v6.0.0 &gt; dynamic props styled-v6 &gt; should be idempotent" time="0.003128167">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v6.0.0/theme-v6/theme-v6.test.js" timestamp="2025-09-10T11:25:37.167Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.180627417">
        <testcase classname="packages/mui-codemod/src/v6.0.0/theme-v6/theme-v6.test.js" name="@mui/codemod &gt; v6.0.0 - theme-v6 &gt; styleOverrides &gt; transforms props as needed" time="0.112270584">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/theme-v6/theme-v6.test.js" name="@mui/codemod &gt; v6.0.0 - theme-v6 &gt; styleOverrides &gt; should be idempotent" time="0.057115375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/theme-v6/theme-v6.test.js" name="@mui/codemod &gt; v6.0.0 - theme-v6 &gt; theme variants to root slot &gt; transforms props as needed" time="0.007342291">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/theme-v6/theme-v6.test.js" name="@mui/codemod &gt; v6.0.0 - theme-v6 &gt; theme variants to root slot &gt; should be idempotent" time="0.002894459">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v7.0.0/grid-props/grid-props.test.js" timestamp="2025-09-10T11:25:37.167Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.1186805">
        <testcase classname="packages/mui-codemod/src/v7.0.0/grid-props/grid-props.test.js" name="@mui/codemod &gt; deprecations &gt; grid-props &gt; transforms as needed" time="0.062747084">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/grid-props/grid-props.test.js" name="@mui/codemod &gt; deprecations &gt; grid-props &gt; should be idempotent" time="0.016035667">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/grid-props/grid-props.test.js" name="@mui/codemod &gt; deprecations &gt; grid-props &gt; transforms as needed" time="0.0063695">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/grid-props/grid-props.test.js" name="@mui/codemod &gt; deprecations &gt; grid-props &gt; should be idempotent" time="0.003629375">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/grid-props/grid-props.test.js" name="@mui/codemod &gt; deprecations &gt; grid-props &gt; transforms as needed" time="0.014231292">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/grid-props/grid-props.test.js" name="@mui/codemod &gt; deprecations &gt; grid-props &gt; should be idempotent" time="0.014675958">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v7.0.0/input-label-size-normal-medium/input-label-size-normal-medium.test.js" timestamp="2025-09-10T11:25:37.168Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.034641334">
        <testcase classname="packages/mui-codemod/src/v7.0.0/input-label-size-normal-medium/input-label-size-normal-medium.test.js" name="@mui/codemod &gt; v7.0.0 &gt; input-label-size-normal-medium &gt; transforms props as needed" time="0.031302875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/input-label-size-normal-medium/input-label-size-normal-medium.test.js" name="@mui/codemod &gt; v7.0.0 &gt; input-label-size-normal-medium &gt; should be idempotent" time="0.002514791">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v7.0.0/lab-removed-components/lab-removed-components.test.js" timestamp="2025-09-10T11:25:37.168Z" hostname="Jans-MacBook-Air.local" tests="10" failures="0" errors="0" skipped="0" time="0.121323917">
        <testcase classname="packages/mui-codemod/src/v7.0.0/lab-removed-components/lab-removed-components.test.js" name="@mui/codemod &gt; v7.0.0 &gt; lab-removed-components &gt; transforms as needed" time="0.059550958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/lab-removed-components/lab-removed-components.test.js" name="@mui/codemod &gt; v7.0.0 &gt; lab-removed-components &gt; should be idempotent" time="0.009787916">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/lab-removed-components/lab-removed-components.test.js" name="@mui/codemod &gt; v7.0.0 &gt; lab-removed-components &gt; transforms as needed" time="0.012543042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/lab-removed-components/lab-removed-components.test.js" name="@mui/codemod &gt; v7.0.0 &gt; lab-removed-components &gt; should be idempotent" time="0.012153917">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/lab-removed-components/lab-removed-components.test.js" name="@mui/codemod &gt; v7.0.0 &gt; lab-removed-components &gt; transforms as needed" time="0.004763958">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/lab-removed-components/lab-removed-components.test.js" name="@mui/codemod &gt; v7.0.0 &gt; lab-removed-components &gt; should be idempotent" time="0.002108333">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/lab-removed-components/lab-removed-components.test.js" name="@mui/codemod &gt; v7.0.0 &gt; lab-removed-components &gt; transforms as needed" time="0.002613917">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/lab-removed-components/lab-removed-components.test.js" name="@mui/codemod &gt; v7.0.0 &gt; lab-removed-components &gt; should be idempotent" time="0.0056225">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/lab-removed-components/lab-removed-components.test.js" name="@mui/codemod &gt; v7.0.0 &gt; lab-removed-components &gt; transforms as needed" time="0.003755">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/lab-removed-components/lab-removed-components.test.js" name="@mui/codemod &gt; v7.0.0 &gt; lab-removed-components &gt; should be idempotent" time="0.004967667">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" timestamp="2025-09-10T11:25:37.169Z" hostname="Jans-MacBook-Air.local" tests="18" failures="0" errors="0" skipped="0" time="0.1293145">
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; transforms as needed" time="0.029781042">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; should be idempotent" time="0.005879458">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; transforms as needed" time="0.0143315">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; should be idempotent" time="0.005241666">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; transforms as needed" time="0.0251665">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; should be idempotent" time="0.007907333">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; transforms as needed" time="0.004378458">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; should be idempotent" time="0.001374334">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; transforms as needed" time="0.004459208">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; should be idempotent" time="0.0020635">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; transforms as needed" time="0.009927333">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; should be idempotent" time="0.002679584">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; transforms as needed" time="0.001158875">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; should be idempotent" time="0.000973709">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; transforms as needed" time="0.00534525">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; should be idempotent" time="0.001174833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; transforms as needed" time="0.003826">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v7.0.0/theme-color-functions/theme-color-functions.test.js" name="@mui/codemod &gt; v7.0.0 &gt; theme-color-functions &gt; should be idempotent" time="0.002346834">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-codemod/src/v6.0.0/grid-v2-props/grid-v2-props.test.js" timestamp="2025-09-10T11:25:37.170Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.112784875">
        <testcase classname="packages/mui-codemod/src/v6.0.0/grid-v2-props/grid-v2-props.test.js" name="@mui/codemod &gt; deprecations &gt; grid-props &gt; transforms as needed" time="0.045402959">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/grid-v2-props/grid-v2-props.test.js" name="@mui/codemod &gt; deprecations &gt; grid-props &gt; should be idempotent" time="0.014587666">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/grid-v2-props/grid-v2-props.test.js" name="@mui/codemod &gt; deprecations &gt; grid-props &gt; transforms as needed" time="0.012632792">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/grid-v2-props/grid-v2-props.test.js" name="@mui/codemod &gt; deprecations &gt; grid-props &gt; should be idempotent" time="0.005225833">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/grid-v2-props/grid-v2-props.test.js" name="@mui/codemod &gt; deprecations &gt; grid-props &gt; transforms as needed" time="0.020899125">
        </testcase>
        <testcase classname="packages/mui-codemod/src/v6.0.0/grid-v2-props/grid-v2-props.test.js" name="@mui/codemod &gt; deprecations &gt; grid-props &gt; should be idempotent" time="0.012075292">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-lab/src/index.test.js" timestamp="2025-09-10T11:25:37.170Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.005430125">
        <testcase classname="packages/mui-lab/src/index.test.js" name="@mui/lab &gt; should have exports" time="0.002356459">
        </testcase>
        <testcase classname="packages/mui-lab/src/index.test.js" name="@mui/lab &gt; should not have undefined exports" time="0.002386042">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-lab/test/integration/Tabs.test.js" timestamp="2025-09-10T11:25:37.170Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.150374833">
        <testcase classname="packages/mui-lab/test/integration/Tabs.test.js" name="&lt;TabContext /&gt; integration &gt; wires up aria attributes" time="0.148827917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-lab/src/AlertTitle/AlertTitle.test.js" timestamp="2025-09-10T11:25:37.170Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.001389791">
        <testcase classname="packages/mui-lab/src/AlertTitle/AlertTitle.test.js" name="&lt;AlertTitle /&gt; &gt; To do" time="0.000683917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-lab/src/Masonry/Masonry.test.js" timestamp="2025-09-10T11:25:37.170Z" hostname="Jans-MacBook-Air.local" tests="22" failures="0" errors="0" skipped="9" time="0.060430792">
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.017685083">
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.004946916">
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.008403416">
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.006395417">
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008100792">
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.003433333">
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000401083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000588">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000742959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000278625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003255125">
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; render &gt; should render with correct default styles" time="0.000272375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; render &gt; should re-compute the height of masonry when dimensions of any child change" time="0.000166166">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; render &gt; should throw console error when children are empty" time="0.000152334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; render &gt; should not throw type error when children are empty" time="0.000134209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; style attribute: &gt; should apply correct default styles" time="0.000739625">
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; style attribute: &gt; should apply responsive margin" time="0.001179875">
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; style attribute: &gt; should apply responsive columns" time="0.000721833">
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; server-side rendering &gt; should support server-side rendering" time="0.000457542">
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; prop: columns &gt; should generate correct responsive styles regardless of breakpoints order" time="0.000351042">
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; prop: spacing &gt; should generate correct responsive styles regardless of breakpoints order" time="0.000299625">
        </testcase>
        <testcase classname="packages/mui-lab/src/Masonry/Masonry.test.js" name="&lt;Masonry /&gt; &gt; prop: sequential &gt; should place children in sequential order" time="0.000186458">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-lab/src/TabList/TabList.test.js" timestamp="2025-09-10T11:25:37.171Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.161525542">
        <testcase classname="packages/mui-lab/src/TabList/TabList.test.js" name="&lt;TabList /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.0343005">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabList/TabList.test.js" name="&lt;TabList /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.00982775">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabList/TabList.test.js" name="&lt;TabList /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.008187792">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabList/TabList.test.js" name="&lt;TabList /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.010004042">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabList/TabList.test.js" name="&lt;TabList /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.016315292">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabList/TabList.test.js" name="&lt;TabList /&gt; &gt; provides the active value to Tab so that they can be indicated as selected" time="0.069771125">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabList/TabList.test.js" name="&lt;TabList /&gt; &gt; should accept a null child" time="0.011671291">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-lab/src/TabContext/TabContext.test.js" timestamp="2025-09-10T11:25:37.172Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.084317167">
        <testcase classname="packages/mui-lab/src/TabContext/TabContext.test.js" name="&lt;TabContext /&gt; &gt; is null by default" time="0.011198542">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabContext/TabContext.test.js" name="&lt;TabContext /&gt; &gt; provides an id prefix for IDREFs and the active value" time="0.053744125">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabContext/TabContext.test.js" name="&lt;TabContext /&gt; &gt; provides undefined tab and panel prefixes and the active value when ssr" time="0.00437125">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabContext/TabContext.test.js" name="&lt;TabContext /&gt; &gt; hydrates tab and tabpanel prefixes" time="0.014133458">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-lab/src/TabPanel/TabPanel.test.tsx" timestamp="2025-09-10T11:25:37.172Z" hostname="Jans-MacBook-Air.local" tests="13" failures="0" errors="0" skipped="3" time="0.115985417">
        <testcase classname="packages/mui-lab/src/TabPanel/TabPanel.test.tsx" name="&lt;TabPanel /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.038970416">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabPanel/TabPanel.test.tsx" name="&lt;TabPanel /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.010855959">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabPanel/TabPanel.test.tsx" name="&lt;TabPanel /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005702417">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabPanel/TabPanel.test.tsx" name="&lt;TabPanel /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.0034225">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabPanel/TabPanel.test.tsx" name="&lt;TabPanel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000469542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TabPanel/TabPanel.test.tsx" name="&lt;TabPanel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000281042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TabPanel/TabPanel.test.tsx" name="&lt;TabPanel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.0002385">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TabPanel/TabPanel.test.tsx" name="&lt;TabPanel /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.011981417">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabPanel/TabPanel.test.tsx" name="&lt;TabPanel /&gt; &gt; renders a [role=&quot;tabpanel&quot;] and mounts children" time="0.005293791">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabPanel/TabPanel.test.tsx" name="&lt;TabPanel /&gt; &gt; is [hidden] when TabPanel#value !== TabContext#value and does not mount children" time="0.002455375">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabPanel/TabPanel.test.tsx" name="&lt;TabPanel /&gt; &gt; is [hidden] when TabPanel#value !== TabContext#value but does mount children when keepMounted" time="0.002593292">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabPanel/TabPanel.test.tsx" name="&lt;TabPanel /&gt; &gt; is accessible when TabPanel#value === TabContext#value" time="0.027443209">
        </testcase>
        <testcase classname="packages/mui-lab/src/TabPanel/TabPanel.test.tsx" name="&lt;TabPanel /&gt; &gt; allows flow content" time="0.003096708">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-lab/src/TimelineConnector/TimelineConnector.test.js" timestamp="2025-09-10T11:25:37.173Z" hostname="Jans-MacBook-Air.local" tests="10" failures="0" errors="0" skipped="4" time="0.056710167">
        <testcase classname="packages/mui-lab/src/TimelineConnector/TimelineConnector.test.js" name="&lt;TimelineConnector /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.025387208">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineConnector/TimelineConnector.test.js" name="&lt;TimelineConnector /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007958875">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineConnector/TimelineConnector.test.js" name="&lt;TimelineConnector /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00366225">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineConnector/TimelineConnector.test.js" name="&lt;TimelineConnector /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.003220459">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineConnector/TimelineConnector.test.js" name="&lt;TimelineConnector /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.00629475">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineConnector/TimelineConnector.test.js" name="&lt;TimelineConnector /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000504958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineConnector/TimelineConnector.test.js" name="&lt;TimelineConnector /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000283625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineConnector/TimelineConnector.test.js" name="&lt;TimelineConnector /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000801416">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineConnector/TimelineConnector.test.js" name="&lt;TimelineConnector /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000818083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineConnector/TimelineConnector.test.js" name="&lt;TimelineConnector /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005946291">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" timestamp="2025-09-10T11:25:37.173Z" hostname="Jans-MacBook-Air.local" tests="16" failures="0" errors="0" skipped="4" time="0.094904959">
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.020414625">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.008815291">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003779583">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005063916">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.008794625">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001827292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.00033725">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000371875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.001625542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005193834">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; should have positionLeft class when inside of a left-positioned timeline" time="0.013199">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; should have positionRight class when inside of a right-positioned timeline" time="0.002843375">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; should have positionLeft class when inside of a left-positioned timeline and a left-positioned item" time="0.005505708">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; should have positionLeft class when inside of a right-positioned timeline and a left-positioned item" time="0.0039105">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; should have positionRight class when inside of a left-positioned timeline and a right-positioned item" time="0.005806416">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineContent/TimelineContent.test.js" name="&lt;TimelineContent /&gt; &gt; should have positionRight class when inside of a right-positioned timeline and a right-positioned item" time="0.004324084">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-lab/src/Timeline/Timeline.test.tsx" timestamp="2025-09-10T11:25:37.174Z" hostname="Jans-MacBook-Air.local" tests="13" failures="0" errors="0" skipped="6" time="0.06011525">
        <testcase classname="packages/mui-lab/src/Timeline/Timeline.test.tsx" name="&lt;Timeline /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.024223833">
        </testcase>
        <testcase classname="packages/mui-lab/src/Timeline/Timeline.test.tsx" name="&lt;Timeline /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006981167">
        </testcase>
        <testcase classname="packages/mui-lab/src/Timeline/Timeline.test.tsx" name="&lt;Timeline /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00397275">
        </testcase>
        <testcase classname="packages/mui-lab/src/Timeline/Timeline.test.tsx" name="&lt;Timeline /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00387125">
        </testcase>
        <testcase classname="packages/mui-lab/src/Timeline/Timeline.test.tsx" name="&lt;Timeline /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006742792">
        </testcase>
        <testcase classname="packages/mui-lab/src/Timeline/Timeline.test.tsx" name="&lt;Timeline /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000499417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/Timeline/Timeline.test.tsx" name="&lt;Timeline /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000256083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/Timeline/Timeline.test.tsx" name="&lt;Timeline /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000367709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/Timeline/Timeline.test.tsx" name="&lt;Timeline /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000566584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/Timeline/Timeline.test.tsx" name="&lt;Timeline /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.001264542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/Timeline/Timeline.test.tsx" name="&lt;Timeline /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000801833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/Timeline/Timeline.test.tsx" name="&lt;Timeline /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005262917">
        </testcase>
        <testcase classname="packages/mui-lab/src/Timeline/Timeline.test.tsx" name="&lt;Timeline /&gt; &gt; should have correct classname" time="0.002970209">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-lab/src/TimelineDot/TimelineDot.test.js" timestamp="2025-09-10T11:25:37.175Z" hostname="Jans-MacBook-Air.local" tests="13" failures="0" errors="0" skipped="6" time="0.052929792">
        <testcase classname="packages/mui-lab/src/TimelineDot/TimelineDot.test.js" name="&lt;TimelineDot /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.0220245">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineDot/TimelineDot.test.js" name="&lt;TimelineDot /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005379708">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineDot/TimelineDot.test.js" name="&lt;TimelineDot /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002967">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineDot/TimelineDot.test.js" name="&lt;TimelineDot /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004880667">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineDot/TimelineDot.test.js" name="&lt;TimelineDot /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.0067365">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineDot/TimelineDot.test.js" name="&lt;TimelineDot /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000711">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineDot/TimelineDot.test.js" name="&lt;TimelineDot /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000306583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineDot/TimelineDot.test.js" name="&lt;TimelineDot /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000428083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineDot/TimelineDot.test.js" name="&lt;TimelineDot /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000514209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineDot/TimelineDot.test.js" name="&lt;TimelineDot /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000306667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineDot/TimelineDot.test.js" name="&lt;TimelineDot /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000191083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineDot/TimelineDot.test.js" name="&lt;TimelineDot /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003484541">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineDot/TimelineDot.test.js" name="&lt;TimelineDot /&gt; &gt; should render with color inherit" time="0.003075917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" timestamp="2025-09-10T11:25:37.176Z" hostname="Jans-MacBook-Air.local" tests="16" failures="0" errors="0" skipped="4" time="0.098607">
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.029275042">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.010812667">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00344725">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004319208">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.010254542">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001026375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000870791">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000678042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000729375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.00405625">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; should have positionLeft class when inside of a left-positioned timeline" time="0.01062325">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; should have positionRight class when inside of a right-positioned timeline" time="0.003784083">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; should have positionLeft class when inside of a left-positioned timeline and a left-positioned item" time="0.0047685">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; should have positionLeft class when inside of a right-positioned timeline and a left-positioned item" time="0.00518925">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; should have positionRight class when inside of a left-positioned timeline and a right-positioned item" time="0.0027965">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineOppositeContent/TimelineOppositeContent.test.js" name="&lt;TimelineOppositeContent /&gt; &gt; should have positionRight class when inside of a right-positioned timeline and a right-positioned item" time="0.004150583">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-lab/src/TimelineSeparator/TimelineSeparator.test.js" timestamp="2025-09-10T11:25:37.177Z" hostname="Jans-MacBook-Air.local" tests="10" failures="0" errors="0" skipped="4" time="0.048441625">
        <testcase classname="packages/mui-lab/src/TimelineSeparator/TimelineSeparator.test.js" name="&lt;TimelineSeparator /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.021352">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineSeparator/TimelineSeparator.test.js" name="&lt;TimelineSeparator /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005256958">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineSeparator/TimelineSeparator.test.js" name="&lt;TimelineSeparator /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002870167">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineSeparator/TimelineSeparator.test.js" name="&lt;TimelineSeparator /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005166">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineSeparator/TimelineSeparator.test.js" name="&lt;TimelineSeparator /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.007185666">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineSeparator/TimelineSeparator.test.js" name="&lt;TimelineSeparator /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000436709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineSeparator/TimelineSeparator.test.js" name="&lt;TimelineSeparator /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000301083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineSeparator/TimelineSeparator.test.js" name="&lt;TimelineSeparator /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000415792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineSeparator/TimelineSeparator.test.js" name="&lt;TimelineSeparator /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000545042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineSeparator/TimelineSeparator.test.js" name="&lt;TimelineSeparator /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003312459">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-lab/src/TimelineItem/TimelineItem.test.js" timestamp="2025-09-10T11:25:37.178Z" hostname="Jans-MacBook-Air.local" tests="10" failures="0" errors="0" skipped="4" time="0.059776041">
        <testcase classname="packages/mui-lab/src/TimelineItem/TimelineItem.test.js" name="&lt;TimelineItem /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.02911525">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineItem/TimelineItem.test.js" name="&lt;TimelineItem /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.008370417">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineItem/TimelineItem.test.js" name="&lt;TimelineItem /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004658708">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineItem/TimelineItem.test.js" name="&lt;TimelineItem /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.003643375">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineItem/TimelineItem.test.js" name="&lt;TimelineItem /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006603792">
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineItem/TimelineItem.test.js" name="&lt;TimelineItem /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000455416">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineItem/TimelineItem.test.js" name="&lt;TimelineItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.0002525">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineItem/TimelineItem.test.js" name="&lt;TimelineItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000362042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineItem/TimelineItem.test.js" name="&lt;TimelineItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000492833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-lab/src/TimelineItem/TimelineItem.test.js" name="&lt;TimelineItem /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004002458">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/index.test.js" timestamp="2025-09-10T11:25:37.178Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.00695975">
        <testcase classname="packages/mui-joy/src/index.test.js" name="@mui/joy &gt; should have exports" time="0.001012125">
        </testcase>
        <testcase classname="packages/mui-joy/src/index.test.js" name="@mui/joy &gt; should not have undefined exports" time="0.005105125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/test/integration/TabsIntegration.test.tsx" timestamp="2025-09-10T11:25:37.178Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.088889833">
        <testcase classname="packages/mui-joy/test/integration/TabsIntegration.test.tsx" name="Joy &lt;Tabs /&gt; &gt; display first tab" time="0.08793525">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Accordion/Accordion.test.tsx" timestamp="2025-09-10T11:25:37.178Z" hostname="Jans-MacBook-Air.local" tests="28" failures="0" errors="0" skipped="4" time="0.238896708">
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.021942167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.0048685">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006820209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004068542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.012398334">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.004992875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003953416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.008390584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.005782875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002951584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001239916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.018007833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.0003615">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000186917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000293333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000275375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.013102208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; should render and not be controlled" time="0.009843083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; should handle defaultExpanded prop" time="0.006256042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; should render the summary and collapse elements" time="0.061645833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; should be controlled" time="0.009170542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; should be disabled" time="0.008035">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; should call onChange when clicking the summary element" time="0.0086015">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; when controlled should call the onChange" time="0.004061584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; when undefined onChange and controlled should not call the onChange" time="0.005117709">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; when disabled should have the disabled class" time="0.003549084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; should warn when switching from controlled to uncontrolled" time="0.004650666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Accordion/Accordion.test.tsx" name="&lt;Accordion /&gt; &gt; should warn when switching between uncontrolled to controlled" time="0.0066375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" timestamp="2025-09-10T11:25:37.180Z" hostname="Jans-MacBook-Air.local" tests="29" failures="0" errors="0" skipped="4" time="0.132178666">
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.020663625">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.01935">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006375666">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002928583">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008669291">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002628583">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002360333">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.003330125">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003373875">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001807292">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001294708">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.015787583">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00129">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000842417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000355417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000206166">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.012190792">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; classes &gt; should have MuiAccordionGroup-sizeSm class for sm size " time="0.001910958">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; classes &gt; should have MuiAccordionGroup-sizeMd class for md size " time="0.001604709">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; classes &gt; should have MuiAccordionGroup-sizeLg class for lg size " time="0.001503291">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; classes &gt; should have MuiAccordionGroup-variantOutlined class for outlined variant " time="0.001635">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; classes &gt; should have MuiAccordionGroup-variantPlain class for plain variant " time="0.001604166">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; classes &gt; should have MuiAccordionGroup-variantSoft class for soft variant " time="0.001801584">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; classes &gt; should have MuiAccordionGroup-variantSolid class for solid variant " time="0.00167025">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; classes &gt; should have MuiAccordionGroup-colorDanger class for danger color " time="0.001657083">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; classes &gt; should have MuiAccordionGroup-colorNeutral class for neutral color " time="0.004096792">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; classes &gt; should have MuiAccordionGroup-colorPrimary class for primary color " time="0.006284334">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; classes &gt; should have MuiAccordionGroup-colorSuccess class for success color " time="0.001579458">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionGroup/AccordionGroup.test.tsx" name="&lt;AccordionGroup /&gt; &gt; should not warn when using custom color, variant, size" time="0.001498375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" timestamp="2025-09-10T11:25:37.182Z" hostname="Jans-MacBook-Air.local" tests="28" failures="0" errors="0" skipped="4" time="0.295227583">
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.031824959">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.007112625">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006928041">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005927291">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.009270917">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.006621833">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.005138541">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; sets custom properties on the content slot&apos;s element with the slotProps.content prop" time="0.003684916">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.content with the built-in ones" time="0.005452542">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.005462084">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; sets custom properties on the content slot&apos;s element with the slotProps.content callback" time="0.004667083">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.00239075">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; sets custom properties on the content slot&apos;s element with the slotProps.content callback using the ownerState" time="0.001983042">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003544958">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.005571792">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; allows overriding the content slot with a component using the slots.content prop" time="0.002192167">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; allows overriding the content slot with an element using the slots.content prop" time="0.001842208">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.012476375">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000352417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000194625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000199667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000158042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.014291792">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; tab index &gt; [initial] interactive content should have tab index -1" time="0.00946925">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; tab index &gt; [expanded] interactive content should not have tab index 0" time="0.006401208">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; tab index &gt; interactive content should preserve the tab index when closed" time="0.099004458">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; tab index &gt; should retain the default tab index if not explicitly set" time="0.021527167">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionDetails/AccordionDetails.test.tsx" name="&lt;AccordionDetails /&gt; &gt; tab index &gt; should retain the -1 tab index when explicitly set" time="0.0179325">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Alert/Alert.test.tsx" timestamp="2025-09-10T11:25:37.184Z" hostname="Jans-MacBook-Air.local" tests="45" failures="0" errors="0" skipped="6" time="0.223933291">
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.025143167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.011994375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006704416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.006003416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008610166">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.004087083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.00331375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator prop" time="0.00495525">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.startDecorator with the built-in ones" time="0.004224416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator prop" time="0.003344208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.endDecorator with the built-in ones" time="0.002723958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002454042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback" time="0.002713708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback" time="0.001986042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.0029705">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback using the ownerState" time="0.002485083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback using the ownerState" time="0.00247575">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.004710167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002313542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with a component using the slots.startDecorator prop" time="0.002456375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with an element using the slots.startDecorator prop" time="0.005762959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with a component using the slots.endDecorator prop" time="0.005093292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with an element using the slots.endDecorator prop" time="0.003877959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.017773875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001045875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000380417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.0002795">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000201666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000193083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000159584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.012672292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; prop: variant &gt; soft by default" time="0.030147041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; prop: variant &gt; should render plain" time="0.00331375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; prop: variant &gt; should render outlined" time="0.004554333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; prop: variant &gt; should render solid" time="0.005040917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; prop: color &gt; adds a primary class by default" time="0.002937834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; prop: color &gt; should render primary" time="0.003447">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; prop: color &gt; should render success" time="0.003308458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; prop: color &gt; should render danger" time="0.002453416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; prop: color &gt; should render neutral" time="0.002169708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; prop: color &gt; should render warning" time="0.002486167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; prop: size &gt; md by default" time="0.002499542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; prop: size &gt; should render sm" time="0.002563833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; prop: size &gt; should render md" time="0.001912667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Alert/Alert.test.tsx" name="&lt;Alert /&gt; &gt; prop: size &gt; should render lg" time="0.001970459">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" timestamp="2025-09-10T11:25:37.186Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="4" time="0.233455334">
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.064007167">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.012884083">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.011196792">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005951167">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.009761792">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.023184">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.0044535">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.028422584">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.02304575">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.009677833">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.003270709">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.016267292">
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000385875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000207167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000213084">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000173375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AccordionSummary/AccordionSummary.test.tsx" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.016149333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" timestamp="2025-09-10T11:25:37.187Z" hostname="Jans-MacBook-Air.local" tests="160" failures="0" errors="0" skipped="9" time="3.398667209">
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.095360792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.041236334">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.05031725">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.022493959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.024423958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.020939584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.019360292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.023744167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.input with the built-in ones" time="0.032123708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the listbox slot&apos;s element with the slotProps.listbox prop" time="0.018287167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.listbox with the built-in ones" time="0.0143535">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.016130459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback" time="0.0168625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the listbox slot&apos;s element with the slotProps.listbox callback" time="0.0241425">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.03055125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback using the ownerState" time="0.016649042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the listbox slot&apos;s element with the slotProps.listbox callback using the ownerState" time="0.029461708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.019610583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.023584958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.026355125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; allows overriding the listbox slot with a component using the slots.listbox prop" time="0.009728625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.038623292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000400834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000178542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000182417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000147708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000204291">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000135083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.031758208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; should be customizable in the theme" time="0.033601417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; combobox &gt; should clear the input when blur" time="0.055304875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; combobox &gt; should apply the icon classes" time="0.006830833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: loading &gt; should show a loading message when open" time="0.018556083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should set the focus on the first item" time="0.033201416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should keep the highlight on the first item" time="0.027342584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should set the focus on the first item when possible" time="0.027209792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should set the highlight on selected item when dropdown is expanded" time="0.03195675">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should keep the current highlight if possible" time="0.040454291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should work with filterSelectedOptions too" time="0.067743458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; highlight synchronisation &gt; should not update the highlight when multiple open and value change" time="0.031781583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: limitTags &gt; show all items on focus" time="0.027607709">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: limitTags &gt; show 0 item on close when set 0 to limitTags" time="0.020980375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: filterSelectedOptions &gt; when the last item is selected, highlights the new last item" time="0.03165775">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: autoSelect &gt; should not clear on blur when value does not match any option" time="0.02411475">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: autoSelect &gt; should add new value when autoSelect &amp; multiple on blur" time="0.029226209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: autoSelect &gt; should add new value when autoSelect &amp; multiple &amp; freeSolo on blur" time="0.022130875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: multiple &gt; should not crash" time="0.015693458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: multiple &gt; should remove the last option" time="0.030536083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: multiple &gt; navigates between different tags" time="0.035977666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: multiple &gt; should keep listbox open on pressing left or right keys when inputValue is not empty" time="0.019576791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: multiple &gt; should close listbox on pressing left or right keys when inputValue is empty" time="0.017794625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: multiple &gt; should not crash if a tag is missing" time="0.0272845">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: multiple &gt; should not call onChange function for duplicate values" time="0.052439">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: multiple &gt; has no textbox value" time="0.011620209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: multiple &gt; should fail validation if a required field has no value" time="0.000253375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: multiple &gt; should fail validation if a required field has a value" time="0.00014575">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; should trigger a form expectedly" time="0.069561">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: getOptionDisabled &gt; should prevent the disabled option to trigger actions but allow focus with disabledItemsFocusable" time="0.021896667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; WAI-ARIA conforming markup &gt; when closed" time="0.010346041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; WAI-ARIA conforming markup &gt; when open" time="0.014973333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; WAI-ARIA conforming markup &gt; should add and remove aria-activedescendant" time="0.017846541">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; when popup closed &gt; opens when the textbox is focused when `openOnFocus`" time="0.011624125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; when popup closed &gt; does not open on clear" time="0.008591833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; when popup closed &gt; opens on ArrowDown when focus is on the textbox and `openOnFocus` without moving focus" time="0.007334291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; when popup closed &gt; opens on ArrowUp when focus is on the textbox and `openOnFocus` without moving focus" time="0.008387792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; when popup closed &gt; should open popup when clicked on the root element" time="0.014864583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; when popup closed &gt; does not clear the textbox on Escape" time="0.008454708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: clearOnEscape &gt; should clear on escape" time="0.013478542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: clearOnBlur &gt; should clear on blur" time="0.01616">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: clearOnBlur &gt; should not clear on blur" time="0.016691833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: clearOnBlur &gt; should not clear on blur with `multiple` enabled" time="0.023238834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; when popup open &gt; closes the popup if Escape is pressed " time="0.01629">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; when popup open &gt; does not close the popup when option selected if Control is pressed" time="0.015698583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; when popup open &gt; does not close the popup when option selected if Meta is pressed" time="0.018600417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; when popup open &gt; moves focus to the first option on ArrowDown" time="0.013383792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; when popup open &gt; moves focus to the last option on ArrowUp" time="0.015730375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; when popup open &gt; should ignore keydown event until the IME is confirmed" time="0.01699475">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: openOnFocus &gt; enables open on input focus" time="0.02679325">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; listbox wrapping behavior &gt; wraps around when navigating the list by default" time="0.016031875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; listbox wrapping behavior &gt; selects the first item if on the last item and pressing up by default" time="0.016493916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; listbox wrapping behavior &gt; prop: includeInputInList &gt; considers the textbox the predecessor of the first option when pressing Up" time="0.016272542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; listbox wrapping behavior &gt; prop: includeInputInList &gt; considers the textbox the successor of the last option when pressing Down" time="0.015504625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; listbox wrapping behavior &gt; prop: disableListWrap &gt; keeps focus on the first item if focus is on the first item and pressing Up" time="0.01990125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; listbox wrapping behavior &gt; prop: disableListWrap &gt; focuses the last item when pressing Up when no option is active" time="0.013282083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; listbox wrapping behavior &gt; prop: disableListWrap &gt; keeps focus on the last item if focus is on the last item and pressing Down" time="0.01590675">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: disabled &gt; should disable the input" time="0.005698584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: disabled &gt; should disable the popup button" time="0.004014042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: disabled &gt; should not render the clear button" time="0.005146833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: disabled &gt; should not apply the hasClearIcon class" time="0.006586625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: disabled &gt; should close the popup when disabled is true" time="0.014987041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: disabled &gt; should not crash when autoSelect &amp; freeSolo are set, text is focused &amp; disabled gets truthy" time="0.010407541">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: disableClearable &gt; should not render the clear button" time="0.007829625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; warnings &gt; warn if getOptionLabel do not return a string" time="0.012791458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; warnings &gt; warn if isOptionEqualToValue match multiple values for a given option" time="0.021981042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; warnings &gt; warn if value does not exist in options list" time="0.004489833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; warnings &gt; warn if groups options are not sorted" time="0.028722042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; warnings &gt; warn if the type of the value is wrong" time="0.000666875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; warnings &gt; warn if the type of the defaultValue is wrong" time="0.000207125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: options &gt; should scroll selected option into view when multiple elements with role as listbox available" time="0.000175166">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: options &gt; should keep focus on selected option and not reset to top option when options updated" time="0.017494833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: options &gt; should keep focus when multiple options are selected and not reset to top option when options updated" time="0.031081958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: options &gt; should keep focus when multiple options are selected by not resetting to the top option when options are updated and when options are provided as objects" time="0.039491959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: options &gt; should keep focus on selected option when options updates and when options are provided as objects" time="0.02123075">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: options &gt; should reset the highlight when previously highlighted option doesn&apos;t exists in new options" time="0.0204385">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: options &gt; should reset the highlight when the input changed" time="0.032940708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: options &gt; should not select undefined" time="0.020794917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: options &gt; should work if options are the default data structure" time="0.018534459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: options &gt; should display a &apos;no options&apos; message if no options are available" time="0.014097125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; enter &gt; select a single value when enter is pressed" time="0.018305208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; enter &gt; select multiple value when enter is pressed" time="0.0276905">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: autoComplete &gt; add a completion string" time="0.028242542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; click input &gt; when `openOnFocus` toggles if empty" time="0.019439791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; click input &gt; selects all the first time" time="0.011983292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; click input &gt; should focus the input when clicking on the open action" time="0.022614334">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; click input &gt; should maintain list box open clicking on input when it is not empty" time="0.029971792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; click input &gt; should not toggle list box" time="0.019709458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; controlled &gt; controls the input value" time="0.0137085">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; controlled &gt; should fire the input change event before the change event" time="0.025448333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: filterOptions &gt; should ignore object keys by default" time="0.021597542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: filterOptions &gt; limits the amount of rendered options when `limit` is set in `createFilterOptions`" time="0.013798292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: filterOptions &gt; does not limit the amount of rendered options when `limit` is not set in `createFilterOptions`" time="0.016862666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: freeSolo &gt; pressing twice enter should not call onChange listener twice" time="0.022089">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: freeSolo &gt; should not delete exiting tag when try to add it twice" time="0.048168416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: freeSolo &gt; should not fire change event until the IME is confirmed" time="0.015945208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: freeSolo &gt; should render endAdornment only when clear icon or popup icon is available" time="0.004548625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onChange &gt; provides a reason and details on option creation" time="0.021081459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onChange &gt; provides a reason and details on option selection" time="0.017465583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onChange &gt; provides a reason and details on option removing" time="0.018752291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onChange &gt; provides a reason and details on blur" time="0.019721375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onChange &gt; provides a reason and details on clear" time="0.0226215">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onInputChange &gt; provides a reason on input change" time="0.058976375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onInputChange &gt; provides a reason on select reset" time="0.021863208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onInputChange &gt; provides a reason on clear" time="0.024644084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onInputChange &gt; provides a reason on blur" time="0.055457459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onInputChange &gt; provides a reason on select option" time="0.039203">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onInputChange &gt; provides a reason on remove option" time="0.050431084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: blurOnSelect &gt; [blurOnSelect=true] should blur the input when clicking or touching options" time="0.028549">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: blurOnSelect &gt; [blurOnSelect=&quot;touch&quot;] should only blur the input when an option is touched" time="0.023757917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: blurOnSelect &gt; [blurOnSelect=&quot;mouse&quot;] should only blur the input when an option is clicked" time="0.02506825">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: getOptionLabel &gt; is considered for falsy values when filtering the list of options" time="0.012917959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: getOptionLabel &gt; is not considered for nullish values when filtering the list of options" time="0.016809875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: getOptionLabel &gt; should update the input value when getOptionLabel changes" time="0.024590875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: getOptionLabel &gt; should not update the input value when users is focusing" time="0.032145209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: getOptionLabel &gt; should not throw error when nested options are provided" time="0.019982083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onHighlightChange &gt; should trigger event when default value is passed" time="0.015153375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onHighlightChange &gt; should support keyboard event" time="0.017566875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onHighlightChange &gt; should support mouse event" time="0.01427675">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onHighlightChange &gt; should pass to onHighlightChange the correct value after filtering" time="0.021342084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: onHighlightChange &gt; should reset the highlight when the options change" time="0.019229084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; should filter options when new input value matches option" time="0.043938209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; should prevent the default event handlers" time="0.021009083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: slotProps &gt; should apply the props on the AutocompleteClearIndicator component" time="0.012385334">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: slotProps &gt; should apply the props on the AutocompletePopupIndicator component" time="0.022388375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: slotProps &gt; should keep AutocompletePopper mounted if keepMounted is true in popper props" time="0.009401625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: readOnly &gt; should make the input readonly" time="0.010050333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: readOnly &gt; should not render the clear button" time="0.005326292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: readOnly &gt; should not apply the hasClearIcon class" time="0.005537708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: readOnly &gt; should focus on input when clicked" time="0.018084458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: readOnly &gt; should not open the popup" time="0.009147208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Autocomplete/Autocomplete.test.tsx" name="Joy &lt;Autocomplete /&gt; &gt; prop: readOnly &gt; should not be able to delete the tag when multiple=true" time="0.027004292">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" timestamp="2025-09-10T11:25:37.196Z" hostname="Jans-MacBook-Air.local" tests="38" failures="0" errors="0" skipped="6" time="0.164523542">
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.021107">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005788208">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004153833">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003397417">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.010117666">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.003307584">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003256541">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; sets custom properties on the content slot&apos;s element with the slotProps.content prop" time="0.002819625">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.content with the built-in ones" time="0.003777541">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002602542">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; sets custom properties on the content slot&apos;s element with the slotProps.content callback" time="0.001862959">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003213542">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; sets custom properties on the content slot&apos;s element with the slotProps.content callback using the ownerState" time="0.001758333">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001988167">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001703875">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; allows overriding the content slot with a component using the slots.content prop" time="0.002131041">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; allows overriding the content slot with an element using the slots.content prop" time="0.001582291">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.012814833">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00032625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000189583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000199791">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000161625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000149166">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000135292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.012925917">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; prop: variant &gt; plain by default" time="0.001866917">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; prop: variant &gt; should render plain" time="0.001709708">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; prop: variant &gt; should render outlined" time="0.001640458">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; prop: variant &gt; should render soft" time="0.001979709">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; prop: variant &gt; should render solid" time="0.006827458">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; prop: color &gt; adds a neutral class by default" time="0.001933417">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; prop: color &gt; should render primary" time="0.00169675">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; prop: color &gt; should render success" time="0.001502083">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; prop: color &gt; should render danger" time="0.001426958">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; prop: color &gt; should render neutral" time="0.001402416">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; prop: color &gt; should render warning" time="0.00136075">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; add data-attribute to the first child" time="0.001957708">
        </testcase>
        <testcase classname="packages/mui-joy/src/AspectRatio/AspectRatio.test.tsx" name="&lt;AspectRatio /&gt; &gt; able to pass the props to content slot" time="0.03479975">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Avatar/Avatar.test.tsx" timestamp="2025-09-10T11:25:37.199Z" hostname="Jans-MacBook-Air.local" tests="56" failures="0" errors="0" skipped="6" time="0.202406792">
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.025328708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.007235917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006444291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.006142291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007535667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002939375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.00288125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; sets custom properties on the fallback slot&apos;s element with the slotProps.fallback prop" time="0.002632708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.fallback with the built-in ones" time="0.006478416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002549792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; sets custom properties on the fallback slot&apos;s element with the slotProps.fallback callback" time="0.001796625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.001994625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; sets custom properties on the fallback slot&apos;s element with the slotProps.fallback callback using the ownerState" time="0.005149667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.00216925">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.00180775">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; allows overriding the fallback slot with a component using the slots.fallback prop" time="0.001661625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; allows overriding the fallback slot with an element using the slots.fallback prop" time="0.005578833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.011454834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00034475">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000185">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000188458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000157667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.0002085">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000170375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.020461709">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; prop: variant &gt; soft by default" time="0.001967458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; prop: variant &gt; should render outlined" time="0.002360625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; prop: variant &gt; should render soft" time="0.005203583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; prop: variant &gt; should render solid" time="0.006350292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; prop: color &gt; adds a neutral class by default" time="0.002535208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; prop: color &gt; should render primary" time="0.00492925">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; prop: color &gt; should render success" time="0.00195575">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; prop: color &gt; should render danger" time="0.001954541">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; prop: color &gt; should render neutral" time="0.002251917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; prop: color &gt; should render warning" time="0.00557025">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; prop: size &gt; md by default" time="0.002577417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; prop: size &gt; should render sm" time="0.001867333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; prop: size &gt; should render md" time="0.001966916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; prop: size &gt; should render lg" time="0.002523541">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; image avatar &gt; should render a div containing an img" time="0.003502208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; image avatar &gt; should be able to add more props to the image" time="0.004712708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; image avatar with unrendered children &gt; should render a div containing an img, not children" time="0.002377084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; image avatar with unrendered children &gt; should be able to add more props to the image" time="0.001788042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; font icon avatar &gt; should render a div containing an font icon" time="0.001798542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; font icon avatar &gt; should merge user classes &amp; spread custom props to the root node" time="0.001196917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; font icon avatar &gt; should apply the colorNeutral class" time="0.001049542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; svg icon avatar &gt; should render a div containing an svg icon" time="0.001492208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; svg icon avatar &gt; should merge user classes &amp; spread custom props to the root node" time="0.001409833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; svg icon avatar &gt; should apply the colorNeutral class" time="0.001303958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; text avatar &gt; should render a div containing a string" time="0.000963625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; text avatar &gt; should merge user classes &amp; spread custom props to the root node" time="0.001095959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; text avatar &gt; should apply the colorNeutral class" time="0.000984">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; falsey avatar &gt; should render with defaultColor class when supplied with a child with falsey value" time="0.002800416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; falsey avatar &gt; should merge user classes &amp; spread custom props to the root node" time="0.002279958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; falsey avatar &gt; should apply the colorNeutral class" time="0.001128542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Avatar/Avatar.test.tsx" name="&lt;Avatar /&gt; &gt; should render first letter of alt when src or srcSet are not available" time="0.000999917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" timestamp="2025-09-10T11:25:37.202Z" hostname="Jans-MacBook-Air.local" tests="23" failures="0" errors="0" skipped="6" time="0.229199458">
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.029430208">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.007767542">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.008576625">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.007938875">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.01155375">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.006990375">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003792833">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004370833">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003858375">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003464167">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001489333">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.017145833">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000413792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000219625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000219458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000187417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.00017025">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000352792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.024859708">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; should have li tag" time="0.068120375">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; should render with the variant class" time="0.016053083">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; should render with primary color class" time="0.00757775">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteOption/AutocompleteOption.test.tsx" name="Joy &lt;AutocompleteOption /&gt; &gt; should accept className prop" time="0.002466542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Badge/Badge.test.tsx" timestamp="2025-09-10T11:25:37.204Z" hostname="Jans-MacBook-Air.local" tests="59" failures="0" errors="0" skipped="6" time="0.180143292">
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.020567042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005933875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005230209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0037545">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008920792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.006786375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.0042235">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; sets custom properties on the badge slot&apos;s element with the slotProps.badge prop" time="0.003709708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.badge with the built-in ones" time="0.0060445">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.0021435">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; sets custom properties on the badge slot&apos;s element with the slotProps.badge callback" time="0.001774334">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.001754">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; sets custom properties on the badge slot&apos;s element with the slotProps.badge callback using the ownerState" time="0.001856584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002324292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001821916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; allows overriding the badge slot with a component using the slots.badge prop" time="0.001351458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; allows overriding the badge slot with an element using the slots.badge prop" time="0.002198291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.013276375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000330333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000182042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000186167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000294792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000899959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.00088375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.011352375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; renders children and badgeContent" time="0.00218175">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; renders children" time="0.002644833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: invisible &gt; should default to false" time="0.003839417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: invisible &gt; should render without the invisible class when set to false" time="0.002914667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: invisible &gt; should render with the invisible class when set to true" time="0.001627083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: invisible &gt; should render with invisible class when invisible and showZero are set to false and content is 0" time="0.002570375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: invisible &gt; should not render with invisible class when invisible and showZero are set to false and content is not 0" time="0.00162875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: showZero &gt; should default to false" time="0.001684167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: showZero &gt; should render without the invisible class when false and badgeContent is not 0" time="0.001902625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: showZero &gt; should render without the invisible class when true and badgeContent is 0" time="0.002837334">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: showZero &gt; should render with the invisible class when false and badgeContent is 0" time="0.001649916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: color &gt; adds a neutral class by default" time="0.00276">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: color &gt; should render primary" time="0.003728125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: color &gt; should render success" time="0.00164675">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: color &gt; should render danger" time="0.001575166">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: color &gt; should render neutral" time="0.002094334">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: color &gt; should render warning" time="0.001739792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: size &gt; adds a sm class by default" time="0.001484958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: size &gt; should render sm" time="0.001431834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: size &gt; should render md" time="0.001672875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: size &gt; should render lg" time="0.001670958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: variant &gt; adds a light class by default" time="0.001606916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: variant &gt; should render outlined" time="0.00177725">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: variant &gt; should render soft" time="0.001536">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: variant &gt; should render solid" time="0.002120041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: max &gt; should default to 99" time="0.001912042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: max &gt; should cap badgeContent" time="0.002834209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: max &gt; should not cap if badgeContent and max are equal" time="0.002942125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: max &gt; should not cap if badgeContent is lower than max" time="0.001747208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: anchorOrigin &gt; topRight by default" time="0.002732792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: anchorOrigin &gt; should render [object Object]" time="0.001636292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: anchorOrigin &gt; should render [object Object]" time="0.001354042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: anchorOrigin &gt; should render [object Object]" time="0.001391625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Badge/Badge.test.tsx" name="&lt;Badge /&gt; &gt; prop: anchorOrigin &gt; should render [object Object]" time="0.001242916">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" timestamp="2025-09-10T11:25:37.207Z" hostname="Jans-MacBook-Air.local" tests="25" failures="0" errors="0" skipped="6" time="0.106894125">
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.027437167">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006662541">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006387416">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003598208">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006574166">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.003755458">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002818375">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002969042">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003357667">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001620792">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.00128875">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.012367458">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000348041">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000200291">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000227833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000186959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.00022">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.00016125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.012516125">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; should have ul tag" time="0.001863583">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; should have root className" time="0.001646959">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; should accept className prop" time="0.002414375">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; should have sm classes" time="0.002740708">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; should render with the variant class" time="0.002107083">
        </testcase>
        <testcase classname="packages/mui-joy/src/AutocompleteListbox/AutocompleteListbox.test.tsx" name="Joy &lt;AutocompleteListbox /&gt; &gt; should render with primary color class" time="0.001738417">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" timestamp="2025-09-10T11:25:37.208Z" hostname="Jans-MacBook-Air.local" tests="20" failures="0" errors="0" skipped="6" time="0.087132459">
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.019264333">
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.00490325">
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003624917">
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002592541">
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004199208">
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002098334">
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.001940875">
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002286542">
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.004396875">
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003528792">
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001559458">
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.013088416">
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000372458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000207583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000220792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.0001815">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000166333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000161667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.013510417">
        </testcase>
        <testcase classname="packages/mui-joy/src/AvatarGroup/AvatarGroup.test.tsx" name="&lt;AvatarGroup /&gt; &gt; provide context to Avatar" time="0.0069225">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" timestamp="2025-09-10T11:25:37.210Z" hostname="Jans-MacBook-Air.local" tests="29" failures="0" errors="0" skipped="6" time="0.192240709">
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.020318875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.007422459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.0041305">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003792291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.011062208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.006530417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.005523833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; sets custom properties on the ol slot&apos;s element with the slotProps.ol prop" time="0.002493542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.ol with the built-in ones" time="0.00422225">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.0038015">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; sets custom properties on the ol slot&apos;s element with the slotProps.ol callback" time="0.004703375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.001798875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; sets custom properties on the ol slot&apos;s element with the slotProps.ol callback using the ownerState" time="0.001480459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.00171225">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002364791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; allows overriding the ol slot with a component using the slots.ol prop" time="0.0031395">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; allows overriding the ol slot with an element using the slots.ol prop" time="0.00170725">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.015794958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000418333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000219917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.00023275">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000183625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000236625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000152125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.018973959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; prop: size &gt; md by default" time="0.037501209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; prop: size &gt; should render sm" time="0.009556417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; prop: size &gt; should render md" time="0.0161605">
        </testcase>
        <testcase classname="packages/mui-joy/src/Breadcrumbs/Breadcrumbs.test.tsx" name="&lt;Breadcrumbs /&gt; &gt; prop: size &gt; should render lg" time="0.003866875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Box/Box.test.tsx" timestamp="2025-09-10T11:25:37.212Z" hostname="Jans-MacBook-Air.local" tests="14" failures="0" errors="0" skipped="9" time="0.1493805">
        <testcase classname="packages/mui-joy/src/Box/Box.test.tsx" name="Joy &lt;Box /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.063531125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Box/Box.test.tsx" name="Joy &lt;Box /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.016299666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Box/Box.test.tsx" name="Joy &lt;Box /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.009295709">
        </testcase>
        <testcase classname="packages/mui-joy/src/Box/Box.test.tsx" name="Joy &lt;Box /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.031406958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Box/Box.test.tsx" name="Joy &lt;Box /&gt; &gt; respects theme from context" time="0.001593166">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Box/Box.test.tsx" name="Joy &lt;Box /&gt; &gt; ClassNameGenerator &gt; get custom className" time="0.015899125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Box/Box.test.tsx" name="Joy &lt;Box /&gt; &gt; sx &gt; color" time="0.000526542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Box/Box.test.tsx" name="Joy &lt;Box /&gt; &gt; sx &gt; bgcolor" time="0.000343583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Box/Box.test.tsx" name="Joy &lt;Box /&gt; &gt; sx &gt; backgroundColor" time="0.001894875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Box/Box.test.tsx" name="Joy &lt;Box /&gt; &gt; sx &gt; borderRadius" time="0.000999875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Box/Box.test.tsx" name="Joy &lt;Box /&gt; &gt; sx &gt; boxShadow" time="0.000801042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Box/Box.test.tsx" name="Joy &lt;Box /&gt; &gt; sx &gt; fontSize" time="0.00069475">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Box/Box.test.tsx" name="Joy &lt;Box /&gt; &gt; sx &gt; fontWeight" time="0.000700834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Box/Box.test.tsx" name="Joy &lt;Box /&gt; &gt; sx &gt; lineHeight" time="0.000618583">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/CardActions/CardActions.test.tsx" timestamp="2025-09-10T11:25:37.213Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="4" time="0.093506833">
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.024572209">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005018542">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.00418525">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002697959">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008583333">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002654167">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002688375">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002613208">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.006178458">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.005071584">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.004019167">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.012981542">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000420958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000201584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.00021425">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000179334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardActions/CardActions.test.tsx" name="&lt;CardActions /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.00887025">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Card/Card.test.tsx" timestamp="2025-09-10T11:25:37.214Z" hostname="Jans-MacBook-Air.local" tests="32" failures="0" errors="0" skipped="6" time="0.130656208">
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.020622167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.009553708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005410833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003368708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005176292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002384959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002281417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002377917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.00338075">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001684459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001188041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.012071792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000339625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000205833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000213416">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.00017475">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000170333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000155833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.0135785">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; prop: variant &gt; outlined by default" time="0.001870333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; prop: variant &gt; should render plain" time="0.001399541">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; prop: variant &gt; should render outlined" time="0.001254959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; prop: variant &gt; should render soft" time="0.001332208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; prop: variant &gt; should render solid" time="0.001500917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; prop: color &gt; adds a neutral class by default" time="0.001468958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; prop: color &gt; should render primary" time="0.001783916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; prop: color &gt; should render success" time="0.001611333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; prop: color &gt; should render danger" time="0.00192875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; prop: color &gt; should render neutral" time="0.012233042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; prop: color &gt; should render warning" time="0.003889166">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; can change size" time="0.009250792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; add data-attribute to the first and last child" time="0.003477459">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/CardCover/CardCover.test.tsx" timestamp="2025-09-10T11:25:37.216Z" hostname="Jans-MacBook-Air.local" tests="18" failures="0" errors="0" skipped="4" time="0.100170792">
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.022790083">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.014098833">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007713083">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.007023666">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00729325">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002318458">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002343625">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002276291">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003083084">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001548541">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001057625">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.011894541">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00034575">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000209917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000212166">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.00020275">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.009727625">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardCover/CardCover.test.tsx" name="&lt;CardCover /&gt; &gt; add data-attribute to the first child" time="0.002933666">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" timestamp="2025-09-10T11:25:37.217Z" hostname="Jans-MacBook-Air.local" tests="30" failures="0" errors="0" skipped="6" time="0.119481542">
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.024791458">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.007923042">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004534792">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003359667">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004628916">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002670292">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.00368875">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002602125">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003963875">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.00222775">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001590375">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.01503225">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000336">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000211125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.0002">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000164666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000162583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000142834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.011690542">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; prop: variant &gt; plain by default" time="0.002327834">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; prop: variant &gt; should render plain" time="0.002131833">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; prop: variant &gt; should render outlined" time="0.0021615">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; prop: variant &gt; should render soft" time="0.002914417">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; prop: variant &gt; should render solid" time="0.002566208">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; prop: color &gt; adds a neutral class by default" time="0.002357083">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; prop: color &gt; should render primary" time="0.002329417">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; prop: color &gt; should render success" time="0.004126417">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; prop: color &gt; should render danger" time="0.002376208">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; prop: color &gt; should render neutral" time="0.002064208">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardOverflow/CardOverflow.test.tsx" name="&lt;CardOverflow /&gt; &gt; prop: color &gt; should render warning" time="0.002180917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" timestamp="2025-09-10T11:25:37.219Z" hostname="Jans-MacBook-Air.local" tests="38" failures="0" errors="0" skipped="6" time="0.593169">
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.037705792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005416916">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.009375708">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.010419584">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.014045208">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.008839375">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.018930083">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004876375">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.00818275">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.004313334">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.003440292">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.02578675">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000606708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000233666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000703334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000246042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000178833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000153917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.021407375">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; prop: variant &gt; has role group" time="0.061643375">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; prop: variant &gt; plain by default" time="0.0225955">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; prop: variant &gt; should render plain" time="0.036825375">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; prop: variant &gt; should render outlined" time="0.018154875">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; prop: variant &gt; should render soft" time="0.007973458">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; prop: variant &gt; should render solid" time="0.007383292">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; prop: variant &gt; should override button group value" time="0.0590425">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; prop: color &gt; adds a neutral class by default" time="0.009498417">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; prop: color &gt; should render primary" time="0.012808333">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; prop: color &gt; should render success" time="0.010629958">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; prop: color &gt; should render danger" time="0.01115275">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; prop: color &gt; should render neutral" time="0.011991666">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; prop: color &gt; should render warning" time="0.014361917">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; prop: color &gt; should override button group value" time="0.024709334">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; can change size" time="0.048090875">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; add data-attribute to the first and last child" time="0.017158583">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; should not add data-attribute to single child" time="0.010327416">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; pass disabled to buttons" time="0.014597083">
        </testcase>
        <testcase classname="packages/mui-joy/src/ButtonGroup/ButtonGroup.test.tsx" name="&lt;ButtonGroup /&gt; &gt; pass disabled to buttons unless it is overriden" time="0.010778208">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/CardContent/CardContent.test.tsx" timestamp="2025-09-10T11:25:37.222Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="4" time="0.078586167">
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.020311208">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005286833">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003649291">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002225916">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.003726042">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.00205425">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003929875">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002195041">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003009667">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001572792">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.00175175">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.015503583">
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000381625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000214333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000226">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000190542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CardContent/CardContent.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.010593709">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Button/Button.test.tsx" timestamp="2025-09-10T11:25:37.223Z" hostname="Jans-MacBook-Air.local" tests="51" failures="0" errors="0" skipped="9" time="0.401971833">
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.038901542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.010628375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.010778208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005998833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.004760375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.010385333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator prop" time="0.01278275">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.startDecorator with the built-in ones" time="0.007586333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator prop" time="0.007563083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.endDecorator with the built-in ones" time="0.007028458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.003350084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback" time="0.004005791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback" time="0.003762625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.002941">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback using the ownerState" time="0.003318042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback using the ownerState" time="0.003491167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.004925583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002624208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with a component using the slots.startDecorator prop" time="0.005087708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with an element using the slots.startDecorator prop" time="0.003535458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with a component using the slots.endDecorator prop" time="0.003251209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with an element using the slots.endDecorator prop" time="0.002745167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.024052292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000362041">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000202333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000185375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000157667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000139666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000160208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.01328575">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; by default, should render with the root, variantSolid, sizeMd and colorPrimary classes" time="0.067083375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; should render an outlined button" time="0.009690209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; should render a light button" time="0.005456958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; should render a contained button" time="0.003464542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; should render a small button" time="0.0062705">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; should render a large button" time="0.003979708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; should render a fullWidth button" time="0.0041905">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; should render a button with startDecorator" time="0.006402458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; should render a button with endDecorator" time="0.010173625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; prop: loading &gt; disables the button" time="0.00794825">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; prop: loading &gt; should disable button when loading is true and disabled is false" time="0.00971025">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; prop: loading &gt; should disable button when loading is false and disabled is true" time="0.009119792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; prop: loading &gt; renders a progressbar" time="0.015972417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; prop:disabled &gt; should apply disabled styles when button is disabled" time="0.000285709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; prop:disabled &gt; should apply disabled styles when button is disabled and when component prop is provided" time="0.000169667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; prop: loadingIndicator &gt; is not rendered by default" time="0.007672416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; prop: loadingIndicator &gt; is rendered properly when `loading` and children should not be visible" time="0.000974209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; prop: loadingPosition &gt; center is rendered by default" time="0.013274708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; prop: loadingPosition &gt; there should be only one loading indicator" time="0.008393375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; prop: loadingPosition &gt; loading indicator with `position=&quot;start&quot;` replaces the `startDecorator` content" time="0.005904916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Button/Button.test.tsx" name="Joy &lt;Button /&gt; &gt; prop: loadingPosition &gt; loading indicator with `position=&quot;end&quot;` replaces the `startDecorator` content" time="0.005496875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" timestamp="2025-09-10T11:25:37.226Z" hostname="Jans-MacBook-Air.local" tests="58" failures="0" errors="0" skipped="4" time="0.544632917">
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.070268083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.017019708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.01044525">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.008397875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.010986208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the checkbox slot&apos;s element with the slotProps.checkbox prop" time="0.004204458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.checkbox with the built-in ones" time="0.004452292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.009773125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.input with the built-in ones" time="0.013394584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the action slot&apos;s element with the slotProps.action prop" time="0.0053545">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.action with the built-in ones" time="0.015492791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label prop" time="0.003025916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.label with the built-in ones" time="0.004619041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.007622375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the checkbox slot&apos;s element with the slotProps.checkbox callback" time="0.003331292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback" time="0.002739083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the action slot&apos;s element with the slotProps.action callback" time="0.007182709">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label callback" time="0.00946425">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.00904375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the checkbox slot&apos;s element with the slotProps.checkbox callback using the ownerState" time="0.007603708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback using the ownerState" time="0.009517833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the action slot&apos;s element with the slotProps.action callback using the ownerState" time="0.006897">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label callback using the ownerState" time="0.006341458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.007612292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.00889275">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; allows overriding the checkbox slot with a component using the slots.checkbox prop" time="0.003442">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; allows overriding the checkbox slot with an element using the slots.checkbox prop" time="0.005585375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.009065416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; allows overriding the input slot with an element using the slots.input prop" time="0.004290834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; allows overriding the action slot with a component using the slots.action prop" time="0.012210834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; allows overriding the action slot with an element using the slots.action prop" time="0.004264667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; allows overriding the label slot with a component using the slots.label prop" time="0.01006475">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; allows overriding the label slot with an element using the slots.label prop" time="0.007081083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.027190167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000355958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000178292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000180291">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000581459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.020615625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; should have the classes required for Checkbox" time="0.000557167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; renders a `role=&quot;checkbox&quot;` with the id" time="0.056502417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; renders a `role=&quot;checkbox&quot;` with the name" time="0.008547292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; renders a `role=&quot;checkbox&quot;` with required attribute" time="0.006599417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; renders a `role=&quot;checkbox&quot;` with readOnly attribute" time="0.007567625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; renders a `role=&quot;checkbox&quot;` with the Unchecked state by default" time="0.008645708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; renders a checkbox with the Checked state when checked" time="0.007689">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; renders a label" time="0.014688375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; the checkbox can be disabled" time="0.004315666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; the Checked state changes after change events" time="0.016225959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; should have configurable color" time="0.005562375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; should have configurable variant" time="0.007853">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; should have configurable size" time="0.004746875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; prop: indeterminate &gt; should render an indeterminate icon" time="0.002954792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; prop: indeterminate &gt; should have aria-checked=&quot;mixed&quot;" time="0.005674583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; icon &gt; should render an indeterminate icon when both checked and indeterminate is true" time="0.00490375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; icon &gt; should render checked icon" time="0.003328625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; icon &gt; should render unchecked icon" time="0.002576667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Checkbox/Checkbox.test.tsx" name="&lt;Checkbox /&gt; &gt; icon &gt; should not render icon" time="0.003959542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" timestamp="2025-09-10T11:25:37.229Z" hostname="Jans-MacBook-Air.local" tests="26" failures="0" errors="0" skipped="6" time="0.311385458">
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.039582125">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.016786792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.014807125">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004445417">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007889875">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.006335042">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.011356333">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.005030167">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.006454292">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.004589542">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.004367583">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.016030541">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000581875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000470333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000228541">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000169709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000212917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000140125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.024649959">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; Chip context &gt; disabled" time="0.076905833">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; Chip context &gt; change variant according to the Chip" time="0.015295458">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; Chip context &gt; use variant prop if provided" time="0.014669917">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; Chip context &gt; change color according to the Chip" time="0.007454875">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; Chip context &gt; use color prop if provided" time="0.009913667">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; Chip onDelete &gt; should call onDelete function when backspace, enter or delete is pressed" time="0.014803083">
        </testcase>
        <testcase classname="packages/mui-joy/src/ChipDelete/ChipDelete.test.tsx" name="&lt;ChipDelete /&gt; &gt; Chip onDelete &gt; should not call onDelete function when ChipDelete is disabled" time="0.006081875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Container/Container.test.tsx" timestamp="2025-09-10T11:25:37.231Z" hostname="Jans-MacBook-Air.local" tests="13" failures="0" errors="0" skipped="6" time="0.070731416">
        <testcase classname="packages/mui-joy/src/Container/Container.test.tsx" name="Joy &lt;Container /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.023364958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Container/Container.test.tsx" name="Joy &lt;Container /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005335625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Container/Container.test.tsx" name="Joy &lt;Container /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004436375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Container/Container.test.tsx" name="Joy &lt;Container /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002974708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Container/Container.test.tsx" name="Joy &lt;Container /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004644083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Container/Container.test.tsx" name="Joy &lt;Container /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.013869666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Container/Container.test.tsx" name="Joy &lt;Container /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000405625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Container/Container.test.tsx" name="Joy &lt;Container /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000344666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Container/Container.test.tsx" name="Joy &lt;Container /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000517958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Container/Container.test.tsx" name="Joy &lt;Container /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000240042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Container/Container.test.tsx" name="Joy &lt;Container /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000182875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Container/Container.test.tsx" name="Joy &lt;Container /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000167125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Container/Container.test.tsx" name="Joy &lt;Container /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.011976334">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/CssBaseline/CssBaseline.test.tsx" timestamp="2025-09-10T11:25:37.231Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.001258334">
        <testcase classname="packages/mui-joy/src/CssBaseline/CssBaseline.test.tsx" name="&lt;CssBaseline /&gt; &gt; To do" time="0.000626834">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" timestamp="2025-09-10T11:25:37.231Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="4" time="0.100101334">
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.025796834">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006171375">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004302041">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004529417">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.0060045">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.00320225">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003322167">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.003004667">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003892209">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003051792">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001608709">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.018003">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000459042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.00021325">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.0002255">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000183417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogActions/DialogActions.test.tsx" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.013910917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" timestamp="2025-09-10T11:25:37.232Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="4" time="0.08226875">
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.02055775">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005723291">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004027917">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002545959">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007437041">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002732792">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002448333">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002257166">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003374375">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001585916">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001094542">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.013726875">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000338541">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000204916">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000213125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000202375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogContent/DialogContent.test.tsx" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.012236041">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" timestamp="2025-09-10T11:25:37.233Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="4" time="0.088562542">
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.021700083">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006811917">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003854792">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003619917">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00458975">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002217416">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002166875">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.0084675">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003611416">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002900958">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.00317925">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.013168917">
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000364917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000224333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000216375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000179167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/DialogTitle/DialogTitle.test.tsx" name="&lt;CardContent /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.008622083">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Divider/Divider.test.tsx" timestamp="2025-09-10T11:25:37.234Z" hostname="Jans-MacBook-Air.local" tests="24" failures="0" errors="0" skipped="6" time="0.098689625">
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.0187525">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005040417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003466125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00246925">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005086542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002759333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002626417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002136792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.0027765">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001600042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002246375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.013118333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000367833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000216459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000222708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000179584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000170416">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000155792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.01215875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; prop: children &gt; should render with the children" time="0.010237292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; prop: inset &gt; should add context class" time="0.004583542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; role &gt; avoids adding implicit aria semantics" time="0.002206709">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; role &gt; adds a proper role if none is specified" time="0.002286291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Divider/Divider.test.tsx" name="Joy &lt;Divider /&gt; &gt; role &gt; overrides the computed role with the provided one" time="0.001996291">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" timestamp="2025-09-10T11:25:37.236Z" hostname="Jans-MacBook-Air.local" tests="52" failures="0" errors="0" skipped="6" time="0.2959045">
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.038700041">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.010571375">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.010835083">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.007272667">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006924917">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.004152083">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.004598625">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; sets custom properties on the svg slot&apos;s element with the slotProps.svg prop" time="0.009576334">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.svg with the built-in ones" time="0.006613417">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; sets custom properties on the track slot&apos;s element with the slotProps.track prop" time="0.003036917">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.track with the built-in ones" time="0.005094584">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; sets custom properties on the progress slot&apos;s element with the slotProps.progress prop" time="0.002271833">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.progress with the built-in ones" time="0.003822167">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.006634292">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; sets custom properties on the svg slot&apos;s element with the slotProps.svg callback" time="0.003582125">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; sets custom properties on the track slot&apos;s element with the slotProps.track callback" time="0.002160208">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; sets custom properties on the progress slot&apos;s element with the slotProps.progress callback" time="0.00208625">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.004488208">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; sets custom properties on the svg slot&apos;s element with the slotProps.svg callback using the ownerState" time="0.003295417">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; sets custom properties on the track slot&apos;s element with the slotProps.track callback using the ownerState" time="0.0049555">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; sets custom properties on the progress slot&apos;s element with the slotProps.progress callback using the ownerState" time="0.002082666">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002384542">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.012980083">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; allows overriding the svg slot with a component using the slots.svg prop" time="0.001875625">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; allows overriding the track slot with a component using the slots.track prop" time="0.006076666">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; allows overriding the track slot with an element using the slots.track prop" time="0.003490167">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; allows overriding the progress slot with a component using the slots.progress prop" time="0.001964041">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; allows overriding the progress slot with an element using the slots.progress prop" time="0.003546375">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.015993542">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000331375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.0001935">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000198209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000164583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000166458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000147">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.011407375">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: determinate &gt; should render a determinate circular progress" time="0.0282145">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: variant &gt; soft by default" time="0.004034458">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: variant &gt; should render plain" time="0.008769791">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: variant &gt; should render outlined" time="0.004215">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: variant &gt; should render soft" time="0.00383525">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: variant &gt; should render solid" time="0.003479625">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: color &gt; adds a primary class by default" time="0.004078042">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: color &gt; should render primary" time="0.005100167">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: color &gt; should render success" time="0.003207709">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: color &gt; should render danger" time="0.003102541">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: color &gt; should render neutral" time="0.003960875">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: color &gt; should render warning" time="0.003105625">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: size &gt; md by default" time="0.002951542">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: size &gt; should render sm" time="0.003932958">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: size &gt; should render md" time="0.003412542">
        </testcase>
        <testcase classname="packages/mui-joy/src/CircularProgress/CircularProgress.test.tsx" name="&lt;CircularProgress /&gt; &gt; prop: size &gt; should render lg" time="0.004550458">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Chip/Chip.test.tsx" timestamp="2025-09-10T11:25:37.239Z" hostname="Jans-MacBook-Air.local" tests="61" failures="0" errors="0" skipped="6" time="0.263611625">
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.023354709">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006036167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004695833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005727125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005010458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002772125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.00286625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label prop" time="0.002863958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.label with the built-in ones" time="0.003935125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator prop" time="0.002834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.startDecorator with the built-in ones" time="0.002585875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator prop" time="0.004840292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.endDecorator with the built-in ones" time="0.002255041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002221542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label callback" time="0.001921459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback" time="0.001891417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback" time="0.002033375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.002040667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label callback using the ownerState" time="0.001884333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback using the ownerState" time="0.001857917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback using the ownerState" time="0.001819708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003490167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.006465">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; allows overriding the label slot with a component using the slots.label prop" time="0.002104834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; allows overriding the label slot with an element using the slots.label prop" time="0.002701417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with a component using the slots.startDecorator prop" time="0.003507417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with an element using the slots.startDecorator prop" time="0.004118292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with a component using the slots.endDecorator prop" time="0.001820834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with an element using the slots.endDecorator prop" time="0.0017615">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.00894275">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000332">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.0001845">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000186459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.00015175">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000154">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000132542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.010778708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; renders children" time="0.025740959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; decorator &gt; should render startDecorator element" time="0.002869875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; decorator &gt; should render endDecorator element" time="0.002912666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: variant &gt; contained by default" time="0.005467375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: variant &gt; should render outlined" time="0.00192175">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: variant &gt; should render plain" time="0.003450917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: variant &gt; should render solid" time="0.001659333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: color &gt; adds a primary class by default" time="0.001873416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: color &gt; should render primary" time="0.001748458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: color &gt; should render success" time="0.00151175">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: color &gt; should render danger" time="0.002039125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: color &gt; should render neutral" time="0.001564083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: color &gt; should render warning" time="0.001399791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: size &gt; md by default" time="0.001573084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: size &gt; should render sm" time="0.001597416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: size &gt; should render md" time="0.001429625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: size &gt; should render lg" time="0.001342041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; clickable &gt; renders action element when `onClick` is provided" time="0.027074542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; clickable &gt; should call onClick" time="0.008296">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; clickable &gt; renders action element when `slotProps.action` is provided" time="0.0054085">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; clickable &gt; renders custom action element" time="0.01434775">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: disabled &gt; renders as a disabled chip when `disabled` is `true`" time="0.002474667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: disabled &gt; renders as a non-disabled chip when `disabled` is `false`" time="0.006261084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Chip/Chip.test.tsx" name="&lt;Chip /&gt; &gt; prop: disabled &gt; renders disabled action element" time="0.005355833">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Drawer/Drawer.test.tsx" timestamp="2025-09-10T11:25:37.242Z" hostname="Jans-MacBook-Air.local" tests="23" failures="0" errors="0" skipped="3" time="0.18314925">
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.065335375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.009853417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.009175167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0055375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.009553958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.005092125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop prop" time="0.004396292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.backdrop with the built-in ones" time="0.004371375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.008387375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop callback" time="0.003983333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.004015834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop callback using the ownerState" time="0.005004583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003758458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.00413025">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; allows overriding the backdrop slot with a component using the slots.backdrop prop" time="0.003341166">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; allows overriding the backdrop slot with an element using the slots.backdrop prop" time="0.004165583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000419917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.00019525">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.014121292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; renders children" time="0.005991542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; slots: content &gt; has tabIndex={-1} by default" time="0.005275167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; slots: content &gt; can override tabIndex" time="0.00382175">
        </testcase>
        <testcase classname="packages/mui-joy/src/Drawer/Drawer.test.tsx" name="&lt;Drawer /&gt; &gt; slots: content &gt; should apply content theme styles for content slot" time="0.000244125">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/FormControl/FormControl.test.tsx" timestamp="2025-09-10T11:25:37.243Z" hostname="Jans-MacBook-Air.local" tests="65" failures="0" errors="0" skipped="6" time="0.790445917">
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.028164709">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.014119875">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007658375">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0062665">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.01134575">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002398291">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002274">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.010157375">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003153708">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001668875">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001189542">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.014006209">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000343667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000186375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000193042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000188416">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000159417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000140458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.02935875">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; prop: color &gt; does not have color by default" time="0.0070795">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; prop: color &gt; should render primary" time="0.001927292">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; prop: color &gt; should render success" time="0.002154959">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; prop: color &gt; should render danger" time="0.005608">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; prop: color &gt; should render neutral" time="0.001326458">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; prop: color &gt; should render warning" time="0.001404875">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Input &gt; should linked the label" time="0.071614375">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Input &gt; should inherit color prop from FormControl" time="0.007210416">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Input &gt; should inherit error prop from FormControl" time="0.005164292">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Input &gt; should inherit disabled from FormControl" time="0.0150405">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Input &gt; should inherit required from FormControl" time="0.018546875">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Textarea &gt; should linked the label" time="0.015250875">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Textarea &gt; should inherit color prop from FormControl" time="0.007226583">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Textarea &gt; should inherit error prop from FormControl" time="0.015292833">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Textarea &gt; should inherit disabled from FormControl" time="0.012459042">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Textarea &gt; should inherit required from FormControl" time="0.014679375">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Select &gt; should linked the label" time="0.02393225">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Select &gt; should labeledby form label" time="0.011272959">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Select &gt; should inherit color prop from FormControl" time="0.01582375">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Select &gt; should inherit error prop from FormControl" time="0.016879291">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Select &gt; should inherit disabled from FormControl" time="0.012427166">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Checkbox &gt; should linked the label and helper text" time="0.032983833">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Checkbox &gt; should inherit color prop from FormControl" time="0.00541775">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Checkbox &gt; should inherit error prop from FormControl" time="0.011128833">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Checkbox &gt; should inherit disabled from FormControl" time="0.008243167">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Checkbox &gt; should inherit required from FormControl" time="0.003958917">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; RadioGroup &gt; should linked the label and helper text" time="0.016491375">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; RadioGroup &gt; works with radio buttons" time="0.029711167">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; RadioGroup &gt; radio buttons should inherit size from the FormControl" time="0.012327959">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; RadioGroup &gt; radio buttons should inherit size from the RadioGroup" time="0.021440458">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Radio &gt; should linked the label and helper text" time="0.016194959">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Radio &gt; should inherit color prop from FormControl" time="0.0101195">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Radio &gt; should inherit error prop from FormControl" time="0.015388833">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Radio &gt; should inherit disabled from FormControl" time="0.028119667">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Radio &gt; should inherit required from FormControl" time="0.0414805">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Switch &gt; should linked the helper text" time="0.022632292">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Switch &gt; should inherit color prop from FormControl" time="0.003866125">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Switch &gt; should inherit error prop from FormControl" time="0.005619375">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Switch &gt; should inherit disabled from FormControl" time="0.004299833">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Autocomplete &gt; should linked the label" time="0.020728834">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Autocomplete &gt; should inherit color prop from FormControl" time="0.01350225">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Autocomplete &gt; should inherit error prop from FormControl" time="0.017628042">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Autocomplete &gt; should inherit disabled from FormControl" time="0.016777333">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; Autocomplete &gt; should inherit required from FormControl" time="0.011177">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; should inherit htmlFor from FormControl if htmlFor is undefined" time="0.001728291">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormControl/FormControl.test.tsx" name="&lt;FormControl /&gt; &gt; should inherit id from FormControl if id is undefined" time="0.001473542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" timestamp="2025-09-10T11:25:37.247Z" hostname="Jans-MacBook-Air.local" tests="26" failures="0" errors="0" skipped="4" time="0.121487583">
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.023059583">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.008013541">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007685166">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005058">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006053125">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.00246325">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.00230225">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; sets custom properties on the asterisk slot&apos;s element with the slotProps.asterisk prop" time="0.002255583">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.asterisk with the built-in ones" time="0.00301875">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002006583">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; sets custom properties on the asterisk slot&apos;s element with the slotProps.asterisk callback" time="0.001676625">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.0015705">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; sets custom properties on the asterisk slot&apos;s element with the slotProps.asterisk callback using the ownerState" time="0.001455583">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001471917">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001529916">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; allows overriding the asterisk slot with a component using the slots.asterisk prop" time="0.014841">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; allows overriding the asterisk slot with an element using the slots.asterisk prop" time="0.001629583">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.01478825">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000384291">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000215584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000222542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000177917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.014210083">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; should have root className" time="0.001365625">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; should accept className prop" time="0.001177">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormLabel/FormLabel.test.tsx" name="Joy &lt;FormLabel /&gt; &gt; should accept htmlFor" time="0.001225916">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Grid/Grid.test.tsx" timestamp="2025-09-10T11:25:37.248Z" hostname="Jans-MacBook-Air.local" tests="13" failures="0" errors="0" skipped="6" time="0.102023625">
        <testcase classname="packages/mui-joy/src/Grid/Grid.test.tsx" name="Joy UI &lt;Grid /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.045038083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Grid/Grid.test.tsx" name="Joy UI &lt;Grid /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.004983834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Grid/Grid.test.tsx" name="Joy UI &lt;Grid /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006906792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Grid/Grid.test.tsx" name="Joy UI &lt;Grid /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003842708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Grid/Grid.test.tsx" name="Joy UI &lt;Grid /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.016786208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Grid/Grid.test.tsx" name="Joy UI &lt;Grid /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00040275">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Grid/Grid.test.tsx" name="Joy UI &lt;Grid /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000302708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Grid/Grid.test.tsx" name="Joy UI &lt;Grid /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000387625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Grid/Grid.test.tsx" name="Joy UI &lt;Grid /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000652291">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Grid/Grid.test.tsx" name="Joy UI &lt;Grid /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000358209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Grid/Grid.test.tsx" name="Joy UI &lt;Grid /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000243">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Grid/Grid.test.tsx" name="Joy UI &lt;Grid /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.018646">
        </testcase>
        <testcase classname="packages/mui-joy/src/Grid/Grid.test.tsx" name="Joy UI &lt;Grid /&gt; &gt; className should be prefixed with Mui" time="0.001880084">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/IconButton/IconButton.test.tsx" timestamp="2025-09-10T11:25:37.249Z" hostname="Jans-MacBook-Air.local" tests="27" failures="0" errors="0" skipped="6" time="0.219441708">
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.028669834">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.011074416">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.009112834">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006436875">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.007591459">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.005248708">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004589791">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003063333">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.00409075">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001899875">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.022855959">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000363541">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000936792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000858958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000199875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000167375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000151209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.017105041">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; by default, should render with the root, variantPlain, sizeMd and colorNeutral classes" time="0.049343292">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; should render an outlined button" time="0.007619042">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; should render a text button" time="0.00469425">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; should render a contained button" time="0.005190583">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; should render a small button" time="0.004576459">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; should render a large button" time="0.004549667">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; should disable the component" time="0.008208125">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; prop: loadingIndicator &gt; is not rendered by default" time="0.003714292">
        </testcase>
        <testcase classname="packages/mui-joy/src/IconButton/IconButton.test.tsx" name="Joy &lt;IconButton /&gt; &gt; prop: loadingIndicator &gt; is rendered properly when `loading` and children should not be visible" time="0.005381292">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/InitColorSchemeScript/InitColorSchemeScript.test.tsx" timestamp="2025-09-10T11:25:37.250Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.01772875">
        <testcase classname="packages/mui-joy/src/InitColorSchemeScript/InitColorSchemeScript.test.tsx" name="InitColorSchemeScript &gt; should render as expected" time="0.0167505">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" timestamp="2025-09-10T11:25:37.250Z" hostname="Jans-MacBook-Air.local" tests="35" failures="0" errors="0" skipped="6" time="0.226085584">
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.022435417">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006452084">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.016202333">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.007543791">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.013223375">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.006965875">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.005081958">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.003841">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.005812041">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001929958">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.00250375">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.019196959">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001837292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000599125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000259625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000183625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000373">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000689584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.021868625">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: determinate &gt; should render a determinate circular progress" time="0.026831625">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: variant &gt; soft by default" time="0.003939792">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: variant &gt; should render plain" time="0.006981792">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: variant &gt; should render outlined" time="0.003612958">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: variant &gt; should render soft" time="0.003151833">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: variant &gt; should render solid" time="0.004272375">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: color &gt; adds a primary class by default" time="0.002963833">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: color &gt; should render primary" time="0.003434583">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: color &gt; should render success" time="0.002972125">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: color &gt; should render danger" time="0.002809">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: color &gt; should render neutral" time="0.013714667">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: color &gt; should render warning" time="0.002889042">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: size &gt; md by default" time="0.002330125">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: size &gt; should render sm" time="0.002553292">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: size &gt; should render md" time="0.001994208">
        </testcase>
        <testcase classname="packages/mui-joy/src/LinearProgress/LinearProgress.test.tsx" name="&lt;LinearProgress /&gt; &gt; prop: size &gt; should render lg" time="0.002425417">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Link/Link.test.tsx" timestamp="2025-09-10T11:25:37.252Z" hostname="Jans-MacBook-Air.local" tests="62" failures="0" errors="0" skipped="7" time="0.215152">
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.027328417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.007021">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006778">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0059805">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006797">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.003170792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003713875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator prop" time="0.004448791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.startDecorator with the built-in ones" time="0.006065959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator prop" time="0.003974209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.endDecorator with the built-in ones" time="0.002935458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.003719667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback" time="0.003142916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback" time="0.004332041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.002247625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback using the ownerState" time="0.003119417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback using the ownerState" time="0.002165833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003009917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002359375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with a component using the slots.startDecorator prop" time="0.003027542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with an element using the slots.startDecorator prop" time="0.004212958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with a component using the slots.endDecorator prop" time="0.002591417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with an element using the slots.endDecorator prop" time="0.001923167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.013097291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000334208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000177333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.00018575">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000556041">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000429625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000206958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.01461925">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; should render children" time="0.004131083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; event callbacks &gt; should fire event callbacks" time="0.00625125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; keyboard focus &gt; should add the focusVisible class when focused" time="0.000267">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: variant &gt; undefined by default" time="0.002005333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: variant &gt; should render plain" time="0.002809125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: variant &gt; should render outlined" time="0.002171583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: variant &gt; should render soft" time="0.002613791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: variant &gt; should render solid" time="0.002925834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: color &gt; adds a primary class by default" time="0.001604833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: color &gt; should render primary" time="0.001870292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: color &gt; should render success" time="0.002031666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: color &gt; should render danger" time="0.002263666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: color &gt; should render neutral" time="0.001437542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: color &gt; should render warning" time="0.001333959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: level &gt; body1 by default" time="0.001260584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: level &gt; should render h1" time="0.001392958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: level &gt; should render h2" time="0.001438875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: level &gt; should render h3" time="0.001875709">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: level &gt; should render h4" time="0.001928834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: level &gt; should render title-lg" time="0.00205325">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: level &gt; should render title-md" time="0.00151975">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: level &gt; should render title-sm" time="0.001862584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: level &gt; should render body-lg" time="0.005028666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: level &gt; should render body-md" time="0.001467167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: level &gt; should render body-sm" time="0.003378583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: level &gt; should render body-xs" time="0.001567542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: underline &gt; hover by default" time="0.001667708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: underline &gt; should render none" time="0.001307584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: underline &gt; should render always" time="0.00243425">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; prop: underline &gt; should render hover" time="0.001662667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Link/Link.test.tsx" name="&lt;Link /&gt; &gt; Typography &gt; should be a span by default" time="0.003558708">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" timestamp="2025-09-10T11:25:37.255Z" hostname="Jans-MacBook-Air.local" tests="19" failures="0" errors="0" skipped="4" time="0.113934292">
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.027761875">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005236334">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003986791">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002451334">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.023023833">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.003244">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003858958">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.0031395">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.0041555">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001808833">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.00114975">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.012744083">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000342458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000202916">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.0002115">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000191917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.013442666">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; should have root className" time="0.001709708">
        </testcase>
        <testcase classname="packages/mui-joy/src/FormHelperText/FormHelperText.test.tsx" name="Joy &lt;FormHelperText /&gt; &gt; should accept className prop" time="0.003553667">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/List/List.test.tsx" timestamp="2025-09-10T11:25:37.256Z" hostname="Jans-MacBook-Air.local" tests="37" failures="0" errors="0" skipped="6" time="0.345165417">
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.031985375">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006223708">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007622333">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003305708">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006132625">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.00456375">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003437542">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.008424542">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003949334">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003739792">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001718334">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.016518584">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000361333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000230875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000195083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000155875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000509083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000146917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.012126">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; should have root className" time="0.004480292">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; should accept className prop" time="0.004779458">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; should have sm classes" time="0.001985792">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; should have lg classes" time="0.001764875">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; should have default size=&quot;md&quot; classes" time="0.002467875">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; should have `nesting` classes" time="0.057252792">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; should have `orientation` classes" time="0.006643209">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MenuList - integration &gt; should have role=&quot;group&quot; inside MenuList" time="0.007598375">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MenuList - integration &gt; should inherit size" time="0.010518709">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; MenuList - integration &gt; should use instance size" time="0.004637542">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; Menu - integration &gt; should have role=&quot;group&quot; inside Menu" time="0.023877291">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; Menu - integration &gt; should inherit size" time="0.018283125">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; Menu - integration &gt; should use instance size" time="0.012449083">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; Select - integration &gt; should have role=&quot;group&quot; inside Select" time="0.03128525">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; Select - integration &gt; should inherit size" time="0.017237083">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; Select - integration &gt; should use instance size" time="0.018580541">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; RadioGroup - integration &gt; should have div tag" time="0.004609041">
        </testcase>
        <testcase classname="packages/mui-joy/src/List/List.test.tsx" name="Joy &lt;List /&gt; &gt; RadioGroup - integration &gt; can override by prop" time="0.002454291">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Input/Input.test.tsx" timestamp="2025-09-10T11:25:37.259Z" hostname="Jans-MacBook-Air.local" tests="48" failures="0" errors="0" skipped="6" time="0.39127975">
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.041244708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.008239208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.006640083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006552083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.0061875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003925583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.004328167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.input with the built-in ones" time="0.0097025">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator prop" time="0.004892666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.startDecorator with the built-in ones" time="0.004525375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator prop" time="0.010328834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.endDecorator with the built-in ones" time="0.005401291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.006320292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback" time="0.003051417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback" time="0.003939917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback" time="0.006885166">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.004492292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback using the ownerState" time="0.007781708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback using the ownerState" time="0.0034455">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback using the ownerState" time="0.003555125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003771125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002915625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.004689459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; allows overriding the input slot with an element using the slots.input prop" time="0.003130375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with a component using the slots.startDecorator prop" time="0.003280084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with an element using the slots.startDecorator prop" time="0.002292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with a component using the slots.endDecorator prop" time="0.004078292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with an element using the slots.endDecorator prop" time="0.00533775">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.020125583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00041125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000196959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000186833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000154417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000153292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000129875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.01613075">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; should have placeholder" time="0.061882083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; should have error classes" time="0.004044167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; should have fullWidth classes" time="0.00231225">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; should have startDecorator" time="0.009899">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; should have endDecorator" time="0.006293375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; prop: required &gt; should pass to `input` element" time="0.00720175">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; prop: disabled &gt; should have disabled classes" time="0.006906917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; prop: disabled &gt; should reset the focused state if getting disabled" time="0.015426417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; prop: disabled &gt; disabled prop from FormControl should take precedence over disabled prop from theme" time="0.025785667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; slotProps: input &gt; `onKeyDown` and `onKeyUp` should work" time="0.010968208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; slotProps: input &gt; should call focus and blur" time="0.011445208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Input/Input.test.tsx" name="Joy &lt;Input /&gt; &gt; slotProps: input &gt; should override outer handlers" time="0.008499125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" timestamp="2025-09-10T11:25:37.261Z" hostname="Jans-MacBook-Air.local" tests="27" failures="0" errors="0" skipped="6" time="0.237390625">
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.01950075">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.004943084">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.00486475">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002989042">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006293958">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002709792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002077625">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002627958">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.004442208">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001625042">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001164166">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.013762708">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000350375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000212958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000213208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000179083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000171417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000155875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.011107917">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; should have role separator" time="0.070003833">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; should accept className prop" time="0.020610833">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; aria-orientation &gt; should not have aria-orientation by default" time="0.024881375">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; aria-orientation &gt; should have aria-orientation set to vertical" time="0.018335792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; aria-orientation &gt; should not add aria-orientation if role is custom" time="0.005174666">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; semantics &gt; should be `li` with role `separator` by default" time="0.003571667">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; semantics &gt; should still be `li` if List is a `ul` with role `menu`" time="0.008240709">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListDivider/ListDivider.test.tsx" name="Joy &lt;ListDivider /&gt; &gt; semantics &gt; should be `div` if `List` is not one of `ol, ul, menu`" time="0.005173041">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" timestamp="2025-09-10T11:25:37.263Z" hostname="Jans-MacBook-Air.local" tests="19" failures="0" errors="0" skipped="4" time="0.089080583">
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.0208005">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005831292">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004236583">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003046667">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004498125">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.0026885">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002354708">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.00212175">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003529208">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.00246175">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001241167">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.012917333">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000445834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000358042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000296417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000214375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.013793208">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; should have root className" time="0.001724209">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemDecorator/ListItemDecorator.test.tsx" name="Joy &lt;ListItemDecorator /&gt; &gt; should accept className prop" time="0.003806584">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" timestamp="2025-09-10T11:25:37.264Z" hostname="Jans-MacBook-Air.local" tests="19" failures="0" errors="0" skipped="4" time="0.080837292">
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.018445042">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.0046585">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003766542">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002414166">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.003546792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.001756334">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.001749167">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.001612291">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.002672584">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.004968541">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.003622042">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.017730458">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.0005325">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000232542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000222459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000184625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.008257375">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; should have root className" time="0.001537542">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemContent/ListItemContent.test.tsx" name="Joy &lt;ListItemContent /&gt; &gt; should accept className prop" time="0.0013105">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" timestamp="2025-09-10T11:25:37.265Z" hostname="Jans-MacBook-Air.local" tests="26" failures="0" errors="0" skipped="7" time="0.220906041">
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.035132042">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.009974833">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.012717125">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005141">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005952166">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.003307834">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003042">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.003042791">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003846042">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002007709">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002315167">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.01493975">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000366958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000212958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000224584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.00019025">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.00030325">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000162709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.013418791">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; should render with the selected class" time="0.069169792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; should render with the variant class" time="0.009512416">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; should render with primary color class" time="0.009860833">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; should accept className prop" time="0.004099291">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; should be disabled" time="0.005195541">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; should accept custom role" time="0.004772042">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItemButton/ListItemButton.test.tsx" name="Joy &lt;ListItemButton /&gt; &gt; prop: focusVisibleClassName &gt; should have focusVisible classes" time="0.000291125">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" timestamp="2025-09-10T11:25:37.267Z" hostname="Jans-MacBook-Air.local" tests="24" failures="0" errors="0" skipped="6" time="0.121199167">
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.022176125">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.007558875">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005141375">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002799625">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.0048045">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.004237666">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003289583">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002480334">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003453375">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002411417">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001386583">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.01433125">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000384208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000721375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000319542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000227917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000194208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000165083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.020575333">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; should have root className" time="0.004782292">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; should accept className prop" time="0.004067292">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; should have variant class" time="0.002504291">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; should have color class" time="0.004825666">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListSubheader/ListSubheader.test.tsx" name="Joy &lt;ListSubheader /&gt; &gt; should call dispatch context with the generated id" time="0.006235333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Menu/Menu.test.tsx" timestamp="2025-09-10T11:25:37.268Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="5" time="0.331798083">
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.092332417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.020875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.013199208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000625375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000409209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.0003195">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000277708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000417458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.024211208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; should render with `ul` by default" time="0.017737">
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; should pass onClose prop to Popover" time="0.092093791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; renders its children only when open" time="0.018240125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; should have role=&quot;menu&quot;" time="0.010550375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; ignores invalid children" time="0.012788208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; classnames &gt; size prop" time="0.010446917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; classnames &gt; variant prop" time="0.008212292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Menu/Menu.test.tsx" name="Joy &lt;Menu /&gt; &gt; classnames &gt; color prop" time="0.007473416">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/ListItem/ListItem.test.tsx" timestamp="2025-09-10T11:25:37.269Z" hostname="Jans-MacBook-Air.local" tests="48" failures="0" errors="0" skipped="6" time="0.271499958">
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.023413083">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006942">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006454084">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005097583">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00632425">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.00320525">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002719584">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; sets custom properties on the startAction slot&apos;s element with the slotProps.startAction prop" time="0.003588541">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.startAction with the built-in ones" time="0.004305833">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; sets custom properties on the endAction slot&apos;s element with the slotProps.endAction prop" time="0.002852709">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.endAction with the built-in ones" time="0.003068667">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004076458">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; sets custom properties on the startAction slot&apos;s element with the slotProps.startAction callback" time="0.004301292">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; sets custom properties on the endAction slot&apos;s element with the slotProps.endAction callback" time="0.002675333">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.002372125">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; sets custom properties on the startAction slot&apos;s element with the slotProps.startAction callback using the ownerState" time="0.002028333">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; sets custom properties on the endAction slot&apos;s element with the slotProps.endAction callback using the ownerState" time="0.002141792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002370959">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002436">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; allows overriding the startAction slot with a component using the slots.startAction prop" time="0.002344208">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; allows overriding the startAction slot with an element using the slots.startAction prop" time="0.002693584">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; allows overriding the endAction slot with a component using the slots.endAction prop" time="0.002365542">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; allows overriding the endAction slot with an element using the slots.endAction prop" time="0.003056166">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.015845417">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000484834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000213834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000201042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000162542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000163167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000137125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.013782375">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; should have root className" time="0.004954459">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; should accept className prop" time="0.00164625">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; should have sticky classes" time="0.002122166">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; should show startAction if provided" time="0.037845208">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; should show endAction if provided" time="0.014002708">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; Consecutive ListItem &gt; should not be li" time="0.00754775">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; Consecutive ListItem &gt; should use component prop" time="0.004345333">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; Semantics - Menu &gt; should have role=&quot;none&quot; if the nearest parent List is not implicitly a list" time="0.011074958">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; Semantics - Menu &gt; should have role presentation for grouped options" time="0.006682459">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; Semantics - List &gt; should render div automatically if parent List component is not `ol`, `ul`, `menu`" time="0.010726208">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; Semantics - List &gt; should use component prop" time="0.008490792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; Semantics - List &gt; should have role=&quot;none&quot; if the nearest parent List has role=&quot;menu|menubar&quot;" time="0.005116583">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; Semantics - List &gt; should have role=&quot;presentation&quot; if the nearest parent List has role=&quot;group&quot;" time="0.002069792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; Semantics - List &gt; overridable role" time="0.002556375">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; NestedList &gt; the nested list should be labelledby the subheader" time="0.008801709">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; NestedList &gt; the aria-labelledby can be overridden" time="0.005667417">
        </testcase>
        <testcase classname="packages/mui-joy/src/ListItem/ListItem.test.tsx" name="Joy &lt;ListItem /&gt; &gt; NestedList &gt; the nested list should not be labelled without the subheader" time="0.003748958">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" timestamp="2025-09-10T11:25:37.272Z" hostname="Jans-MacBook-Air.local" tests="33" failures="0" errors="0" skipped="6" time="0.256624584">
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.024636833">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.010286709">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.011057958">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00542175">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.003794208">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.00299925">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.003034334">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.006721542">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.00313275">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.004265167">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.016324667">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.0003555">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000182916">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000472042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000210458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000232042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000157291">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.014588583">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; should render with the variant class" time="0.029334459">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; should render with primary color class" time="0.024066458">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; should render a focusable menuitem" time="0.006475416">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; should render with the selected class but not aria-selected when `selected`" time="0.00728">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; can have a role of option" time="0.003867583">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; event callbacks &gt; should fire click" time="0.006476041">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; event callbacks &gt; should fire mouseDown" time="0.004497833">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; event callbacks &gt; should fire mouseEnter" time="0.003872666">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; event callbacks &gt; should fire mouseLeave" time="0.004066125">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; event callbacks &gt; should fire mouseUp" time="0.006173541">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; event callbacks &gt; should fire touchEnd" time="0.007709125">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; event callbacks &gt; should fire focus, keydown, keyup and blur" time="0.017489125">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; event callbacks &gt; should fire onTouchStart" time="0.00989575">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; can be disabled" time="0.006603917">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuItem/MenuItem.test.tsx" name="Joy &lt;MenuItem /&gt; &gt; can be selected" time="0.008921292">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/MenuList/MenuList.test.tsx" timestamp="2025-09-10T11:25:37.273Z" hostname="Jans-MacBook-Air.local" tests="24" failures="0" errors="0" skipped="6" time="0.136092167">
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.025944167">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006650916">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.0058485">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003605875">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005951334">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.003422125">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002369042">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002622708">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003738625">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001866416">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.00139175">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.012850042">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000369834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000215125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000219791">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000187583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000168792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000152833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.011400917">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; should have root className" time="0.002049291">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; should accept className prop" time="0.001857208">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; prop: size" time="0.027614958">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; prop: variant" time="0.008508917">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuList/MenuList.test.tsx" name="Joy &lt;MenuList /&gt; &gt; prop: color" time="0.005113125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" timestamp="2025-09-10T11:25:37.275Z" hostname="Jans-MacBook-Air.local" tests="34" failures="0" errors="0" skipped="6" time="0.317425459">
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.036139084">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.010143375">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006956666">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.008984042">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007624333">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.007220666">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.004688">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004500416">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.016732083">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002686167">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001923166">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.016235834">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001487375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000467042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.001189083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.001322667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000914334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.003817417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.022519834">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; prop: variant &gt; plain by default" time="0.0539085">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; prop: variant &gt; should render plain" time="0.005081625">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; prop: variant &gt; should render outlined" time="0.013534792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; prop: variant &gt; should render soft" time="0.004663292">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; prop: variant &gt; should render solid" time="0.006367375">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; prop: color &gt; adds a neutral class by default" time="0.003765209">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; prop: color &gt; should render primary" time="0.004291166">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; prop: color &gt; should render success" time="0.008456333">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; prop: color &gt; should render danger" time="0.005618291">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; prop: color &gt; should render neutral" time="0.006448333">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; prop: color &gt; should render warning" time="0.006254125">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; inherit `size` from the context" time="0.011210458">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; inherit `variant` from the context" time="0.009209708">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; inherit `color` from the context" time="0.005153583">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalClose/ModalClose.test.tsx" name="&lt;ModalClose /&gt; &gt; call `onClick` together with close context from Modal" time="0.015208708">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" timestamp="2025-09-10T11:25:37.276Z" hostname="Jans-MacBook-Air.local" tests="30" failures="0" errors="0" skipped="6" time="0.1986885">
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.027484709">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.012268541">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004831791">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003679166">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007229166">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.006294916">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003333042">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002325916">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003474459">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001695167">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001247458">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.013105792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000351208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.00022025">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.00021425">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.00017575">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000168125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000155333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.014639417">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; prop: variant &gt; plain by default" time="0.034484333">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; prop: variant &gt; should render plain" time="0.00574175">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; prop: variant &gt; should render outlined" time="0.0127475">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; prop: variant &gt; should render soft" time="0.003400458">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; prop: variant &gt; should render solid" time="0.003055083">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; prop: color &gt; adds a neutral class by default" time="0.005490125">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; prop: color &gt; should render primary" time="0.004123666">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; prop: color &gt; should render success" time="0.00781125">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; prop: color &gt; should render danger" time="0.007141834">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; prop: color &gt; should render neutral" time="0.003709">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalDialog/ModalDialog.test.tsx" name="&lt;ModalDialog /&gt; &gt; prop: color &gt; should render warning" time="0.006252709">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Option/Option.test.tsx" timestamp="2025-09-10T11:25:37.278Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.001667292">
        <testcase classname="packages/mui-joy/src/Option/Option.test.tsx" name="&lt;Option /&gt; &gt; To do" time="0.00079275">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" timestamp="2025-09-10T11:25:37.278Z" hostname="Jans-MacBook-Air.local" tests="21" failures="0" errors="0" skipped="6" time="0.218425375">
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.043603375">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.013695166">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006403875">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00441525">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.010597542">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.003646375">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003400459">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.0043285">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.007443">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002312167">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.0100175">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.018729334">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000399666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000201333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000205083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000170625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000258541">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000156791">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.024416666">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; prop: disabled &gt; should render a disabled button" time="0.054771458">
        </testcase>
        <testcase classname="packages/mui-joy/src/MenuButton/MenuButton.test.tsx" name="&lt;MenuButton /&gt; &gt; prop: disabled &gt; should not open the menu when clicked" time="0.007059166">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Radio/Radio.test.tsx" timestamp="2025-09-10T11:25:37.279Z" hostname="Jans-MacBook-Air.local" tests="62" failures="0" errors="0" skipped="6" time="0.434555667">
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.03870525">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.009153042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.010859625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.005248625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.008062667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the radio slot&apos;s element with the slotProps.radio prop" time="0.008640083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.radio with the built-in ones" time="0.0050065">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the icon slot&apos;s element with the slotProps.icon prop" time="0.010128875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.icon with the built-in ones" time="0.007509792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the action slot&apos;s element with the slotProps.action prop" time="0.003531916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.action with the built-in ones" time="0.003164167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.003217208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.input with the built-in ones" time="0.003037625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label prop" time="0.00309475">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.label with the built-in ones" time="0.003117625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002794542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the radio slot&apos;s element with the slotProps.radio callback" time="0.002657625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the icon slot&apos;s element with the slotProps.icon callback" time="0.005755666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the action slot&apos;s element with the slotProps.action callback" time="0.005474375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback" time="0.002914916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label callback" time="0.005518167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.005328875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the radio slot&apos;s element with the slotProps.radio callback using the ownerState" time="0.002960917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the icon slot&apos;s element with the slotProps.icon callback using the ownerState" time="0.002874084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the action slot&apos;s element with the slotProps.action callback using the ownerState" time="0.005882166">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback using the ownerState" time="0.006880625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label callback using the ownerState" time="0.0034255">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002713041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.006467209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the radio slot with a component using the slots.radio prop" time="0.003839041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the radio slot with an element using the slots.radio prop" time="0.002322208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the icon slot with a component using the slots.icon prop" time="0.011745542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the icon slot with an element using the slots.icon prop" time="0.005315208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the action slot with a component using the slots.action prop" time="0.008820916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the action slot with an element using the slots.action prop" time="0.004023209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.002633917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the input slot with an element using the slots.input prop" time="0.002870541">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the label slot with a component using the slots.label prop" time="0.003637625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the label slot with an element using the slots.label prop" time="0.003261708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.019174917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000392792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000179875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000189708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000144875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.0001355">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000126209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.011161084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; should have the classes required for Radio" time="0.000542208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; renders a `role=&quot;radio&quot;` with the id" time="0.048444541">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; renders a `role=&quot;radio&quot;` with the name" time="0.007010292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; renders a `role=&quot;radio&quot;` with the required attribute" time="0.005920083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; renders a `role=&quot;radio&quot;` with the readOnly attribute" time="0.004740875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; renders a `role=&quot;radio&quot;` with the Unchecked state by default" time="0.004663042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; renders a radio with the Checked state when checked" time="0.005260542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; the radio can be disabled" time="0.010180958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; disabled prop from FormControl should take precedence over disabled prop from theme" time="0.02254075">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; the Checked state changes after change events" time="0.010451542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; should have configurable color" time="0.006224125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; should have configurable variant" time="0.004314791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; should have configurable size" time="0.004275625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; should be checked when it is selected in the radio group" time="0.009466375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Radio/Radio.test.tsx" name="&lt;Radio /&gt; &gt; should be checked when changing the value" time="0.023827">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" timestamp="2025-09-10T11:25:37.282Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="4" time="0.092441541">
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.020799333">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005430667">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003456959">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002248125">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004465125">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002591042">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003953708">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002327583">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003127">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001700583">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001090584">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.019836292">
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.0004285">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000242792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000261166">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000192209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ModalOverflow/ModalOverflow.test.tsx" name="&lt;ModalOverflow /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.018651375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Modal/Modal.test.tsx" timestamp="2025-09-10T11:25:37.283Z" hostname="Jans-MacBook-Air.local" tests="43" failures="0" errors="0" skipped="3" time="0.373628792">
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.06077825">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.011851834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.010797416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00966375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.005218292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.006681584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop prop" time="0.003695209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.backdrop with the built-in ones" time="0.005552">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.012803959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop callback" time="0.008797583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.00526875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop callback using the ownerState" time="0.004747125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.006851417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.004188333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; allows overriding the backdrop slot with a component using the slots.backdrop prop" time="0.00297575">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; allows overriding the backdrop slot with an element using the slots.backdrop prop" time="0.003748083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.00045775">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000712167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.020677333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; props: &gt; should consume theme default props" time="0.009315584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; prop: open &gt; should not render the children by default" time="0.003249208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; prop: open &gt; renders the children inside a div through a portal when open" time="0.011554875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; prop: open &gt; makes the child focusable without adding a role" time="0.003587875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; backdrop &gt; should render a backdrop component into the portal before the modal content" time="0.008101833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; backdrop &gt; should attach a handler to the backdrop that fires onClose" time="0.006352792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; backdrop &gt; should let the user disable backdrop click triggering onClose" time="0.003165833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; hide backdrop &gt; should not render a backdrop component into the portal before the modal content" time="0.002402417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; event: keydown &gt; when mounted, TopModal and event not esc should not call given functions" time="0.014586083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; event: keydown &gt; should call onClose when Esc is pressed and stop event propagation" time="0.01602375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; event: keydown &gt; should not call onClose when `disableEscapeKeyDown={true}`" time="0.006328458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; event: keydown &gt; calls onKeyDown on the Modal" time="0.006179458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; prop: keepMounted &gt; should keep the children in the DOM" time="0.002414875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; prop: keepMounted &gt; does not include the children in the a11y tree" time="0.020299584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; focus &gt; should focus on the modal when it is opened" time="0.010235041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; focus &gt; should support autoFocus" time="0.014584417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; focus &gt; should keep focus on the modal when it is closed" time="0.004117542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; focus &gt; should not focus on the modal when disableAutoFocus is true" time="0.006923875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; focus &gt; focus stealing &gt; does not steal focus from other frames" time="0.002302167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; focus &gt; when starting open and closing immediately &gt; should unmount the children " time="0.002174083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; two modal at the same time &gt; should open and close" time="0.013548">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; should support open abort" time="0.001925625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; prop: container &gt; should be able to change the container" time="0.011315625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Modal/Modal.test.tsx" name="&lt;Modal /&gt; &gt; prop: disablePortal &gt; should render the content into the parent" time="0.004775833">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" timestamp="2025-09-10T11:25:37.286Z" hostname="Jans-MacBook-Air.local" tests="19" failures="0" errors="0" skipped="6" time="0.171429125">
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.031287084">
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.01359075">
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.011136667">
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.006097792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008568792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.006624834">
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.005887291">
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.005616792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.013976167">
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.004081958">
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001224125">
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.027354792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.0010165">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000442334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.00039475">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.001210875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000344875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.00077875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ScopedCssBaseline/ScopedCssBaseline.test.tsx" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.028721833">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" timestamp="2025-09-10T11:25:37.287Z" hostname="Jans-MacBook-Air.local" tests="31" failures="0" errors="0" skipped="6" time="0.30712875">
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.018609542">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004821333">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004034833">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002838875">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.004342208">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.003817917">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.00357425">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002025875">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.005151375">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.015850958">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.0004545">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000221334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000207125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000162375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000153584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000137666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.0171245">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; should have `orientation` class" time="0.028264875">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; the root component has the radiogroup role" time="0.002134208">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; should fire the onBlur callback" time="0.003855709">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; should fire the onKeyDown callback" time="0.007053917">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; should support uncontrolled mode" time="0.04393075">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; should support default value in uncontrolled mode" time="0.025237083">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; should have a default name" time="0.014517083">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; should support number value" time="0.017510875">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; should accept invalid child" time="0.008861334">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; prop: onChange &gt; should fire onChange" time="0.009260917">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; prop: onChange &gt; should chain the onChange property" time="0.010266542">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; prop: onChange &gt; with non-string values &gt; passes the value of the selected Radio as a string" time="0.037781208">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; warnings &gt; should warn when switching from controlled to uncontrolled" time="0.006872166">
        </testcase>
        <testcase classname="packages/mui-joy/src/RadioGroup/RadioGroup.test.tsx" name="&lt;RadioGroup /&gt; &gt; warnings &gt; should warn when switching between uncontrolled to controlled" time="0.006249459">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Select/Select.test.tsx" timestamp="2025-09-10T11:25:37.288Z" hostname="Jans-MacBook-Air.local" tests="81" failures="0" errors="0" skipped="9" time="1.056374417">
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.068110167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.017009084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.0103395">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.012592416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.008667417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; sets custom properties on the button slot&apos;s element with the slotProps.button prop" time="0.012915">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.button with the built-in ones" time="0.008956209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; sets custom properties on the listbox slot&apos;s element with the slotProps.listbox prop" time="0.007196208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.listbox with the built-in ones" time="0.010540125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator prop" time="0.006554208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.startDecorator with the built-in ones" time="0.007592083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator prop" time="0.006738041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.endDecorator with the built-in ones" time="0.006182375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.006149875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; sets custom properties on the button slot&apos;s element with the slotProps.button callback" time="0.010385375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; sets custom properties on the listbox slot&apos;s element with the slotProps.listbox callback" time="0.006169833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback" time="0.006902959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback" time="0.007133833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.008162917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; sets custom properties on the button slot&apos;s element with the slotProps.button callback using the ownerState" time="0.008034792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; sets custom properties on the listbox slot&apos;s element with the slotProps.listbox callback using the ownerState" time="0.009633125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback using the ownerState" time="0.010155667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback using the ownerState" time="0.005896208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.005491667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.005545333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; allows overriding the button slot with a component using the slots.button prop" time="0.005446375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; allows overriding the button slot with an element using the slots.button prop" time="0.005442458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; allows overriding the listbox slot with a component using the slots.listbox prop" time="0.006737667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with a component using the slots.startDecorator prop" time="0.007750708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with an element using the slots.startDecorator prop" time="0.005561875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with a component using the slots.endDecorator prop" time="0.005496125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with an element using the slots.endDecorator prop" time="0.006713208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.015567959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000429167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000232084">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000232917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000204667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.00018575">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000169875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.014318291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; should be able to mount the component" time="0.05924825">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; the trigger is in tab order" time="0.036207542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; should accept null child" time="0.029807292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; should pass &quot;name&quot; as part of the event.target for onBlur" time="0.02008">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; should call onClose when the same option is selected" time="0.044234834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; should focus the trigger button if no selection" time="0.025605292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; prop: onChange &gt; should get selected value from the 2nd argument" time="0.039440458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; prop: onChange &gt; should not be called if selected element has the current value (value did not change)" time="0.0264435">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; prop: defaultOpen &gt; should be open on mount" time="0.017229917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; prop: value &gt; should select the option based on the number value" time="0.025049209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; prop: value &gt; should not select the option based on the string value" time="0.021742833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; prop: value &gt; should select only the option that matches the object" time="0.025064125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; prop: value &gt; should be able to use an object" time="0.017262625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; SVG icon &gt; should present an SVG icon" time="0.006764125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; SVG icon &gt; should be able to customize SVG icon" time="0.005601833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; SVG icon &gt; should remove SVG icon" time="0.006418917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; accessibility &gt; associated with a label" time="0.013243417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; accessibility &gt; sets aria-expanded=&quot;true&quot; when the listbox is displayed" time="0.010701917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; accessibility &gt; ARIA 1.2: aria-expanded=&quot;false&quot; if the listbox isn&apos;t displayed" time="0.006586375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; accessibility &gt; aria-disabled is not present if component is not disabled" time="0.008520042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; accessibility &gt; renders an element with listbox behavior" time="0.010047959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; accessibility &gt; identifies each selectable element containing an option" time="0.018671375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; accessibility &gt; indicates the selected option" time="0.020246">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; accessibility &gt; Grouped options &gt; first selectable option is focused to use the arrow" time="0.0283115">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; accessibility &gt; it will fallback to its content for the accessible name when it has no name" time="0.007055375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; accessibility &gt; the list of options is not labelled by default" time="0.008900834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; accessibility &gt; should have appropriate accessible description when provided in props" time="0.009245">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; prop: renderValue &gt; should use the prop to render the value" time="0.011316375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; prop: name &gt; should have no id when name is not provided" time="0.007195167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; should pass onClick prop to Option" time="0.017427666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; should not override the event.target on mouse events" time="0.020203959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; should only select options" time="0.022065041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; should not focus select when clicking an arbitrary element with id=&quot;undefined&quot;" time="0.005966417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; form submission &gt; includes the Select value in the submitted form data when the `name` attribute is provided" time="0.000351292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; form submission &gt; transforms the selected value before posting using the getSerializedValue prop, if provided" time="0.000208916">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; form submission &gt; formats the object values as JSON before posting" time="0.000184667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; should show dropdown if the children of the select button is clicked" time="0.012941334">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; prop: multiple &gt; renders the selected values (multiple) using the renderValue prop" time="0.011258833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; prop: multiple &gt; renders the selected values (multiple) as comma-separated list of labels if renderValue is not provided" time="0.012094042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; prop: multiple &gt; should render placeholder when options are not selected" time="0.020376167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Select/Select.test.tsx" name="Joy &lt;Select /&gt; &gt; prop: multiple &gt; renders the selected values inplace of placeholder" time="0.015505417">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" timestamp="2025-09-10T11:25:37.292Z" hostname="Jans-MacBook-Air.local" tests="19" failures="0" errors="0" skipped="4" time="0.445126792">
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.28181025">
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.013958792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007791417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.007515334">
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007424375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.004115208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.006544958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002837209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.004254583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001903792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002958417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.03042275">
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001308959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000898917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000352084">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000390458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.050071417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; should render nothing if not loading" time="0.003804083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Skeleton/Skeleton.test.tsx" name="&lt;Skeleton /&gt; &gt; should render children" time="0.012925166">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" timestamp="2025-09-10T11:25:37.293Z" hostname="Jans-MacBook-Air.local" tests="51" failures="0" errors="0" skipped="6" time="0.237372125">
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.031862041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.011434958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.009568667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007496625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.005358875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.004726208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator prop" time="0.004331791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.startDecorator with the built-in ones" time="0.0034495">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator prop" time="0.006321542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.endDecorator with the built-in ones" time="0.004328166">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.005241666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback" time="0.002945709">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback" time="0.005241583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003346833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback using the ownerState" time="0.002911125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback using the ownerState" time="0.002656458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002848791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.003112583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with a component using the slots.startDecorator prop" time="0.003458333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with an element using the slots.startDecorator prop" time="0.002661083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with a component using the slots.endDecorator prop" time="0.002664667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with an element using the slots.endDecorator prop" time="0.003817584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.018908625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000458459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000240666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000277959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000210125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.003112708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000415083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.010974917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; prop: onClose &gt; should be called when clicking away" time="0.003405792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; prop: onClose &gt; should be called when pressing Escape" time="0.002964125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; prop: onClose &gt; can limit which Snackbars are closed when pressing Escape" time="0.003174667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; prop: autoHideDuration &gt; should call onClose when the timer is done" time="0.002497625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; prop: autoHideDuration &gt; calls onClose at timeout even if the prop changes" time="0.002732666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; prop: autoHideDuration &gt; should not call onClose when the autoHideDuration is reset" time="0.003763292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; prop: autoHideDuration &gt; should not call onClose if autoHideDuration is undefined" time="0.002647417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; prop: autoHideDuration &gt; should not call onClose if autoHideDuration is null" time="0.002568291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; prop: autoHideDuration &gt; should not call onClose when closed" time="0.00539375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; interacting with mouse &gt; should be able to interrupt the timer" time="0.005453625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; interacting with mouse &gt; should not call onClose with not timeout after user interaction" time="0.004192542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; interacting with mouse &gt; should call onClose when timer done after user interaction" time="0.003748416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; interacting with mouse &gt; should call onClose immediately after user interaction when 0" time="0.003408083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; interacting with keyboard &gt; should be able to interrupt the timer" time="0.004211459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; interacting with keyboard &gt; should not call onClose with not timeout after user interaction" time="0.007116209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; interacting with keyboard &gt; should call onClose when timer done after user interaction" time="0.003287917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; interacting with keyboard &gt; should call onClose immediately after user interaction when 0" time="0.003243708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; prop: disableWindowBlurListener &gt; should pause auto hide when not disabled and window lost focus" time="0.002030417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; prop: disableWindowBlurListener &gt; should not pause auto hide when disabled and window lost focus" time="0.001829542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; prop: open &gt; should not render anything when closed" time="0.00097425">
        </testcase>
        <testcase classname="packages/mui-joy/src/Snackbar/Snackbar.test.tsx" name="Joy &lt;Snackbar /&gt; &gt; prop: open &gt; should be able show it after mounted" time="0.002081833">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Slider/Slider.test.tsx" timestamp="2025-09-10T11:25:37.296Z" hostname="Jans-MacBook-Air.local" tests="50" failures="0" errors="0" skipped="6" time="0.482643375">
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.060534375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.0156045">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.013882833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007790584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.011088">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.008890958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the rail slot&apos;s element with the slotProps.rail prop" time="0.007372">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.rail with the built-in ones" time="0.009023166">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the track slot&apos;s element with the slotProps.track prop" time="0.010295833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.track with the built-in ones" time="0.009430541">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the thumb slot&apos;s element with the slotProps.thumb prop" time="0.008364625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.thumb with the built-in ones" time="0.014687125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.008954583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.input with the built-in ones" time="0.01247575">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the mark slot&apos;s element with the slotProps.mark prop" time="0.008791833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.mark with the built-in ones" time="0.007956291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.014491542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the rail slot&apos;s element with the slotProps.rail callback" time="0.010280417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the track slot&apos;s element with the slotProps.track callback" time="0.013520542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the thumb slot&apos;s element with the slotProps.thumb callback" time="0.008641292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback" time="0.006310084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the mark slot&apos;s element with the slotProps.mark callback" time="0.007538541">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.01017475">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the rail slot&apos;s element with the slotProps.rail callback using the ownerState" time="0.009692084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the track slot&apos;s element with the slotProps.track callback using the ownerState" time="0.007612042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the thumb slot&apos;s element with the slotProps.thumb callback using the ownerState" time="0.0085585">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback using the ownerState" time="0.00940975">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the mark slot&apos;s element with the slotProps.mark callback using the ownerState" time="0.012281542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.004694083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.0040315">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the rail slot with a component using the slots.rail prop" time="0.005222583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the rail slot with an element using the slots.rail prop" time="0.00547425">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the track slot with a component using the slots.track prop" time="0.011214958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the track slot with an element using the slots.track prop" time="0.011003333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the thumb slot with a component using the slots.thumb prop" time="0.003582666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the thumb slot with an element using the slots.thumb prop" time="0.005406375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.004309708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the input slot with an element using the slots.input prop" time="0.003596">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the mark slot with a component using the slots.mark prop" time="0.004075459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the mark slot with an element using the slots.mark prop" time="0.004320084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.016877166">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001537583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000861708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000355">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000300625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000253875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000174417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.016373792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; should render the rail as the first child of the Slider" time="0.005147417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Slider/Slider.test.tsx" name="&lt;Slider /&gt; &gt; should show formatted label" time="0.036429583">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Step/Step.test.tsx" timestamp="2025-09-10T11:25:37.299Z" hostname="Jans-MacBook-Air.local" tests="20" failures="0" errors="0" skipped="6" time="0.123358166">
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.025230333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.011173541">
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.00769075">
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.007951666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.009225583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.003162208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.004697042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002941333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003389417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.0024055">
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001726167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.014807333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000441584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000224125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000217584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000183791">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000168166">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000156334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.020207041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Step/Step.test.tsx" name="&lt;Step /&gt; &gt; apply horizontal and vertical classes" time="0.00527775">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Stack/Stack.test.tsx" timestamp="2025-09-10T11:25:37.300Z" hostname="Jans-MacBook-Air.local" tests="13" failures="0" errors="0" skipped="6" time="0.093881292">
        <testcase classname="packages/mui-joy/src/Stack/Stack.test.tsx" name="Joy &lt;Stack /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.028821">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stack/Stack.test.tsx" name="Joy &lt;Stack /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.007050417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stack/Stack.test.tsx" name="Joy &lt;Stack /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006982542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stack/Stack.test.tsx" name="Joy &lt;Stack /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002389334">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stack/Stack.test.tsx" name="Joy &lt;Stack /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.019039459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stack/Stack.test.tsx" name="Joy &lt;Stack /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000457334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Stack/Stack.test.tsx" name="Joy &lt;Stack /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000311791">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Stack/Stack.test.tsx" name="Joy &lt;Stack /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000382042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Stack/Stack.test.tsx" name="Joy &lt;Stack /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000497708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Stack/Stack.test.tsx" name="Joy &lt;Stack /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000248875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Stack/Stack.test.tsx" name="Joy &lt;Stack /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000186">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Stack/Stack.test.tsx" name="Joy &lt;Stack /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.022778791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stack/Stack.test.tsx" name="Joy &lt;Stack /&gt; &gt; className should be prefixed with Mui" time="0.003144042">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/StepButton/StepButton.test.tsx" timestamp="2025-09-10T11:25:37.301Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="4" time="0.100041291">
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.023122167">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.007422375">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.0105595">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005748333">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00980225">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.004351917">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002975042">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002694041">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003519125">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001596625">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001331459">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.013289791">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000387333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.0002255">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000226583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000198">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/StepButton/StepButton.test.tsx" name="&lt;StepButton /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.009219792">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Stepper/Stepper.test.tsx" timestamp="2025-09-10T11:25:37.302Z" hostname="Jans-MacBook-Air.local" tests="21" failures="0" errors="0" skipped="6" time="0.11678325">
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.023894916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006446625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007127208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005759708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008059834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002351959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003134375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.003816167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.004691917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001841583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002585708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.013571667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000410417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000207541">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000240667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000174583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000156958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000152959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.016156167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; can change size" time="0.004785834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; add data-attribute to the first and last child" time="0.009245167">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" timestamp="2025-09-10T11:25:37.303Z" hostname="Jans-MacBook-Air.local" tests="28" failures="0" errors="0" skipped="6" time="0.179189459">
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.026785459">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.00692775">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007785875">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.020635333">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.012991958">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.00246775">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003590958">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.011310708">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.007402583">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.005556667">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002350667">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.019428">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000549333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000319209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000502583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000251791">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000199375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000173041">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.01549325">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; prop: variant &gt; by default, should render with the root, variantSoft classes" time="0.0017475">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; prop: variant &gt; should render plain" time="0.006427125">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; prop: variant &gt; should render outlined" time="0.004530792">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; prop: variant &gt; should render solid" time="0.005384875">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; prop: color &gt; by default, should render with the root, colorNeutral classes" time="0.002148666">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; prop: color &gt; should render primary" time="0.004697125">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; prop: color &gt; should render success" time="0.003113042">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; prop: color &gt; should render danger" time="0.002142458">
        </testcase>
        <testcase classname="packages/mui-joy/src/StepIndicator/StepIndicator.test.tsx" name="&lt;StepIndicator /&gt; &gt; prop: color &gt; should render warning" time="0.001884083">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" timestamp="2025-09-10T11:25:37.304Z" hostname="Jans-MacBook-Air.local" tests="41" failures="0" errors="0" skipped="5" time="0.332089916">
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.048667416">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.00923475">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.022984625">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.014038875">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.031179084">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.003953209">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002313333">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.00414675">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.01007425">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.012499">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.031159833">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001784875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000320459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000521209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000894">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.021458084">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; renders children by default" time="0.003249458">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; renders children of provided svg and merge the props" time="0.004517">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: titleAccess &gt; should be able to make an icon accessible" time="0.012897875">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: color &gt; should render with the user and SvgIcon classes" time="0.005451084">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: color &gt; should render primary" time="0.007289">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: color &gt; should render success" time="0.004911666">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: color &gt; should render danger" time="0.00478">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: color &gt; should render neutral" time="0.004347">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: color &gt; should render warning" time="0.002018667">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: size &gt; should render with `md` by default" time="0.001412166">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: fontSize &gt; should render inherit" time="0.008071417">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: fontSize &gt; should render xs" time="0.00407025">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: fontSize &gt; should render sm" time="0.001958417">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: fontSize &gt; should render md" time="0.001352417">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: fontSize &gt; should render lg" time="0.001269459">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: fontSize &gt; should render xl" time="0.001133083">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: fontSize &gt; should render xl2" time="0.002365334">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: fontSize &gt; should render xl3" time="0.001809791">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: fontSize &gt; should render xl4" time="0.001938125">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: inheritViewBox &gt; should render with the default viewBox if neither inheritViewBox nor viewBox are provided" time="0.001140166">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: inheritViewBox &gt; should render with given viewBox if inheritViewBox is not provided" time="0.001970584">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; prop: inheritViewBox &gt; should use the custom component&apos;s viewBox if true" time="0.0041595">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; should not override internal ownerState with the ownerState passed to the icon" time="0.000257791">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; should have `fill=&quot;currentColor&quot;`" time="0.027659542">
        </testcase>
        <testcase classname="packages/mui-joy/src/SvgIcon/SvgIcon.test.tsx" name="&lt;SvgIcon /&gt; &gt; should not add `fill` if svg is a direct child" time="0.004179416">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Sheet/Sheet.test.tsx" timestamp="2025-09-10T11:25:37.307Z" hostname="Jans-MacBook-Air.local" tests="30" failures="0" errors="0" skipped="6" time="0.097667125">
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.022817041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.004803875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003562">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00245625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.003649917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002200875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002389375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002084833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003050542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001485167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.00097775">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.015575125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000373458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000221083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000222375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000179875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000174459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000155834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.010276">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; prop: variant &gt; plain by default" time="0.002688709">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; prop: variant &gt; should render plain" time="0.0016445">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; prop: variant &gt; should render outlined" time="0.001538458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; prop: variant &gt; should render soft" time="0.001590583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; prop: variant &gt; should render solid" time="0.002152542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; prop: color &gt; adds a neutral class by default" time="0.001385333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; prop: color &gt; should render primary" time="0.001164459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; prop: color &gt; should render success" time="0.001138042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; prop: color &gt; should render danger" time="0.001302958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; prop: color &gt; should render neutral" time="0.002538541">
        </testcase>
        <testcase classname="packages/mui-joy/src/Sheet/Sheet.test.tsx" name="&lt;Sheet /&gt; &gt; prop: color &gt; should render warning" time="0.0018865">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/TabList/TabList.test.tsx" timestamp="2025-09-10T11:25:37.308Z" hostname="Jans-MacBook-Air.local" tests="25" failures="0" errors="0" skipped="6" time="0.198866541">
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.036694708">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.007254917">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006569083">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005552917">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006141208">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.009452291">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003620416">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.003417417">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.0044125">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002325959">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002033917">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.020124375">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000395417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000230833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000219292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000184834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.0001785">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000228625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.024235667">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; size &gt; uses size from Tabs" time="0.03419275">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; size &gt; uses prop if provided" time="0.007368084">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; prop: variant" time="0.00757075">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; prop: color" time="0.003850791">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; attach data-first-child to the first element" time="0.003759167">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabList/TabList.test.tsx" name="Joy &lt;TabList /&gt; &gt; provides the correct value to RowListContext" time="0.005864584">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Switch/Switch.test.tsx" timestamp="2025-09-10T11:25:37.310Z" hostname="Jans-MacBook-Air.local" tests="66" failures="0" errors="0" skipped="6" time="0.440122917">
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.029594417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007595459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.012295917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.011443375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.005717834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.005366125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the thumb slot&apos;s element with the slotProps.thumb prop" time="0.003962042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.thumb with the built-in ones" time="0.007959334">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the track slot&apos;s element with the slotProps.track prop" time="0.005551541">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.track with the built-in ones" time="0.004006583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the action slot&apos;s element with the slotProps.action prop" time="0.003362291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.action with the built-in ones" time="0.003685292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.005110709">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.input with the built-in ones" time="0.004906">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator prop" time="0.00345175">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.startDecorator with the built-in ones" time="0.003265333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator prop" time="0.004881">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.endDecorator with the built-in ones" time="0.003042125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.0050365">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the thumb slot&apos;s element with the slotProps.thumb callback" time="0.003149167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the track slot&apos;s element with the slotProps.track callback" time="0.005084541">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the action slot&apos;s element with the slotProps.action callback" time="0.003243792">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback" time="0.002786958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback" time="0.002762875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback" time="0.002741334">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.002978417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the thumb slot&apos;s element with the slotProps.thumb callback using the ownerState" time="0.015274667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the track slot&apos;s element with the slotProps.track callback using the ownerState" time="0.003032459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the action slot&apos;s element with the slotProps.action callback using the ownerState" time="0.005462417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback using the ownerState" time="0.004442125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback using the ownerState" time="0.002703416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback using the ownerState" time="0.002612542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002969542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002702125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the thumb slot with a component using the slots.thumb prop" time="0.002760334">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the thumb slot with an element using the slots.thumb prop" time="0.002642625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the track slot with a component using the slots.track prop" time="0.003107916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the track slot with an element using the slots.track prop" time="0.002732084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the action slot with a component using the slots.action prop" time="0.005593625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the action slot with an element using the slots.action prop" time="0.002955333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.003008042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the input slot with an element using the slots.input prop" time="0.002702417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with a component using the slots.startDecorator prop" time="0.00277525">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with an element using the slots.startDecorator prop" time="0.005118">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with a component using the slots.endDecorator prop" time="0.004647875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with an element using the slots.endDecorator prop" time="0.002792917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.018863">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001197542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.00019825">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000214667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000154917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000607875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000248958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.021999958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; should pass `slotProps` down to slots" time="0.048235875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; should have the classes required for Switch" time="0.000599709">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; should render the track as the first child of the Switch" time="0.006894166">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; renders a `role=&quot;switch&quot;` with the Off state by default" time="0.037872458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; renders a switch with the Checked state when On" time="0.005218584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; the switch can be disabled" time="0.00408475">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; the switch can be readonly" time="0.011461458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; the Checked state changes after change events" time="0.01774975">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; decorator &gt; can receive startDecorator as string" time="0.007298">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; decorator &gt; can receive endDecorator as string" time="0.00382925">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; decorator &gt; can receive startDecorator as function" time="0.009200125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Switch/Switch.test.tsx" name="&lt;Switch /&gt; &gt; decorator &gt; can receive endDecorator as function" time="0.008536041">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Tab/Tab.test.tsx" timestamp="2025-09-10T11:25:37.313Z" hostname="Jans-MacBook-Air.local" tests="22" failures="0" errors="0" skipped="6" time="0.3856275">
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.048051375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.030417291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.019996667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.017282791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.021305667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.021696834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.017829417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.014898959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.005464291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.006907583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.004848084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.023069417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.003576667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.001610417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000934959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000611792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000934041">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000353333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.019699125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; prop: variant" time="0.09619725">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; prop: color" time="0.016903">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tab/Tab.test.tsx" name="Joy &lt;Tab /&gt; &gt; prop: disabled" time="0.010897959">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Table/Table.test.tsx" timestamp="2025-09-10T11:25:37.314Z" hostname="Jans-MacBook-Air.local" tests="41" failures="0" errors="0" skipped="6" time="0.33018975">
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.025020292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.008707583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.00931375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.005471458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.008546583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001515417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001150458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.018993542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000667334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000279708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000232209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000417375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000528334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000629125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.026244709">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: variant &gt; plain by default" time="0.050336209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: variant &gt; should render plain" time="0.009788708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: variant &gt; should render outlined" time="0.007089084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: variant &gt; should render soft" time="0.005665459">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: variant &gt; should render solid" time="0.004950959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: color &gt; adds a neutral class by default" time="0.003226292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: color &gt; should render primary" time="0.005223916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: color &gt; should render success" time="0.008129917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: color &gt; should render danger" time="0.005432083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: color &gt; should render neutral" time="0.009168084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: color &gt; should render warning" time="0.00511925">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: size &gt; adds a md class by default" time="0.005419667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: size &gt; should render sm" time="0.01082525">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: size &gt; should render lg" time="0.005178917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: borderAxis &gt; adds `xBetween` by default" time="0.013121375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: borderAxis &gt; should render border-axis none" time="0.007000416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: borderAxis &gt; should render border-axis x" time="0.007943167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: borderAxis &gt; should render border-axis xBetween" time="0.004380667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: borderAxis &gt; should render border-axis y" time="0.007443125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: borderAxis &gt; should render border-axis yBetween" time="0.003712625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: borderAxis &gt; should render border-axis both" time="0.008104791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; prop: borderAxis &gt; should render border-axis bothBetween" time="0.00837325">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; adds `hoverRow` class" time="0.005100333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; adds `noWrap` class" time="0.0091465">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; adds `stickyHeader` class" time="0.003910667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Table/Table.test.tsx" name="&lt;Table /&gt; &gt; adds `stickyFooter` class" time="0.00585375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Textarea/Textarea.test.tsx" timestamp="2025-09-10T11:25:37.316Z" hostname="Jans-MacBook-Air.local" tests="46" failures="0" errors="0" skipped="6" time="0.336753959">
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.075746834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.018012458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.007670375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007351791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.01433675">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.006270333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; sets custom properties on the textarea slot&apos;s element with the slotProps.textarea prop" time="0.006454666">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.textarea with the built-in ones" time="0.005143375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator prop" time="0.005636375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.startDecorator with the built-in ones" time="0.006713375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator prop" time="0.008738417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.endDecorator with the built-in ones" time="0.006904542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.00693875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; sets custom properties on the textarea slot&apos;s element with the slotProps.textarea callback" time="0.005689542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback" time="0.004275166">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback" time="0.004678833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.0059065">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; sets custom properties on the textarea slot&apos;s element with the slotProps.textarea callback using the ownerState" time="0.004544542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback using the ownerState" time="0.008032167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback using the ownerState" time="0.003958375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.00371475">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.004673042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; allows overriding the textarea slot with a component using the slots.textarea prop" time="0.002450791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; allows overriding the textarea slot with an element using the slots.textarea prop" time="0.002082916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with a component using the slots.startDecorator prop" time="0.0045155">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with an element using the slots.startDecorator prop" time="0.00398375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with a component using the slots.endDecorator prop" time="0.005876125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with an element using the slots.endDecorator prop" time="0.006147208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.011207958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000326375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000177208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000184625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000149">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000148833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000128">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.012054791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; should have placeholder" time="0.004303709">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; should have error classes" time="0.004040542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; should have startDecorator" time="0.005953084">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; should have endDecorator" time="0.004809917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; should pass props to Textarea" time="0.003723209">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; prop: disabled &gt; should have disabled classes" time="0.0035935">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; prop: disabled &gt; should reset the focused state if getting disabled" time="0.012208">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; slotProps: input &gt; `onKeyDown` and `onKeyUp` should work" time="0.007559542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; slotProps: input &gt; should call focus and blur" time="0.009577916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Textarea/Textarea.test.tsx" name="Joy &lt;Textarea /&gt; &gt; slotProps: input &gt; should override outer handlers" time="0.007798375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Tabs/Tabs.test.tsx" timestamp="2025-09-10T11:25:37.319Z" hostname="Jans-MacBook-Air.local" tests="23" failures="0" errors="0" skipped="6" time="0.1383805">
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.0248985">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006088167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006007833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003367541">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006592291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.004311625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003434667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002433916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.00334875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001847416">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001367542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.01640175">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000407208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000220375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000227584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000193458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000171167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000155792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.01370725">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; prop: variant" time="0.004306959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; prop: color" time="0.001843708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; prop: size, send the value through context" time="0.031210709">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tabs/Tabs.test.tsx" name="Joy &lt;Tabs /&gt; &gt; prop: orientation" time="0.002636875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" timestamp="2025-09-10T11:25:37.321Z" hostname="Jans-MacBook-Air.local" tests="29" failures="0" errors="0" skipped="4" time="0.325978375">
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.019867542">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005480167">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004469708">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004322667">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005238375">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002967166">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003314792">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002230458">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003030958">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001488125">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.003436459">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.009460583">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000319375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000184709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000207667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000402625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.010836833">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; renders a `group`" time="0.024464708">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; should disable all ToggleButton if disabled prop is passed" time="0.067763167">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; should toggle the state when immediate children is not button" time="0.05602675">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; [exclusive] should render a selected ToggleButton if value is selected" time="0.014668417">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; [non-exclusive] should render a selected ToggleButton if value is selected" time="0.017817625">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; prop: onChange &gt; exclusive &gt; passed value should be null when current value is toggled off" time="0.014077708">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; prop: onChange &gt; exclusive &gt; should be a single value when value is toggled on" time="0.008830375">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; prop: onChange &gt; exclusive &gt; should be a single value when a new value is toggled on" time="0.011863875">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; prop: onChange &gt; non exclusive &gt; should be an empty array when current value is toggled off" time="0.007469833">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; prop: onChange &gt; non exclusive &gt; should be an array with a single value when value is toggled on" time="0.006954083">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; prop: onChange &gt; non exclusive &gt; should be an array with a single value when a secondary value is toggled off" time="0.008779584">
        </testcase>
        <testcase classname="packages/mui-joy/src/ToggleButtonGroup/ToggleButtonGroup.test.tsx" name="&lt;ToggleButtonGroup /&gt; &gt; prop: onChange &gt; non exclusive &gt; should be an array of all selected values when a second value is toggled on" time="0.007790542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" timestamp="2025-09-10T11:25:37.322Z" hostname="Jans-MacBook-Air.local" tests="21" failures="0" errors="0" skipped="6" time="0.182201833">
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.03404175">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.012991583">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006222542">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.007884791">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005467083">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.005661667">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.006328875">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.007540458">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.006118709">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002369333">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002350875">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.0159485">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000374042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000209417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000228208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000180417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000181625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000159">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.017523708">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; size &gt; uses size from Tabs" time="0.039969834">
        </testcase>
        <testcase classname="packages/mui-joy/src/TabPanel/TabPanel.test.tsx" name="Joy &lt;TabPanel /&gt; &gt; size &gt; uses prop if provided" time="0.007366292">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" timestamp="2025-09-10T11:25:37.323Z" hostname="Jans-MacBook-Air.local" tests="34" failures="0" errors="0" skipped="4" time="1.005255958">
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.122704125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.057801625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.02664025">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the arrow slot&apos;s element with the slotProps.arrow prop" time="0.027585042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.arrow with the built-in ones" time="0.029604458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.032795">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the arrow slot&apos;s element with the slotProps.arrow callback" time="0.016600916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.026950791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the arrow slot&apos;s element with the slotProps.arrow callback using the ownerState" time="0.028790958">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.00421225">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; allows overriding the arrow slot with a component using the slots.arrow prop" time="0.02397375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; allows overriding the arrow slot with an element using the slots.arrow prop" time="0.044384083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.043804833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000982917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000247333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000204666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000163583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.035230166">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; prop: variant &gt; solid by default" time="0.015341375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; prop: variant &gt; should render outlined" time="0.02579025">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; prop: variant &gt; should render soft" time="0.015591917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; prop: variant &gt; should render plain" time="0.017731125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; prop: variant &gt; should render solid" time="0.019066833">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; prop: color &gt; adds a neutral class by default" time="0.018778542">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; prop: color &gt; should render primary" time="0.0260455">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; prop: color &gt; should render success" time="0.026898708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; prop: color &gt; should render danger" time="0.109714041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; prop: color &gt; should render neutral" time="0.05119425">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; prop: color &gt; should render warning" time="0.022810583">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; prop: size &gt; md by default" time="0.017714042">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; prop: size &gt; should render sm" time="0.02000725">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; prop: size &gt; should render md" time="0.030108667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; prop: size &gt; should render lg" time="0.027946041">
        </testcase>
        <testcase classname="packages/mui-joy/src/Tooltip/Tooltip.test.tsx" name="&lt;Tooltip /&gt; &gt; focus &gt; should support event handlers with extra parameters" time="0.035873375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/Typography/Typography.test.tsx" timestamp="2025-09-10T11:25:37.325Z" hostname="Jans-MacBook-Air.local" tests="51" failures="0" errors="0" skipped="7" time="0.388436875">
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.041891917">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.012680083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005975667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.012726834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.011761875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.0095925">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.008967916">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator prop" time="0.003443667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.startDecorator with the built-in ones" time="0.003624">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator prop" time="0.002244708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.endDecorator with the built-in ones" time="0.003290625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004982292">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback" time="0.002065125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback" time="0.002081">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.010123625">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; sets custom properties on the startDecorator slot&apos;s element with the slotProps.startDecorator callback using the ownerState" time="0.008153708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; sets custom properties on the endDecorator slot&apos;s element with the slotProps.endDecorator callback using the ownerState" time="0.007607167">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.010168166">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.006013708">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with a component using the slots.startDecorator prop" time="0.012676834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; allows overriding the startDecorator slot with an element using the slots.startDecorator prop" time="0.003657125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with a component using the slots.endDecorator prop" time="0.00816225">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; allows overriding the endDecorator slot with an element using the slots.endDecorator prop" time="0.012308959">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.027872875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001864208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000560584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000432291">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000713167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000617416">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000344958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.040197458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; should render the text" time="0.015300458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; should render body-md root by default" time="0.005896417">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; should render h1 text" time="0.002965834">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; should render h2 text" time="0.00440175">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; should render h3 text" time="0.0038395">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; should render h4 text" time="0.002498333">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; should render title-lg text" time="0.002048291">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; should render title-md text" time="0.001242667">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; should render title-sm text" time="0.00478925">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; should render body-lg text" time="0.004217791">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; should render body-md text" time="0.00535175">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; should render body-sm text" time="0.005537">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; should render body-xs text" time="0.006987584">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; headline &gt; should render the mapped headline" time="0.005065125">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; headline &gt; should render a h1" time="0.002331375">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; prop: levelMapping &gt; should work with a single value" time="0.001493083">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; prop: levelMapping &gt; should work even with an empty mapping" time="0.002680875">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; combines system properties with the sx prop" time="0.000430667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; nested typography &gt; nested Typography should be span unless `component` is specified" time="0.006107458">
        </testcase>
        <testcase classname="packages/mui-joy/src/Typography/Typography.test.tsx" name="&lt;Typography /&gt; &gt; nested typography &gt; Typography inside start/end icon should be span" time="0.007250584">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" timestamp="2025-09-10T11:25:37.328Z" hostname="Jans-MacBook-Air.local" tests="15" failures="0" errors="0" skipped="0" time="0.12977475">
        <testcase classname="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" name="[Joy] CssVarsProvider &gt; shouldSkipGeneratingVar &gt; skip variants" time="0.002282125">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" name="[Joy] CssVarsProvider &gt; shouldSkipGeneratingVar &gt; skip breakpoints" time="0.000391958">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" name="[Joy] CssVarsProvider &gt; shouldSkipGeneratingVar &gt; skip focus" time="0.000429333">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" name="[Joy] CssVarsProvider &gt; All CSS vars &gt; palette" time="0.042770875">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" name="[Joy] CssVarsProvider &gt; All CSS vars &gt; font" time="0.012879584">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" name="[Joy] CssVarsProvider &gt; All CSS vars &gt; shape" time="0.013035041">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" name="[Joy] CssVarsProvider &gt; All CSS vars &gt; shadow ring &amp; channel" time="0.0066955">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" name="[Joy] CssVarsProvider &gt; All CSS vars &gt; zIndex" time="0.007263667">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" name="[Joy] CssVarsProvider &gt; Focus &gt; contain expected focus" time="0.007670209">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" name="[Joy] CssVarsProvider &gt; Typography &gt; contain expected typography" time="0.006004958">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" name="[Joy] CssVarsProvider &gt; Variant &gt; contain expected variants" time="0.00573125">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" name="[Joy] CssVarsProvider &gt; Spacing &gt; provides spacing utility" time="0.006919333">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" name="[Joy] CssVarsProvider &gt; Breakpoints &gt; provides breakpoint utilities" time="0.005507958">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" name="[Joy] CssVarsProvider &gt; Skipped vars &gt; should not contain `variants` in theme.vars" time="0.0054145">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/CssVarsProvider.test.tsx" name="[Joy] CssVarsProvider &gt; Skipped vars &gt; should contain only `focus.thickness` in theme.vars" time="0.005286208">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/styles/ThemeProvider.test.tsx" timestamp="2025-09-10T11:25:37.328Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.030244875">
        <testcase classname="packages/mui-joy/src/styles/ThemeProvider.test.tsx" name="[Joy] ThemeProvider &gt; can render component without ThemeProvider" time="0.012983542">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/ThemeProvider.test.tsx" name="[Joy] ThemeProvider &gt; merge custom theme and apply to vars" time="0.016391708">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/styles/defaultTheme.test.js" timestamp="2025-09-10T11:25:37.328Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.008507458">
        <testcase classname="packages/mui-joy/src/styles/defaultTheme.test.js" name="defaultTheme &gt; the output contains required fields" time="0.004644541">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/defaultTheme.test.js" name="defaultTheme &gt; the generated palette always has mode and color scheme as `light`" time="0.001396708">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/defaultTheme.test.js" name="defaultTheme &gt; has `containerQueries` in the theme" time="0.000553125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/styles/extendTheme.test.js" timestamp="2025-09-10T11:25:37.329Z" hostname="Jans-MacBook-Air.local" tests="20" failures="0" errors="0" skipped="0" time="0.140566209">
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; the output contains required fields" time="0.004577166">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; should have the vars object" time="0.003002375">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; should have joy default css var prefix" time="0.00405075">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; should have custom css var prefix" time="0.005557792">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; should have no css var prefix" time="0.003373042">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; should accept custom fontSize value" time="0.002847417">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; should have custom --variant-borderWidth" time="0.0042125">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; should have correct font family" time="0.002539917">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; spacing &gt; produce spacing token by default" time="0.002357916">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; spacing &gt; turn number to pixel" time="0.004394333">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; spacing &gt; can be customized as a string" time="0.002211791">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; spacing &gt; uses the provided value if it is a string" time="0.002195917">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; spacing &gt; can be customized as an array" time="0.006571583">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; spacing &gt; can be customized as a function" time="0.005441917">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; typography &gt; produce typography token by default" time="0.002298209">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; typography &gt; access font vars" time="0.0060595">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; typography &gt; use provided value if no font" time="0.003957916">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; theme.unstable_sx &gt; bgcolor" time="0.033568041">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; theme.unstable_sx &gt; borderRadius" time="0.01736575">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/extendTheme.test.js" name="extendTheme &gt; theme.unstable_sx &gt; applyStyles" time="0.022770625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/styles/styleUtils.test.js" timestamp="2025-09-10T11:25:37.330Z" hostname="Jans-MacBook-Air.local" tests="9" failures="0" errors="0" skipped="0" time="0.003546833">
        <testcase classname="packages/mui-joy/src/styles/styleUtils.test.js" name="getThemeValue &gt; return undefined if no sx" time="0.001252292">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/styleUtils.test.js" name="getThemeValue &gt; border-radius &gt; return correct value if shorthand is provided" time="0.000345875">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/styleUtils.test.js" name="getThemeValue &gt; border-radius &gt; return correct value if number is provided" time="0.000101916">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/styleUtils.test.js" name="getThemeValue &gt; border-radius &gt; return correct value if css value is provided" time="0.000080958">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/styleUtils.test.js" name="getThemeValue &gt; border-radius &gt; works with sx as a function" time="0.000198417">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/styleUtils.test.js" name="getThemeValue &gt; border-radius &gt; works with sx as an array" time="0.00015575">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/styleUtils.test.js" name="getThemeValue &gt; padding &gt; return correct value if shorthand is provided" time="0.000191583">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/styleUtils.test.js" name="getThemeValue &gt; padding &gt; return correct value if number is provided" time="0.000081833">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/styleUtils.test.js" name="getThemeValue &gt; padding &gt; return correct value if css value is provided" time="0.000282667">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/styles/styled.test.tsx" timestamp="2025-09-10T11:25:37.330Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="3" time="0.003566333">
        <testcase classname="packages/mui-joy/src/styles/styled.test.tsx" name="[Joy] styled &gt; use defaultTheme given no ThemeProvider" time="0.001934834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/styled.test.tsx" name="[Joy] styled &gt; use theme from ThemeProvider" time="0.000436708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/styled.test.tsx" name="[Joy] styled &gt; supports unstable_sx in the theme callback" time="0.000376875">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/styles/variantColorInheritance.test.tsx" timestamp="2025-09-10T11:25:37.330Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.068874416">
        <testcase classname="packages/mui-joy/src/styles/variantColorInheritance.test.tsx" name="VariantColorProvider &gt; should provide default variant and color" time="0.029786666">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantColorInheritance.test.tsx" name="VariantColorProvider &gt; variant `solid` should inherit variant and color" time="0.006459625">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantColorInheritance.test.tsx" name="VariantColorProvider &gt; variant `soft` should inherit variant and color" time="0.003059958">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantColorInheritance.test.tsx" name="VariantColorProvider &gt; variant `outlined` should set variant to plain and color to neutral" time="0.003655167">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantColorInheritance.test.tsx" name="VariantColorProvider &gt; variant `plain` should set color to neutral" time="0.003465917">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantColorInheritance.test.tsx" name="VariantColorProvider &gt; should use instance variant and color" time="0.002585959">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantColorInheritance.test.tsx" name="VariantColorProvider &gt; should use default variant and color" time="0.017287041">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/styles/variantUtils.test.js" timestamp="2025-09-10T11:25:37.331Z" hostname="Jans-MacBook-Air.local" tests="20" failures="0" errors="0" skipped="0" time="0.006549916">
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; isVariantPalette" time="0.00133075">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; initial state &gt; [color] should create a variant" time="0.000712542">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; initial state &gt; [bg] should create a variant" time="0.000278375">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; initial state &gt; [border] should create a variant" time="0.000117709">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; hover state &gt; [color] should create a variant" time="0.000201792">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; hover state &gt; [bg] should create a variant" time="0.000160292">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; hover state &gt; [border] should create a variant" time="0.000083875">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; active state &gt; [color] should create a variant" time="0.000092584">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; active state &gt; [bg] should create a variant" time="0.000193292">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; active state &gt; [border] should create a variant" time="0.000184042">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; disabled state &gt; [color] should create a variant" time="0.00019275">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; disabled state &gt; [bg] should create a variant" time="0.000102125">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; disabled state &gt; [border] should create a variant" time="0.000074666">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; should have --variant-borderWidth to initial states even without border token" time="0.000266333">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; should create a variant with all states" time="0.00041325">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; should not include invalid value to variant" time="0.000092958">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; create correct context color for plain variant" time="0.000271417">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; createVariant &gt; should create style with properties from palette with default value" time="0.000319375">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; createVariant &gt; automatically create variant style if the variable is in the correct format" time="0.000261875">
        </testcase>
        <testcase classname="packages/mui-joy/src/styles/variantUtils.test.js" name="variant utils &gt; createVariant &gt; auto generate &quot;context&quot;" time="0.000222583">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/utils/useSlot.test.tsx" timestamp="2025-09-10T11:25:37.332Z" hostname="Jans-MacBook-Air.local" tests="18" failures="0" errors="0" skipped="0" time="0.168382708">
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; single slot &gt; should render correct tag" time="0.05456075">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; single slot &gt; should change leaf component and spread props" time="0.006652083">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; should render both tags" time="0.008892584">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; should have classes" time="0.005166833">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; should append classes" time="0.005570958">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; slot has default size `md`" time="0.003485834">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; slot ownerstate should be overridable" time="0.003025209">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; slotProps has higher priority" time="0.002955917">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; can change root leaf component with `component` prop" time="0.003426458">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; use slotProps `component` over `component` prop" time="0.002284334">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; can change decorator leaf component" time="0.002258666">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; unstyled popper as the root slot &gt; should render popper with styled-component" time="0.019824916">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; unstyled popper as the root slot &gt; the root slot should be replaceable" time="0.003277125">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; unstyled popper as the root slot &gt; the root component can be changed" time="0.009996208">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots with unstyled popper &gt; should render popper with styled-component" time="0.01456975">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots with unstyled popper &gt; the listbox slot should be replaceable" time="0.002904125">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots with unstyled popper &gt; the listbox leaf component can be changed" time="0.009421542">
        </testcase>
        <testcase classname="packages/mui-joy/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots with unstyled popper &gt; the option leaf component can be changed" time="0.008809334">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-joy/src/colorInversion/colorInversionUtils.test.tsx" timestamp="2025-09-10T11:25:37.333Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.04558025">
        <testcase classname="packages/mui-joy/src/colorInversion/colorInversionUtils.test.tsx" name="colorInversionUtil &gt; should not throw error using sx prop" time="0.043241292">
        </testcase>
        <testcase classname="packages/mui-joy/src/colorInversion/colorInversionUtils.test.tsx" name="colorInversionUtil &gt; should not throw error using styled API" time="0.001313916">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/Container/Container.test.js" timestamp="2025-09-10T11:25:37.333Z" hostname="Jans-MacBook-Air.local" tests="14" failures="0" errors="0" skipped="6" time="0.051376458">
        <testcase classname="packages/mui-system/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.020430834">
        </testcase>
        <testcase classname="packages/mui-system/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.004657916">
        </testcase>
        <testcase classname="packages/mui-system/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003991292">
        </testcase>
        <testcase classname="packages/mui-system/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002375625">
        </testcase>
        <testcase classname="packages/mui-system/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006165041">
        </testcase>
        <testcase classname="packages/mui-system/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004143084">
        </testcase>
        <testcase classname="packages/mui-system/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000410958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000342459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000526667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000249292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000192792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000166334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.00252825">
        </testcase>
        <testcase classname="packages/mui-system/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; prop: maxWidth &gt; should support different maxWidth values" time="0.003568334">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/Box/Box.test.js" timestamp="2025-09-10T11:25:37.334Z" hostname="Jans-MacBook-Air.local" tests="12" failures="0" errors="0" skipped="4" time="0.105175834">
        <testcase classname="packages/mui-system/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.020647917">
        </testcase>
        <testcase classname="packages/mui-system/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005576083">
        </testcase>
        <testcase classname="packages/mui-system/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00377825">
        </testcase>
        <testcase classname="packages/mui-system/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.006946042">
        </testcase>
        <testcase classname="packages/mui-system/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; does not forward style props as DOM attributes" time="0.007243625">
        </testcase>
        <testcase classname="packages/mui-system/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; renders children and box content" time="0.003576625">
        </testcase>
        <testcase classname="packages/mui-system/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; respect properties order when generating the CSS" time="0.000437917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; respect border-*-color properties order when generating the CSS" time="0.000280041">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; respect properties order when generating the CSS from the sx prop" time="0.000393333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; combines system properties with the sx prop" time="0.050069041">
        </testcase>
        <testcase classname="packages/mui-system/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; adds the utility mui class" time="0.003035209">
        </testcase>
        <testcase classname="packages/mui-system/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; prop: maxWidth &gt; should resolve breakpoints with custom units" time="0.000763916">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/InitColorSchemeScript/InitColorSchemeScript.test.js" timestamp="2025-09-10T11:25:37.334Z" hostname="Jans-MacBook-Air.local" tests="12" failures="0" errors="0" skipped="0" time="0.063638334">
        <testcase classname="packages/mui-system/src/InitColorSchemeScript/InitColorSchemeScript.test.js" name="InitColorSchemeScript &gt; should set `light` color scheme to body" time="0.016985125">
        </testcase>
        <testcase classname="packages/mui-system/src/InitColorSchemeScript/InitColorSchemeScript.test.js" name="InitColorSchemeScript &gt; should set `light` color scheme with class" time="0.008598375">
        </testcase>
        <testcase classname="packages/mui-system/src/InitColorSchemeScript/InitColorSchemeScript.test.js" name="InitColorSchemeScript &gt; should set `light` color scheme with data" time="0.0036975">
        </testcase>
        <testcase classname="packages/mui-system/src/InitColorSchemeScript/InitColorSchemeScript.test.js" name="InitColorSchemeScript &gt; should set custom color scheme to body with custom attribute" time="0.003648666">
        </testcase>
        <testcase classname="packages/mui-system/src/InitColorSchemeScript/InitColorSchemeScript.test.js" name="InitColorSchemeScript &gt; should switch between light and dark with class attribute" time="0.006602583">
        </testcase>
        <testcase classname="packages/mui-system/src/InitColorSchemeScript/InitColorSchemeScript.test.js" name="InitColorSchemeScript &gt; should switch between light and dark with data-%s attribute" time="0.005102875">
        </testcase>
        <testcase classname="packages/mui-system/src/InitColorSchemeScript/InitColorSchemeScript.test.js" name="InitColorSchemeScript &gt; should switch between light and dark with data=&quot;%s&quot; attribute" time="0.004041042">
        </testcase>
        <testcase classname="packages/mui-system/src/InitColorSchemeScript/InitColorSchemeScript.test.js" name="InitColorSchemeScript &gt; should set `dark` color scheme to body" time="0.002439">
        </testcase>
        <testcase classname="packages/mui-system/src/InitColorSchemeScript/InitColorSchemeScript.test.js" name="InitColorSchemeScript &gt; should set dark color scheme to body, given prefers-color-scheme is `dark`" time="0.004381333">
        </testcase>
        <testcase classname="packages/mui-system/src/InitColorSchemeScript/InitColorSchemeScript.test.js" name="InitColorSchemeScript &gt; should set light color scheme to body, given prefers-color-scheme is NOT `dark`" time="0.002689292">
        </testcase>
        <testcase classname="packages/mui-system/src/InitColorSchemeScript/InitColorSchemeScript.test.js" name="InitColorSchemeScript &gt; system preference &gt; should set dark color scheme to body, given prefers-color-scheme is `dark`" time="0.001648667">
        </testcase>
        <testcase classname="packages/mui-system/src/InitColorSchemeScript/InitColorSchemeScript.test.js" name="InitColorSchemeScript &gt; system preference &gt; should set light color scheme to body, given prefers-color-scheme is NOT `dark`" time="0.002353583">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/Grid/Grid.test.js" timestamp="2025-09-10T11:25:37.335Z" hostname="Jans-MacBook-Air.local" tests="37" failures="0" errors="0" skipped="8" time="0.147266291">
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.021133584">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005150875">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003361542">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.001822417">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007928042">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.008216708">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000654708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.001954083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.002075833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000336792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000200875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000168458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004187958">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; prop: container &gt; should apply the container class" time="0.002789459">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; prop: xs &gt; should apply the flex-grow class" time="0.002354292">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; prop: xs &gt; should apply the flex size class" time="0.001554292">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; prop: xs &gt; should apply the flex auto class" time="0.001175042">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; prop: xs &gt; should apply the styles necessary for variable width nested item when set to auto" time="0.00021225">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; prop: spacing &gt; should have a spacing" time="0.002052041">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; prop: spacing &gt; should not support undefined values" time="0.004757583">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; prop: spacing &gt; should not support zero values" time="0.00219075">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; prop: spacing &gt; should support object values" time="0.002730708">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; prop: spacing &gt; should ignore object values of zero" time="0.005884875">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; spacing &gt; should generate the right values" time="0.000248583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; combines system properties with the sx prop" time="0.025999584">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; prop: wrap &gt; should wrap by default" time="0.002958167">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; prop: wrap &gt; should apply nowrap class and style" time="0.006346708">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; prop: wrap &gt; should apply wrap-reverse class and style" time="0.002616875">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; Custom breakpoints &gt; should apply the custom breakpoint class" time="0.002159375">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; Custom breakpoints &gt; should apply the custom breakpoint spacing class" time="0.004149708">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; legacy Grid component warnings &gt; should warn once if the `item` prop is used" time="0.004379167">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; legacy Grid component warnings &gt; should warn if the `zeroMinWidth` prop is used" time="0.001103792">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; legacy Grid component warnings &gt; should warn if the `xs` prop is used" time="0.004196708">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; legacy Grid component warnings &gt; should warn if the `sm` prop is used" time="0.002965292">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; legacy Grid component warnings &gt; should warn if the `md` prop is used" time="0.003338125">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; legacy Grid component warnings &gt; should warn if the `lg` prop is used" time="0.000967042">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/Grid.test.js" name="System &lt;Grid /&gt; &gt; legacy Grid component warnings &gt; should warn if the `xl` prop is used" time="0.000754">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/Grid/gridGenerator.test.js" timestamp="2025-09-10T11:25:37.337Z" hostname="Jans-MacBook-Air.local" tests="19" failures="0" errors="0" skipped="0" time="0.005249042">
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateGridStyles &gt; root container" time="0.001267208">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateGridStyles &gt; nested container level 1" time="0.000430584">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateGridStyles &gt; nested container level 2" time="0.000092417">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateGridStyles &gt; item" time="0.000144125">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateGridSizeStyles &gt; works with supported format" time="0.000406541">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateGridColumnsStyles &gt; supports number" time="0.000188209">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateGridColumnsStyles &gt; supports responsive" time="0.000153042">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateGridColumnsStyles &gt; has default of 12 if the smallest breakpoint is not specified" time="0.000083708">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateGridRowSpacingStyles &gt; supports number" time="0.000260959">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateGridRowSpacingStyles &gt; supports string" time="0.000087041">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateGridRowSpacingStyles &gt; supports responsive" time="0.000194083">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateGridColumnSpacingStyles &gt; supports number" time="0.000095292">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateGridColumnSpacingStyles &gt; supports string" time="0.000060083">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateGridColumnSpacingStyles &gt; supports responsive" time="0.0001255">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateGridOffsetStyles &gt; supports responsive object" time="0.000151833">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; class names &gt; should generate correct grid size class names" time="0.000088708">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; class names &gt; should generate correct spacing class names" time="0.000137125">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; class names &gt; should work with any breakpoint" time="0.000081209">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/gridGenerator.test.js" name="grid generator &gt; generateDirectionClasses &gt; should generate correct direction class names" time="0.00011225">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/Grid/traverseBreakpoints.test.ts" timestamp="2025-09-10T11:25:37.338Z" hostname="Jans-MacBook-Air.local" tests="10" failures="0" errors="0" skipped="0" time="0.003374791">
        <testcase classname="packages/mui-system/src/Grid/traverseBreakpoints.test.ts" name="traverse breakpoints &gt; supports array" time="0.001237375">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/traverseBreakpoints.test.ts" name="traverse breakpoints &gt; supports object" time="0.000351708">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/traverseBreakpoints.test.ts" name="traverse breakpoints &gt; works with mixed object" time="0.000121333">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/traverseBreakpoints.test.ts" name="traverse breakpoints &gt; does not iterate undefined value" time="0.000142583">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/traverseBreakpoints.test.ts" name="traverse breakpoints &gt; filters out breakpoints keys based on responsive keys" time="0.000119416">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/traverseBreakpoints.test.ts" name="traverse breakpoints &gt; custom breakpoints &gt; supports array" time="0.000156">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/traverseBreakpoints.test.ts" name="traverse breakpoints &gt; custom breakpoints &gt; supports object" time="0.000090083">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/traverseBreakpoints.test.ts" name="traverse breakpoints &gt; custom breakpoints &gt; supports object (random order)" time="0.000094333">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/traverseBreakpoints.test.ts" name="traverse breakpoints &gt; new breakpoints &gt; supports array" time="0.000218292">
        </testcase>
        <testcase classname="packages/mui-system/src/Grid/traverseBreakpoints.test.ts" name="traverse breakpoints &gt; new breakpoints &gt; supports object" time="0.00013575">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/Stack/Stack.test.js" timestamp="2025-09-10T11:25:37.338Z" hostname="Jans-MacBook-Air.local" tests="20" failures="0" errors="0" skipped="1" time="0.0747635">
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.026953083">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006558">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.010334875">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005329292">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.000475958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.012481375">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; should handle breakpoints with a missing key" time="0.002737">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; should handle direction with multiple keys and spacing with one" time="0.000608875">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; should handle spacing with multiple keys and direction with one" time="0.00049725">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; should handle spacing with multiple keys and null values" time="0.000498542">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; should handle flat params" time="0.000236666">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; should respect the theme breakpoints order" time="0.000655792">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; prop: direction &gt; should generate correct direction given string values" time="0.000737875">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; prop: direction &gt; should generate correct responsive styles regardless of breakpoints order" time="0.000351458">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; prop: direction &gt; should generate correct direction even though breakpoints are not fully provided" time="0.000200916">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; prop: direction &gt; should place correct margin direction even though breakpoints are not fully provided" time="0.000427">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; prop: spacing &gt; should generate correct responsive styles regardless of breakpoints order" time="0.000253625">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; prop: spacing &gt; should generate correct styles if custom breakpoints are provided in theme" time="0.000477791">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; prop: spacing &gt; should generate correct responsive styles if custom responsive spacing values are provided" time="0.000913916">
        </testcase>
        <testcase classname="packages/mui-system/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; prop: spacing &gt; should list responsive styles in correct order" time="0.001705709">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/GlobalStyles/GlobalStyles.test.tsx" timestamp="2025-09-10T11:25:37.339Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.013785">
        <testcase classname="packages/mui-system/src/GlobalStyles/GlobalStyles.test.tsx" name="&lt;GlobalStyles /&gt; &gt; should work" time="0.012787584">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/ThemeProvider/ThemeProvider.test.js" timestamp="2025-09-10T11:25:37.340Z" hostname="Jans-MacBook-Air.local" tests="12" failures="0" errors="0" skipped="0" time="0.037240875">
        <testcase classname="packages/mui-system/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; should provide the theme to the mui theme context" time="0.013719375">
        </testcase>
        <testcase classname="packages/mui-system/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; should provide the theme to the styled engine theme context" time="0.003221875">
        </testcase>
        <testcase classname="packages/mui-system/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; merge theme by default" time="0.002988667">
        </testcase>
        <testcase classname="packages/mui-system/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; use provided theme from a callback" time="0.002100666">
        </testcase>
        <testcase classname="packages/mui-system/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; theme scope: theme should not change" time="0.002055875">
        </testcase>
        <testcase classname="packages/mui-system/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; theme scope: nested below general theme" time="0.001629041">
        </testcase>
        <testcase classname="packages/mui-system/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; theme scope: respect callback and merge theme" time="0.001660708">
        </testcase>
        <testcase classname="packages/mui-system/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; theme scope: order should not matter" time="0.001567709">
        </testcase>
        <testcase classname="packages/mui-system/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; theme scope: multiple themeIds" time="0.002393084">
        </testcase>
        <testcase classname="packages/mui-system/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; theme scope: multiple themeIds with callback" time="0.001506709">
        </testcase>
        <testcase classname="packages/mui-system/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; theme scope: should pass scoped theme to DefaultPropsProvider" time="0.00175425">
        </testcase>
        <testcase classname="packages/mui-system/src/ThemeProvider/ThemeProvider.test.js" name="ThemeProvider &gt; sets the correct value for the RtlProvider based on the theme.direction" time="0.001517459">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/ThemeProvider/useLayerOrder.test.tsx" timestamp="2025-09-10T11:25:37.340Z" hostname="Jans-MacBook-Air.local" tests="5" failures="0" errors="0" skipped="0" time="0.031557417">
        <testcase classname="packages/mui-system/src/ThemeProvider/useLayerOrder.test.tsx" name="useLayerOrder &gt; attach layer order" time="0.018727417">
        </testcase>
        <testcase classname="packages/mui-system/src/ThemeProvider/useLayerOrder.test.tsx" name="useLayerOrder &gt; custom layer order string" time="0.004185209">
        </testcase>
        <testcase classname="packages/mui-system/src/ThemeProvider/useLayerOrder.test.tsx" name="useLayerOrder &gt; does not replace nested layer" time="0.003280959">
        </testcase>
        <testcase classname="packages/mui-system/src/ThemeProvider/useLayerOrder.test.tsx" name="useLayerOrder &gt; returns null if modularCssLayers is falsy" time="0.002041708">
        </testcase>
        <testcase classname="packages/mui-system/src/ThemeProvider/useLayerOrder.test.tsx" name="useLayerOrder &gt; do nothing if upperTheme exists to avoid duplicate elements" time="0.001939667">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/breakpoints/breakpoints.test.js" timestamp="2025-09-10T11:25:37.340Z" hostname="Jans-MacBook-Air.local" tests="27" failures="0" errors="0" skipped="0" time="0.004961791">
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; should work" time="0.001480042">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: computeBreakpointsBase &gt; mui default breakpoints &gt; compute base for breakpoint values of array type" time="0.000201708">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: computeBreakpointsBase &gt; mui default breakpoints &gt; compute base for breakpoint values of object type" time="0.000156334">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: computeBreakpointsBase &gt; mui default breakpoints &gt; return empty object for fixed value" time="0.000134041">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: computeBreakpointsBase &gt; custom breakpoints &gt; compute base for breakpoint values of array type" time="0.000150666">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: computeBreakpointsBase &gt; custom breakpoints &gt; compute base for breakpoint values of object type" time="0.000092041">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: computeBreakpointsBase &gt; custom breakpoints &gt; return empty object for fixed value" time="0.00006525">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; mui default breakpoints &gt; resolve breakpoint values for prop of array type" time="0.00019225">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; mui default breakpoints &gt; resolve breakpoint values for prop of object type" time="0.000181625">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; mui default breakpoints &gt; resolve breakpoint values for unordered prop of object type" time="0.000091125">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; mui default breakpoints &gt; return prop as it is for prop of fixed value" time="0.00005325">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; mui default breakpoints &gt; given custom base, resolve breakpoint values for prop of array type" time="0.00006625">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; mui default breakpoints &gt; given custom base, resolve breakpoint values for prop of object type" time="0.000061167">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; mui default breakpoints &gt; given custom base, resolve breakpoint values for unordered prop of object type" time="0.000056375">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; mui default breakpoints &gt; given custom base, resolve breakpoint values for prop of object type with missing breakpoints" time="0.00005825">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; mui default breakpoints &gt; given custom base, resolve breakpoint values for unordered prop of object type with missing breakpoints" time="0.000097667">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; custom breakpoints &gt; resolve breakpoint values for prop of array type" time="0.00006225">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; custom breakpoints &gt; resolve breakpoint values for prop of object type" time="0.000055583">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; custom breakpoints &gt; resolve breakpoint values for unordered prop of object type" time="0.000053333">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; custom breakpoints &gt; return prop as it is for prop of fixed value" time="0.000040167">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; custom breakpoints &gt; return prop as it is for prop of fixed string value" time="0.000050167">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; custom breakpoints &gt; given custom base, resolve breakpoint values for prop of string type" time="0.000059916">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; custom breakpoints &gt; given custom base, resolve breakpoint values for prop of number type" time="0.00005775">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; custom breakpoints &gt; given custom base, resolve breakpoint values for prop of array type" time="0.000054792">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; custom breakpoints &gt; given custom base, resolve breakpoint values for prop of object type" time="0.000111833">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: resolveBreakpointValues &gt; custom breakpoints &gt; given custom base, resolve breakpoint values for unordered prop of object type" time="0.000052709">
        </testcase>
        <testcase classname="packages/mui-system/src/breakpoints/breakpoints.test.js" name="breakpoints &gt; function: removeUnusedBreakpoints &gt; allow value to be null" time="0.000100083">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/compose/compose.test.js" timestamp="2025-09-10T11:25:37.342Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.002451416">
        <testcase classname="packages/mui-system/src/compose/compose.test.js" name="compose &gt; should compose" time="0.0017345">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/borders/borders.test.js" timestamp="2025-09-10T11:25:37.342Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.003172792">
        <testcase classname="packages/mui-system/src/borders/borders.test.js" name="borders &gt; should work" time="0.001762917">
        </testcase>
        <testcase classname="packages/mui-system/src/borders/borders.test.js" name="borders &gt; should work with 0" time="0.000320791">
        </testcase>
        <testcase classname="packages/mui-system/src/borders/borders.test.js" name="borders &gt; theme shape as string &gt; should work " time="0.000206417">
        </testcase>
        <testcase classname="packages/mui-system/src/borders/borders.test.js" name="borders &gt; theme shape as string &gt; should work with 0" time="0.000104">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/colorManipulator/colorManipulator.test.js" timestamp="2025-09-10T11:25:37.342Z" hostname="Jans-MacBook-Air.local" tests="91" failures="0" errors="0" skipped="0" time="0.009523209">
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; recomposeColor &gt; converts a decomposed rgb color object to a string` " time="0.001009625">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; recomposeColor &gt; converts a decomposed rgba color object to a string` " time="0.000178834">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; recomposeColor &gt; converts a decomposed CSS4 color object to a string` " time="0.000128917">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; recomposeColor &gt; converts a decomposed hsl color object to a string` " time="0.000063084">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; recomposeColor &gt; converts a decomposed hsla color object to a string` " time="0.000101917">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; hexToRgb &gt; converts a short hex color to an rgb color` " time="0.000176208">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; hexToRgb &gt; converts a long hex color to an rgb color` " time="0.000129333">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; hexToRgb &gt; converts a long alpha hex color to an argb color` " time="0.000055833">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; rgbToHex &gt; converts an rgb color to a hex color` " time="0.000285916">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; rgbToHex &gt; converts an rgba color to a hex color` " time="0.000073959">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; rgbToHex &gt; idempotent" time="0.000045541">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; hslToRgb &gt; converts an hsl color to an rgb color` " time="0.000159209">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; hslToRgb &gt; converts an hsla color to an rgba color` " time="0.000078833">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; hslToRgb &gt; allow to convert values only" time="0.000058333">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; decomposeColor &gt; converts an rgb color string to an object with `type` and `value` keys" time="0.000330167">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; decomposeColor &gt; converts an rgba color string to an object with `type` and `value` keys" time="0.0000705">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; decomposeColor &gt; converts an hsl color string to an object with `type` and `value` keys" time="0.000137209">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; decomposeColor &gt; converts an hsla color string to an object with `type` and `value` keys" time="0.00007575">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; decomposeColor &gt; converts CSS4 color with color space display-3" time="0.000076334">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; decomposeColor &gt; converts an alpha CSS4 color with color space display-3" time="0.000066625">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; decomposeColor &gt; should throw error with inexistent color color space" time="0.000637208">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; decomposeColor &gt; idempotent" time="0.000065416">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; decomposeColor &gt; converts rgba hex" time="0.000174166">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getContrastRatio &gt; returns a ratio for black : white" time="0.000106791">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getContrastRatio &gt; returns a ratio for black : black" time="0.000048416">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getContrastRatio &gt; returns a ratio for white : white" time="0.000126875">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getContrastRatio &gt; returns a ratio for dark-grey : light-grey" time="0.0001295">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getContrastRatio &gt; returns a ratio for black : light-grey" time="0.000067542">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getLuminance &gt; returns a valid luminance for rgb black" time="0.000066208">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getLuminance &gt; returns a valid luminance for rgb white" time="0.000045125">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getLuminance &gt; returns a valid luminance for hsla black" time="0.000048541">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getLuminance &gt; returns a valid luminance for hsla white" time="0.000044333">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getLuminance &gt; returns a valid luminance for rgb mid-grey" time="0.000045875">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getLuminance &gt; returns a valid luminance for an rgb color" time="0.000038333">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getLuminance &gt; returns a valid luminance from an hsl color" time="0.00004825">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getLuminance &gt; returns a valid luminance from an hsla color" time="0.000045125">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getLuminance &gt; returns an equal luminance for the same color in different formats" time="0.000050583">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getLuminance &gt; returns a valid luminance from an CSS4 color" time="0.000040833">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; getLuminance &gt; throw on invalid colors" time="0.000134167">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; emphasize &gt; lightens a dark rgb color with the coefficient provided" time="0.000158584">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; emphasize &gt; darkens a light rgb color with the coefficient provided" time="0.000066958">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; emphasize &gt; lightens a dark rgb color with the coefficient 0.15 by default" time="0.000045292">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; emphasize &gt; darkens a light rgb color with the coefficient 0.15 by default" time="0.00004425">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; emphasize &gt; lightens a dark CSS4 color with the coefficient 0.15 by default" time="0.000117417">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; emphasize &gt; darkens a light CSS4 color with the coefficient 0.15 by default" time="0.000050583">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; alpha &gt; converts an rgb color to an rgba color with the value provided" time="0.000059125">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; alpha &gt; updates an CSS4 color with the alpha value provided" time="0.000041875">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; alpha &gt; updates an rgba color with the alpha value provided" time="0.000041125">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; alpha &gt; converts an hsl color to an hsla color with the value provided" time="0.00004375">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; alpha &gt; updates an hsla color with the alpha value provided" time="0.000043209">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; alpha &gt; throw on invalid colors" time="0.000078792">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; alpha &gt; warns if the color contains space at the end" time="0.000203666">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; darken &gt; doesn&apos;t modify rgb black" time="0.000051958">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; darken &gt; doesn&apos;t overshoot if an above-range coefficient is supplied" time="0.000064583">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; darken &gt; doesn&apos;t overshoot if a below-range coefficient is supplied" time="0.000057667">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; darken &gt; darkens rgb white to black when coefficient is 1" time="0.000039916">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; darken &gt; retains the alpha value in an rgba color" time="0.000041375">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; darken &gt; darkens rgb white by 10% when coefficient is 0.1" time="0.000039375">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; darken &gt; darkens rgb red by 50% when coefficient is 0.5" time="0.000042667">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; darken &gt; darkens rgb grey by 50% when coefficient is 0.5" time="0.00004">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; darken &gt; doesn&apos;t modify rgb colors when coefficient is 0" time="0.000039083">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; darken &gt; darkens hsl red by 50% when coefficient is 0.5" time="0.000040625">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; darken &gt; doesn&apos;t modify hsl colors when coefficient is 0" time="0.000043541">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; darken &gt; doesn&apos;t modify hsl colors when l is 0%" time="0.000037667">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; darken &gt; darkens CSS4 color red by 50% when coefficient is 0.5" time="0.000037417">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; darken &gt; doesn&apos;t modify CSS4 color when coefficient is 0" time="0.000037584">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; lighten &gt; doesn&apos;t modify rgb white" time="0.000039625">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; lighten &gt; doesn&apos;t overshoot if an above-range coefficient is supplied" time="0.000055166">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; lighten &gt; doesn&apos;t overshoot if a below-range coefficient is supplied" time="0.000050208">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; lighten &gt; lightens rgb black to white when coefficient is 1" time="0.00003575">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; lighten &gt; retains the alpha value in an rgba color" time="0.000036417">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; lighten &gt; lightens rgb black by 10% when coefficient is 0.1" time="0.0000355">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; lighten &gt; lightens rgb red by 50% when coefficient is 0.5" time="0.000037709">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; lighten &gt; lightens rgb grey by 50% when coefficient is 0.5" time="0.0000355">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; lighten &gt; doesn&apos;t modify rgb colors when coefficient is 0" time="0.000043041">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; lighten &gt; lightens hsl red by 50% when coefficient is 0.5" time="0.000038917">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; lighten &gt; doesn&apos;t modify hsl colors when coefficient is 0" time="0.000040167">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; lighten &gt; doesn&apos;t modify hsl colors when `l` is 100%" time="0.000039708">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; lighten &gt; lightens CSS4 color red by 50% when coefficient is 0.5" time="0.00004175">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; lighten &gt; doesn&apos;t modify CSS4 color when coefficient is 0" time="0.000038625">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; colorChannel &gt; converts a short hex color to a color channel` " time="0.00007825">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; colorChannel &gt; converts a long hex color to a colorChannel` " time="0.000042959">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; colorChannel &gt; converts a long alpha hex color to a color channel` " time="0.000044209">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; colorChannel &gt; converts rgb to a color channel` " time="0.000038208">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; colorChannel &gt; converts rgba to a color channel` " time="0.000037459">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; colorChannel &gt; converts hsl to a color channel` " time="0.000037334">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; colorChannel &gt; converts hsla to a color channel` " time="0.000038709">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; blend &gt; works" time="0.000085667">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; blend &gt; works with a gamma correction factor" time="0.000042917">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; blend &gt; selects only the background color with an opacity of 0.0" time="0.000109459">
        </testcase>
        <testcase classname="packages/mui-system/src/colorManipulator/colorManipulator.test.js" name="utils/colorManipulator &gt; blend &gt; selects only the overlay color with an opacity of 1.0" time="0.000050959">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" timestamp="2025-09-10T11:25:37.347Z" hostname="Jans-MacBook-Air.local" tests="22" failures="0" errors="0" skipped="0" time="0.004454416">
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; should sort the values" time="0.001404833">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; up &gt; should work for xs" time="0.000205666">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; up &gt; should work for md" time="0.000143625">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; up &gt; should work for custom breakpoints" time="0.000066833">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; down &gt; should work" time="0.000498292">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; down &gt; should work for md" time="0.0000845">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; down &gt; should work for xs" time="0.000093917">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; down &gt; should accept a number" time="0.000053208">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; down &gt; should work for xl" time="0.000146291">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; down &gt; should work for custom breakpoints" time="0.000067875">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; down &gt; should work for the largest of custom breakpoints" time="0.000046083">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; between &gt; should work" time="0.00006125">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; between &gt; should accept numbers" time="0.000041083">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; between &gt; should work on largest breakpoints" time="0.00003975">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; between &gt; should work for custom breakpoints" time="0.000049125">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; only &gt; should work" time="0.000049333">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; only &gt; on xl should call up" time="0.000038959">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; only &gt; should work for custom breakpoints" time="0.000038458">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; not &gt; should work" time="0.000058417">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; not &gt; should invert up for xl" time="0.000039417">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; not &gt; should invert down for xs" time="0.000070083">
        </testcase>
        <testcase classname="packages/mui-system/src/createBreakpoints/createBreakpoints.test.js" name="createBreakpoints &gt; not &gt; should work for custom breakpoints" time="0.000080584">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/cssContainerQueries/cssContainerQueries.test.ts" timestamp="2025-09-10T11:25:37.348Z" hostname="Jans-MacBook-Air.local" tests="8" failures="0" errors="0" skipped="0" time="0.004335416">
        <testcase classname="packages/mui-system/src/cssContainerQueries/cssContainerQueries.test.ts" name="cssContainerQueries &gt; should return false if the shorthand is not a container query" time="0.001125375">
        </testcase>
        <testcase classname="packages/mui-system/src/cssContainerQueries/cssContainerQueries.test.ts" name="cssContainerQueries &gt; should return true if the shorthand is a container query" time="0.00028375">
        </testcase>
        <testcase classname="packages/mui-system/src/cssContainerQueries/cssContainerQueries.test.ts" name="cssContainerQueries &gt; should handle `@` without a breakpoint" time="0.000612042">
        </testcase>
        <testcase classname="packages/mui-system/src/cssContainerQueries/cssContainerQueries.test.ts" name="cssContainerQueries &gt; should have `up`, `down`, `between`, `only`, and `not` functions" time="0.000225917">
        </testcase>
        <testcase classname="packages/mui-system/src/cssContainerQueries/cssContainerQueries.test.ts" name="cssContainerQueries &gt; should be able to create named containment context" time="0.0002015">
        </testcase>
        <testcase classname="packages/mui-system/src/cssContainerQueries/cssContainerQueries.test.ts" name="cssContainerQueries &gt; should sort container queries" time="0.000369125">
        </testcase>
        <testcase classname="packages/mui-system/src/cssContainerQueries/cssContainerQueries.test.ts" name="cssContainerQueries &gt; should sort container queries with other unit" time="0.000165042">
        </testcase>
        <testcase classname="packages/mui-system/src/cssContainerQueries/cssContainerQueries.test.ts" name="cssContainerQueries &gt; should throw an error if shorthand is invalid" time="0.000330792">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/createTheme/applyStyles.test.ts" timestamp="2025-09-10T11:25:37.348Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.003555458">
        <testcase classname="packages/mui-system/src/createTheme/applyStyles.test.ts" name="applyStyles &gt; should apply styles for media prefers-color-scheme" time="0.001526834">
        </testcase>
        <testcase classname="packages/mui-system/src/createTheme/applyStyles.test.ts" name="applyStyles &gt; should apply styles for a class selector" time="0.000321583">
        </testcase>
        <testcase classname="packages/mui-system/src/createTheme/applyStyles.test.ts" name="applyStyles &gt; should apply styles for a data attribute selector" time="0.000146417">
        </testcase>
        <testcase classname="packages/mui-system/src/createTheme/applyStyles.test.ts" name="applyStyles &gt; should apply styles for a data attribute selector with &amp;" time="0.000129083">
        </testcase>
        <testcase classname="packages/mui-system/src/createTheme/applyStyles.test.ts" name="applyStyles &gt; should not apply styles if colorScheme does not exist" time="0.000277584">
        </testcase>
        <testcase classname="packages/mui-system/src/createTheme/applyStyles.test.ts" name="applyStyles &gt; should return the styles directly if selector is &amp;" time="0.00011175">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/createTheme/createSpacing.test.ts" timestamp="2025-09-10T11:25:37.349Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.005442708">
        <testcase classname="packages/mui-system/src/createTheme/createSpacing.test.ts" name="createSpacing &gt; should be configurable" time="0.002516791">
        </testcase>
        <testcase classname="packages/mui-system/src/createTheme/createSpacing.test.ts" name="createSpacing &gt; should support recursion" time="0.000373083">
        </testcase>
        <testcase classname="packages/mui-system/src/createTheme/createSpacing.test.ts" name="createSpacing &gt; should support a default value when no arguments are provided" time="0.000214958">
        </testcase>
        <testcase classname="packages/mui-system/src/createTheme/createSpacing.test.ts" name="createSpacing &gt; should support multiple arguments" time="0.00010175">
        </testcase>
        <testcase classname="packages/mui-system/src/createTheme/createSpacing.test.ts" name="createSpacing &gt; should support string arguments" time="0.000165959">
        </testcase>
        <testcase classname="packages/mui-system/src/createTheme/createSpacing.test.ts" name="createSpacing &gt; should support valid CSS unit" time="0.00008875">
        </testcase>
        <testcase classname="packages/mui-system/src/createTheme/createSpacing.test.ts" name="createSpacing &gt; warnings &gt; should warn for wrong input" time="0.000305291">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/createTheme/createTheme.test.js" timestamp="2025-09-10T11:25:37.349Z" hostname="Jans-MacBook-Air.local" tests="5" failures="0" errors="0" skipped="2" time="0.052349291">
        <testcase classname="packages/mui-system/src/createTheme/createTheme.test.js" name="createTheme &gt; system &gt; resolves system when used inside styled()" time="0.005704083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/createTheme/createTheme.test.js" name="createTheme &gt; system &gt; resolves system when used inside variants" time="0.001593875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-system/src/createTheme/createTheme.test.js" name="createTheme &gt; system &gt; apply correct styles" time="0.0018925">
        </testcase>
        <testcase classname="packages/mui-system/src/createTheme/createTheme.test.js" name="createTheme &gt; system &gt; apply correct styles with new theme" time="0.00084275">
        </testcase>
        <testcase classname="packages/mui-system/src/createTheme/createTheme.test.js" name="createTheme &gt; does not throw if used without ThemeProvider" time="0.039802417">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/cssGrid/cssGrid.test.js" timestamp="2025-09-10T11:25:37.349Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.00429925">
        <testcase classname="packages/mui-system/src/cssGrid/cssGrid.test.js" name="grid &gt; should use the spacing unit" time="0.001832917">
        </testcase>
        <testcase classname="packages/mui-system/src/cssGrid/cssGrid.test.js" name="grid &gt; should accept 0" time="0.000446333">
        </testcase>
        <testcase classname="packages/mui-system/src/cssGrid/cssGrid.test.js" name="grid &gt; should support breakpoints" time="0.000277875">
        </testcase>
        <testcase classname="packages/mui-system/src/cssGrid/cssGrid.test.js" name="grid &gt; should support container queries" time="0.000542917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" timestamp="2025-09-10T11:25:37.350Z" hostname="Jans-MacBook-Air.local" tests="31" failures="0" errors="0" skipped="0" time="0.412474875">
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Design System] CssVarsProvider &gt; has specified default colorScheme" time="0.049130083">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Design System] CssVarsProvider &gt; provide getColorSchemeSelector util" time="0.028232916">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Design System] CssVarsProvider &gt; can access to allColorSchemes" time="0.031284583">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Design System] CssVarsProvider &gt; can set new colorScheme" time="0.10676425">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Design System] CssVarsProvider &gt; display error if nonexistent colorScheme is set" time="0.010103917">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Design System] CssVarsProvider &gt; does not create css var if shouldSkipGeneratingVar return true" time="0.007279">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Design System] CssVarsProvider &gt; vars are merged from all colorSchemes regardless of selected color scheme" time="0.0157265">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Design System] CssVarsProvider &gt; [option]: `disableTransitionOnChange` &gt; disable all css transitions when switching between modes, given `disableTransitionOnChange` is true" time="0.022362">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Design System] CssVarsProvider &gt; [option]: `disableTransitionOnChange` &gt; disable all css transitions when switching between color schemes, given `disableTransitionOnChange` is true" time="0.015701541">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Design System] CssVarsProvider &gt; [option]: `disableTransitionOnChange` &gt; do not disable all css transitions when switching between modes, given `disableTransitionOnChange` is false" time="0.013389875">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Design System] CssVarsProvider &gt; [option]: `disableTransitionOnChange` &gt; do not disable all css transitions when switching between color schemes, given `disableTransitionOnChange` is false" time="0.0103065">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; DOM &gt; attach default dataset on html" time="0.007898458">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; DOM &gt; attach class on html" time="0.007421833">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; DOM &gt; attach data- on html" time="0.009493458">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; DOM &gt; use custom attribute" time="0.003706375">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; DOM &gt; does not crash if documentNode is null" time="0.002024875">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; DOM &gt; does not crash if colorSchemeNode is null" time="0.002189">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; Storage &gt; should save mode to localStorage" time="0.00621025">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; Storage &gt; should use mode from localStorage if exists" time="0.006433625">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; Storage &gt; use custom modeStorageKey" time="0.00390725">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; Storage &gt; support custom storage window" time="0.003511167">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; Unsupported color scheme &gt; use default color scheme if the storage value does not exist" time="0.005385084">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Application] Customization &gt; custom theme replace the default theme" time="0.005873792">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Application] Customization &gt; extend palette property in colorSchemes" time="0.003753875">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Application] Customization &gt; All `colorSchemes` is available in theme" time="0.007769958">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Application] Customization &gt; able to override css variable prefix" time="0.001952791">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Application] Customization &gt; does not take `theme.components` into account" time="0.002618208">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Application] Customization &gt; `mode` is `system` by default if `colorSchemes` contains all the default" time="0.002089208">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; [Application] Customization &gt; should use colorSchemes.palette.mode if `colorSchemes` does not contain all the default" time="0.002096458">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; Nested providers &gt; independent context" time="0.008914791">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createCssVarsProvider.test.js" name="createCssVarsProvider &gt; Nested providers &gt; themeId should not exist in the theme if not provided as a prop" time="0.005101916">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/cssVars/createGetCssVar.test.ts" timestamp="2025-09-10T11:25:37.351Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.003029416">
        <testcase classname="packages/mui-system/src/cssVars/createGetCssVar.test.ts" name="createGetCssVar &gt; default without prefix &gt; should return correct CSS var with default prefix" time="0.001002083">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createGetCssVar.test.ts" name="createGetCssVar &gt; default without prefix &gt; should return correct CSS var with prefix" time="0.000173417">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createGetCssVar.test.ts" name="createGetCssVar &gt; default without prefix &gt; should return correct CSS var with comma" time="0.000145334">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createGetCssVar.test.ts" name="createGetCssVar &gt; default without prefix &gt; support default value" time="0.0001605">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createGetCssVar.test.ts" name="createGetCssVar &gt; default without prefix &gt; support nested values" time="0.000185917">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createGetCssVar.test.ts" name="createGetCssVar &gt; able to custom prefix" time="0.000077916">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/createGetCssVar.test.ts" name="createGetCssVar &gt; does not add var() to CSS value" time="0.000260375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/cssVars/cssVarsParser.test.ts" timestamp="2025-09-10T11:25:37.352Z" hostname="Jans-MacBook-Air.local" tests="23" failures="0" errors="0" skipped="0" time="0.004586459">
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; assignNestedKeys &gt; does not account for null, undefined, non-object" time="0.001027834">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; assignNestedKeys &gt; build object with keys and value" time="0.000376583">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; assignNestedKeys &gt; does not override existing fields" time="0.00023575">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; assignNestedKeys &gt; create array given by `arrayKeys`" time="0.000105083">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; walkObjectDeep &gt; run callback at each key" time="0.000267834">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; walkObjectDeep &gt; does not throw if the value is null" time="0.000108125">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; walkObjectDeep &gt; skip the paths if `shouldSkipPaths` return true" time="0.000139458">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; css &gt; create css variables" time="0.000214833">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; css &gt; add prefix to variables" time="0.000204458">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; css &gt; use prefix if provided" time="0.000107291">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; css &gt; attach px to number value" time="0.000129917">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; css &gt; does not attach px to color channel values" time="0.000071584">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; css &gt; does not attach px to opacity values" time="0.00007225">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; css &gt; does not add px to unitless properties" time="0.000102834">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; css &gt; css is not created if shouldSkipGeneratingVar return true" time="0.000069291">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; css &gt; css can be produced from array" time="0.000067084">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; vars &gt; create same structure and attach variables" time="0.000087209">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; vars &gt; apply prefix to variables" time="0.000065084">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; vars &gt; var is not created if shouldSkipGeneratingVar return true" time="0.000069167">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; vars &gt; vars can be produced from array" time="0.000056708">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; vars &gt; varsWithDefaults are suffixed with px from array" time="0.00006825">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; vars &gt; should add a fallback value" time="0.000066375">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/cssVarsParser.test.ts" name="cssVarsParser &gt; does nothing if deep value is not string or number" time="0.000064375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/cssVars/prepareCssVars.test.ts" timestamp="2025-09-10T11:25:37.353Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.005995292">
        <testcase classname="packages/mui-system/src/cssVars/prepareCssVars.test.ts" name="prepareCssVars &gt; `getSelector` should always get a fresh copy of the css" time="0.003050458">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/prepareCssVars.test.ts" name="prepareCssVars &gt; delete css fields should not affect the next call" time="0.000647042">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/prepareCssVars.test.ts" name="prepareCssVars &gt; produce theme vars with defaults" time="0.000504">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/prepareCssVars.test.ts" name="prepareCssVars &gt; `generateThemeVars` should have the right structure" time="0.000322459">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/prepareCssVars.test.ts" name="prepareCssVars &gt; `generateThemeVars` should have the provided prefix" time="0.000129583">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/prepareCssVars.test.ts" name="prepareCssVars &gt; `generateStyleSheets` should have the right sequence" time="0.000152542">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/prepareCssVars.test.ts" name="prepareCssVars &gt; `generateStyleSheets` respect the `getSelector` input" time="0.000322">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/cssVars/prepareTypographyVars.test.ts" timestamp="2025-09-10T11:25:37.353Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.002731666">
        <testcase classname="packages/mui-system/src/cssVars/prepareTypographyVars.test.ts" name="prepareTypographyVars &gt; should prepare typography vars" time="0.002008542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" timestamp="2025-09-10T11:25:37.353Z" hostname="Jans-MacBook-Air.local" tests="34" failures="0" errors="0" skipped="0" time="0.098599">
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; does not trigger a re-render for a single color scheme" time="0.016389916">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; trigger a re-render for a multi color schemes" time="0.005862791">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; [noSsr] does not trigger a re-render" time="0.003191">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; getColorScheme &gt; use lightColorScheme given mode=light" time="0.000367208">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; getColorScheme &gt; use darkColorScheme given mode=dark" time="0.000332">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; getColorScheme &gt; use lightColorScheme given mode=system, systemMode=light" time="0.000272292">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; getColorScheme &gt; use lightColorScheme given mode=system, systemMode=dark" time="0.000295583">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; getColorScheme &gt; return undefined if no conditions are matched" time="0.000480417">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Client &gt; has default mode=`light`" time="0.004851625">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Client &gt; defaultMode=`dark`" time="0.002075542">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Client &gt; defaultMode=`system`" time="0.001850542">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Client &gt; change to `dark` mode" time="0.004943084">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Client &gt; change to `system` mode" time="0.002019792">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Client &gt; reset mode" time="0.005889333">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Client &gt; change colorScheme when mode is `light` should change `lightColorScheme`" time="0.00199975">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Client &gt; change colorScheme when mode is `system` should look at systemMode" time="0.001440625">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Client &gt; change both light &amp; dark color scheme at the same time" time="0.002743917">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Client &gt; change only the mode specified as key" time="0.003996791">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Client &gt; able to setMode and setColorScheme in the same event" time="0.001455833">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Client &gt; reset colorScheme" time="0.00239025">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Client &gt; reset light &amp; dark colorScheme" time="0.003298583">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Storage &gt; save dark mode" time="0.001435209">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Storage &gt; save lightColorScheme and darkColorScheme" time="0.00140275">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Storage &gt; use mode from localStorage if exists" time="0.003993208">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Storage &gt; use mode &amp; colorScheme from localStorage if exists" time="0.006804875">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Storage &gt; storage mode changes from `light` to `dark`" time="0.001596834">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Storage &gt; storage mode changes from `light` to `auto`" time="0.002284458">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Storage &gt; storage mode is deleted" time="0.001279792">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Storage &gt; storage lightColorScheme &amp; darkColorScheme changes" time="0.001747833">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Storage &gt; reset mode in storage" time="0.001918416">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Storage &gt; reset color scheme in storage" time="0.0042715">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Custom storage &gt; use custom storage" time="0.001412334">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Custom storage &gt; handle subscription" time="0.001327792">
        </testcase>
        <testcase classname="packages/mui-system/src/cssVars/useCurrentColorScheme.test.js" name="useCurrentColorScheme &gt; Custom storage &gt; able to disable storage manager" time="0.0011145">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/merge/merge.test.js" timestamp="2025-09-10T11:25:37.355Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.004524541">
        <testcase classname="packages/mui-system/src/merge/merge.test.js" name="merge &gt; should merge deep" time="0.002840875">
        </testcase>
        <testcase classname="packages/mui-system/src/merge/merge.test.js" name="merge &gt; should merge repetitive styles" time="0.000362333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/palette/palette.test.js" timestamp="2025-09-10T11:25:37.355Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.002740083">
        <testcase classname="packages/mui-system/src/palette/palette.test.js" name="palette &gt; should treat grey as CSS color" time="0.001647209">
        </testcase>
        <testcase classname="packages/mui-system/src/palette/palette.test.js" name="palette &gt; should treat grey.100 as theme color" time="0.000308417">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/propsToClassKey/propsToClassKey.test.js" timestamp="2025-09-10T11:25:37.355Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.002576542">
        <testcase classname="packages/mui-system/src/propsToClassKey/propsToClassKey.test.js" name="propsToClassKey &gt; should return the variant value as string" time="0.000918917">
        </testcase>
        <testcase classname="packages/mui-system/src/propsToClassKey/propsToClassKey.test.js" name="propsToClassKey &gt; should combine the variant with other props" time="0.000344875">
        </testcase>
        <testcase classname="packages/mui-system/src/propsToClassKey/propsToClassKey.test.js" name="propsToClassKey &gt; should append the props after the variant in alphabetical order" time="0.000146125">
        </testcase>
        <testcase classname="packages/mui-system/src/propsToClassKey/propsToClassKey.test.js" name="propsToClassKey &gt; should not prefix the color prop" time="0.000072792">
        </testcase>
        <testcase classname="packages/mui-system/src/propsToClassKey/propsToClassKey.test.js" name="propsToClassKey &gt; should work without variant in props" time="0.00007325">
        </testcase>
        <testcase classname="packages/mui-system/src/propsToClassKey/propsToClassKey.test.js" name="propsToClassKey &gt; should not capitalize the first prop" time="0.00013475">
        </testcase>
        <testcase classname="packages/mui-system/src/propsToClassKey/propsToClassKey.test.js" name="propsToClassKey &gt; should work with non string properties" time="0.000076667">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/spacing/spacing.test.js" timestamp="2025-09-10T11:25:37.356Z" hostname="Jans-MacBook-Air.local" tests="48" failures="0" errors="0" skipped="0" time="0.009955125">
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; themeTransformer &gt; should have a default unit value" time="0.00148325">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; themeTransformer &gt; should be able to customize the unit value" time="0.000303625">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; themeTransformer &gt; should be able to use string value" time="0.000207042">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; themeTransformer &gt; should be able to use string value with negative amount" time="0.000096">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; themeTransformer &gt; should use the provided value directly if theme.spacing is a string" time="0.000131625">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; warnings &gt; should warn if the value overflow" time="0.00124175">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; warnings &gt; should warn if the theme transformer is invalid" time="0.000523542">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; warnings &gt; should warn if non integer value is used with theme.spacing defined as array" time="0.00013025">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; should accept non integer value" time="0.000185625">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; should support negative values" time="0.000090667">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; should support composes values" time="0.000091167">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; should support string" time="0.000061791">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; should support CSS variables single value" time="0.000120292">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; should support CSS variables single value as decimal" time="0.000061625">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; should support CSS variables single value more than 1" time="0.000056458">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; should support CSS variables single value as zero" time="0.000051958">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; should support CSS variables array" time="0.000059334">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; should support CSS variables array with negative value" time="0.000054583">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; should support CSS variables array with zero value" time="0.000054291">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; should support breakpoints" time="0.000169292">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; should support container queries" time="0.000222042">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; should support full version" time="0.000116625">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; spacing &gt; should support string values" time="0.000057208">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; margin &gt; themeTransformer &gt; should have a default unit value" time="0.000067916">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; margin &gt; themeTransformer &gt; should be able to customize the unit value" time="0.00011125">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; margin &gt; warnings &gt; should warn if the value overflow" time="0.00008325">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; margin &gt; warnings &gt; should warn if the theme transformer is invalid" time="0.000076083">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; margin &gt; warnings &gt; should warn if non integer value is used with theme.spacing defined as array" time="0.000135791">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; margin &gt; should accept non integer value" time="0.000056542">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; margin &gt; should support negative values" time="0.000050333">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; margin &gt; should support composes values" time="0.000064208">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; margin &gt; should support string" time="0.000056167">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; margin &gt; should support breakpoints" time="0.000092916">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; margin &gt; should support full version" time="0.0001075">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; margin &gt; should support string values" time="0.000059208">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; padding &gt; themeTransformer &gt; should have a default unit value" time="0.000061209">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; padding &gt; themeTransformer &gt; should be able to customize the unit value" time="0.00010225">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; padding &gt; warnings &gt; should warn if the value overflow" time="0.000126417">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; padding &gt; warnings &gt; should warn if the theme transformer is invalid" time="0.000068833">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; padding &gt; warnings &gt; should warn if non integer value is used with theme.spacing defined as array" time="0.000125083">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; padding &gt; should accept non integer value" time="0.000053208">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; padding &gt; should support negative values" time="0.000048083">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; padding &gt; should support composes values" time="0.000052959">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; padding &gt; should support string" time="0.000049625">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; padding &gt; should support breakpoints" time="0.000372583">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; padding &gt; should support full version" time="0.000940958">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; padding &gt; should support string values" time="0.000075875">
        </testcase>
        <testcase classname="packages/mui-system/src/spacing/spacing.test.js" name="system spacing &gt; should allow to conditionally set a value" time="0.000088583">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/createBox/createBox.test.js" timestamp="2025-09-10T11:25:37.358Z" hostname="Jans-MacBook-Air.local" tests="11" failures="0" errors="0" skipped="0" time="0.130194209">
        <testcase classname="packages/mui-system/src/createBox/createBox.test.js" name="createBox &gt; should work" time="0.024822792">
        </testcase>
        <testcase classname="packages/mui-system/src/createBox/createBox.test.js" name="createBox &gt; should use defaultTheme if provided" time="0.061637083">
        </testcase>
        <testcase classname="packages/mui-system/src/createBox/createBox.test.js" name="createBox &gt; should use theme from Context if provided" time="0.010408042">
        </testcase>
        <testcase classname="packages/mui-system/src/createBox/createBox.test.js" name="createBox &gt; able to customize default className" time="0.005232625">
        </testcase>
        <testcase classname="packages/mui-system/src/createBox/createBox.test.js" name="createBox &gt; use generateClassName if provided" time="0.00768375">
        </testcase>
        <testcase classname="packages/mui-system/src/createBox/createBox.test.js" name="createBox &gt; generateClassName should receive defaultClassName if provided" time="0.003129334">
        </testcase>
        <testcase classname="packages/mui-system/src/createBox/createBox.test.js" name="createBox &gt; should accept sx prop" time="0.004935125">
        </testcase>
        <testcase classname="packages/mui-system/src/createBox/createBox.test.js" name="createBox &gt; should call styleFunctionSx once" time="0.004550166">
        </testcase>
        <testcase classname="packages/mui-system/src/createBox/createBox.test.js" name="createBox &gt; should still call styleFunctionSx once" time="0.0028015">
        </testcase>
        <testcase classname="packages/mui-system/src/createBox/createBox.test.js" name="createBox &gt; overridable via `component` prop" time="0.001565541">
        </testcase>
        <testcase classname="packages/mui-system/src/createBox/createBox.test.js" name="createBox &gt; should not have `as` and `theme` attribute spread to DOM" time="0.001005292">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/style/style.test.js" timestamp="2025-09-10T11:25:37.359Z" hostname="Jans-MacBook-Air.local" tests="10" failures="0" errors="0" skipped="0" time="0.004794292">
        <testcase classname="packages/mui-system/src/style/style.test.js" name="style &gt; should work" time="0.001699833">
        </testcase>
        <testcase classname="packages/mui-system/src/style/style.test.js" name="style &gt; should support breakpoints" time="0.000472667">
        </testcase>
        <testcase classname="packages/mui-system/src/style/style.test.js" name="style &gt; should support array theme value" time="0.000150041">
        </testcase>
        <testcase classname="packages/mui-system/src/style/style.test.js" name="style &gt; should fallback to value if theme value is an array and index missing" time="0.000117166">
        </testcase>
        <testcase classname="packages/mui-system/src/style/style.test.js" name="style &gt; should transform the prop correctly" time="0.000187459">
        </testcase>
        <testcase classname="packages/mui-system/src/style/style.test.js" name="style &gt; should transform the property correctly using theme" time="0.000190417">
        </testcase>
        <testcase classname="packages/mui-system/src/style/style.test.js" name="style &gt; should fallback to composed theme keys" time="0.000193708">
        </testcase>
        <testcase classname="packages/mui-system/src/style/style.test.js" name="style &gt; vars &gt; should use value from vars" time="0.000098292">
        </testcase>
        <testcase classname="packages/mui-system/src/style/style.test.js" name="style &gt; vars &gt; should automatically use value from vars if vars is defined" time="0.000206458">
        </testcase>
        <testcase classname="packages/mui-system/src/style/style.test.js" name="style &gt; vars &gt; should use theme value if the var does not exist" time="0.000106333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/styled/styled.test.js" timestamp="2025-09-10T11:25:37.359Z" hostname="Jans-MacBook-Air.local" tests="34" failures="0" errors="0" skipped="0" time="0.137968583">
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; should work" time="0.045568458">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; should work when styles are object" time="0.010033833">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; should use defaultTheme if no theme is provided" time="0.004525666">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; should use defaultTheme if no theme is provided when styles are object" time="0.00423325">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; should use theme from context if available" time="0.005283458">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; should use theme from context if available when styles are object" time="0.002941666">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; dynamic styles &gt; can adapt styles to props" time="0.002976625">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; dynamic styles &gt; can adapt styles to props when styles are object" time="0.002408209">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; should support override as long as a resolver is provided" time="0.00361525">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; should work with specified muiOptions" time="0.001982834">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; should work with specified muiOptions when styles are object" time="0.0015425">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; overrides should be respected" time="0.002210166">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; overrides should be respected when styles are object" time="0.0024865">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; overrides should be respected when prop is specified" time="0.002184291">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; overrides should be respected when prop is specified when styles are object" time="0.001992417">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; variants should be skipped for non root slots" time="0.005821041">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; variants should not be skipped if overridesResolver is not defined" time="0.002755166">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; variants should respect skipVariantsResolver if defined" time="0.002005041">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; variants should win over overrides" time="0.001954167">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; variants should win over overrides when styles are object" time="0.002021125">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; styled wrapper should win over variants" time="0.00202025">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; styled wrapper should win over variants when styles are object" time="0.001889084">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; should support variants with props callbacks" time="0.00289625">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; should resolve the sx prop of object type" time="0.002465334">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; should resolve the sx prop of function type" time="0.002198458">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; should resolve the sx prop of object type when styles are object" time="0.002067">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; should resolve the sx prop of function type when styles are object" time="0.001870917">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; should resolve the theme.unstable_sx when used in an array styles" time="0.002314333">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; should resolve the theme.unstable_sx when used in an pseudo object" time="0.002203791">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; should respect the skipSx option" time="0.003331">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; should set displayName properly" time="0.000256625">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; should set displayName as name + slot if both are specified" time="0.00014075">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; should set the className when generating the classes" time="0.001251459">
        </testcase>
        <testcase classname="packages/mui-system/src/styled/styled.test.js" name="styled &gt; muiOptions &gt; should set the className as root if no slot is specified" time="0.002599625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/styleFunctionSx/extendSxProp.test.js" timestamp="2025-09-10T11:25:37.361Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.005803833">
        <testcase classname="packages/mui-system/src/styleFunctionSx/extendSxProp.test.js" name="extendSxProp &gt; should add system props in the sx prop" time="0.002718625">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/extendSxProp.test.js" name="extendSxProp &gt; should merge system props with the sx prop" time="0.000375334">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/extendSxProp.test.js" name="extendSxProp &gt; should not process non system props" time="0.00022525">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/extendSxProp.test.js" name="extendSxProp &gt; should merge system props with the sx prop of function type" time="0.000196083">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/extendSxProp.test.js" name="extendSxProp &gt; should pass params to sx" time="0.000157458">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/extendSxProp.test.js" name="extendSxProp &gt; should not process non system props with the sx prop of function type" time="0.000115">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/extendSxProp.test.js" name="extendSxProp &gt; neglect sx result that is not plain object" time="0.000598917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" timestamp="2025-09-10T11:25:37.361Z" hostname="Jans-MacBook-Air.local" tests="26" failures="0" errors="0" skipped="0" time="0.010509625">
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; system &gt; resolves system " time="0.004214542">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; system &gt; resolves system typography" time="0.000391333">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; system &gt; allow values to be `null` or `undefined`" time="0.000176167">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; resolves non system CSS properties if specified" time="0.000385083">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; breakpoints &gt; resolves breakpoints array" time="0.000160458">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; breakpoints &gt; resolves breakpoints object" time="0.000122417">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; breakpoints &gt; merges multiple breakpoints object" time="0.000167334">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; breakpoints &gt; writes breakpoints in correct order" time="0.000223958">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; container queries &gt; resolves queries object" time="0.000464792">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; container queries &gt; merges multiple queries object" time="0.000239667">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; container queries &gt; writes queries in correct order" time="0.000203125">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; theme callback &gt; works on CSS properties" time="0.000076416">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; theme callback &gt; works on pseudo selectors" time="0.000323333">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; theme callback &gt; works on nested selectors" time="0.00022225">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; `sx` of function type &gt; resolves system padding" time="0.000399166">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; `sx` of function type &gt; resolves theme object" time="0.000164125">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; `sx` of function type &gt; resolves a mix of theme object and system padding" time="0.000186958">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; `sx` of array type &gt; resolves system props" time="0.000216542">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; `sx` of array type &gt; works with function inside array" time="0.0000915">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; `sx` of array type &gt; works with media query syntax" time="0.000221458">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; `sx` of array type &gt; does not crash if the result is undefined" time="0.000269167">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; Modular CSS layers &gt; should wrapped in @layer" time="0.000143667">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; Modular CSS layers &gt; should work with array type" time="0.000084666">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; Modular CSS layers &gt; should work with function type" time="0.000082125">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; Modular CSS layers &gt; should work with nested sx" time="0.000084917">
        </testcase>
        <testcase classname="packages/mui-system/src/styleFunctionSx/styleFunctionSx.test.js" name="styleFunctionSx &gt; Modular CSS layers &gt; should work with nested sx and function" time="0.000081958">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/useThemeProps/getThemeProps.test.js" timestamp="2025-09-10T11:25:37.362Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.002507333">
        <testcase classname="packages/mui-system/src/useThemeProps/getThemeProps.test.js" name="getThemeProps &gt; should ignore empty theme" time="0.001257792">
        </testcase>
        <testcase classname="packages/mui-system/src/useThemeProps/getThemeProps.test.js" name="getThemeProps &gt; should ignore different component" time="0.000351959">
        </testcase>
        <testcase classname="packages/mui-system/src/useThemeProps/getThemeProps.test.js" name="getThemeProps &gt; should return the props" time="0.000233375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-system/src/sizing/sizing.test.js" timestamp="2025-09-10T11:25:37.363Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.00309575">
        <testcase classname="packages/mui-system/src/sizing/sizing.test.js" name="sizing &gt; sizing" time="0.001547875">
        </testcase>
        <testcase classname="packages/mui-system/src/sizing/sizing.test.js" name="sizing &gt; should work with 0" time="0.000369">
        </testcase>
        <testcase classname="packages/mui-system/src/sizing/sizing.test.js" name="sizing &gt; maxWidth &gt; should work with custom units" time="0.000549709">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/index.test.js" timestamp="2025-09-10T11:25:37.363Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.01005575">
        <testcase classname="packages/mui-material/src/index.test.js" name="material-ui &gt; should have exports" time="0.001072791">
        </testcase>
        <testcase classname="packages/mui-material/src/index.test.js" name="material-ui &gt; should not have undefined exports" time="0.006811959">
        </testcase>
        <testcase classname="packages/mui-material/src/index.test.js" name="material-ui &gt; should reexport certain members from @mui/base" time="0.000812416">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/test/integration/DialogIntegration.test.js" timestamp="2025-09-10T11:25:37.363Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.172480291">
        <testcase classname="packages/mui-material/test/integration/DialogIntegration.test.js" name="&lt;Dialog /&gt; integration &gt; is automatically labelled by its DialogTitle" time="0.145466333">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/DialogIntegration.test.js" name="&lt;Dialog /&gt; integration &gt; can be manually labelled" time="0.025669">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/test/integration/Menu.test.js" timestamp="2025-09-10T11:25:37.363Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="0" time="0.435472917">
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; is part of the DOM by default but hidden" time="0.078424834">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; does not gain any focus when mounted " time="0.018957208">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; should focus the first item on open" time="0.053285458">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; changes focus according to keyboard navigation" time="0.037098292">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; focuses the selected item when opening" time="0.039492667">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; Menu variant differences &gt; [variant=menu] will focus the first item if nothing is selected" time="0.028952167">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; Menu variant differences &gt; [variant=selectedMenu] will focus the first item if nothing is selected" time="0.010882">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; Menu variant differences &gt; [variant=menu] prioritizes `autoFocus` on `MenuItem`" time="0.017375875">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; Menu variant differences &gt; [variant=menu] ignores `selected` on `MenuItem`" time="0.013297042">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; Menu variant differences &gt; [variant=selectedMenu] focuses the `selected` `MenuItem`" time="0.011686708">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; Menu variant differences &gt; [variant=selectedMenu] allows overriding `tabIndex` on `MenuItem`" time="0.012134959">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; Menu variant differences &gt; [variant=selectedMenu] focuses the first non-disabled item if the selected menuitem is disabled" time="0.016289334">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; Menu variant differences &gt; [variant=selectedMenu] focuses no part of the menu when `autoFocus={false}`" time="0.011459166">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; Menu variant differences &gt; [variant=selectedMenu] focuses nothing when it is closed and mounted" time="0.009780792">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; Menu variant differences &gt; [variant=selectedMenu] focuses the selected item when opening when it was already mounted" time="0.024958084">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; closes the menu when Tabbing while the list is active" time="0.036695792">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Menu.test.js" name="&lt;Menu /&gt; integration &gt; closes the menu when the backdrop is clicked" time="0.013414834">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/test/integration/MenuList.test.js" timestamp="2025-09-10T11:25:37.364Z" hostname="Jans-MacBook-Air.local" tests="32" failures="0" errors="0" skipped="2" time="0.367863291">
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; the MenuItems have the `menuitem` role" time="0.078136042">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; keyboard controls and tabIndex manipulation &gt; the specified item should be in tab order while the rest is focusable" time="0.01613175">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; keyboard controls and tabIndex manipulation &gt; focuses the specified item on mount" time="0.014126917">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; keyboard controls and tabIndex manipulation &gt; should select the last item when pressing up if the first item is focused" time="0.026051958">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; keyboard controls and tabIndex manipulation &gt; should select the second item when pressing down if the first item is selected" time="0.018765125">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; keyboard controls and tabIndex manipulation &gt; should still be focused and focusable when going back and forth" time="0.012533291">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; keyboard controls and tabIndex manipulation &gt; should leave tabIndex on the first item after blur" time="0.010586375">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; keyboard controls and tabIndex manipulation &gt; can imperatively focus the first item" time="0.0096385">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; keyboard controls and tabIndex manipulation &gt; down arrow can go to all items while not changing tabIndex" time="0.010043208">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; keyboard controls and tabIndex manipulation &gt; when a modifier key is pressed &gt; should not move the focus" time="0.008295542">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; keyboard controls and tabIndex manipulation &gt; when a modifier key is pressed &gt; should call the onKeyDown and not prevent default on the event" time="0.007102042">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; keyboard controls and tabIndex manipulation - preselected item &gt; should auto focus the second item" time="0.006022584">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; keyboard controls and tabIndex manipulation - preselected item &gt; should focus next item on ArrowDown" time="0.009371625">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; keyboard controls and tabIndex manipulation - preselected item, no item autoFocus &gt; should focus the first item if no item is focused when pressing ArrowDown" time="0.006583625">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; keyboard controls and tabIndex manipulation - preselected item, no item autoFocus &gt; should focus the third item if no item is focused when pressing ArrowUp" time="0.006329042">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; initial focus is controlled by setting the selected prop when `autoFocusItem` is enabled" time="0.009114208">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; MenuList with disableListWrap &gt; should not wrap focus with ArrowUp from first" time="0.005228667">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; MenuList with disableListWrap &gt; should not wrap focus with ArrowDown from last" time="0.008469292">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; should skip divider and disabled menu item" time="0.015874375">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; should stay on a single item if it is the only focusable one" time="0.007673709">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; should keep focus on the menu if all items are disabled" time="0.006280209">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; should allow focus on disabled items when disabledItemsFocusable=true" time="0.017927958">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; MenuList text-based keyboard controls &gt; selects the first item starting with the character" time="0.005211917">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; MenuList text-based keyboard controls &gt; should cycle through items when repeating initial character" time="0.016609333">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; MenuList text-based keyboard controls &gt; selects the next item starting with the typed character" time="0.004854125">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; MenuList text-based keyboard controls &gt; should not get focusVisible class on click" time="0.00034925">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; MenuList text-based keyboard controls &gt; should not move focus when no match" time="0.004186291">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; MenuList text-based keyboard controls &gt; should not move focus when keys match current focus" time="0.004129166">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; MenuList text-based keyboard controls &gt; should not move focus if focus starts on descendant and the key doesn&apos;t match" time="0.004157417">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; MenuList text-based keyboard controls &gt; matches rapidly typed text" time="0.009094042">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; MenuList text-based keyboard controls &gt; time &gt; should reset the character buffer after 500ms" time="0.006959958">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/MenuList.test.js" name="&lt;MenuList&gt; integration &gt; MenuList text-based keyboard controls &gt; should match ignoring hidden text" time="0.000221834">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/test/integration/NestedMenu.test.js" timestamp="2025-09-10T11:25:37.366Z" hostname="Jans-MacBook-Air.local" tests="5" failures="0" errors="0" skipped="0" time="0.178258583">
        <testcase classname="packages/mui-material/test/integration/NestedMenu.test.js" name="&lt;NestedMenu&gt; integration &gt; should not be open" time="0.026346708">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/NestedMenu.test.js" name="&lt;NestedMenu&gt; integration &gt; should focus the first item of the first menu when nothing has been selected" time="0.080183875">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/NestedMenu.test.js" name="&lt;NestedMenu&gt; integration &gt; should focus the first item of the second menu when nothing has been selected" time="0.019194416">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/NestedMenu.test.js" name="&lt;NestedMenu&gt; integration &gt; should open the first menu after it was closed" time="0.026170917">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/NestedMenu.test.js" name="&lt;NestedMenu&gt; integration &gt; should be able to open second menu again" time="0.025269459">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/test/integration/PopperChildrenLayout.test.js" timestamp="2025-09-10T11:25:37.366Z" hostname="Jans-MacBook-Air.local" tests="18" failures="0" errors="0" skipped="18" time="0">
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; autoFocus does not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; focus during layout effect does not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; focus during passive effects do not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; in TransitionComponent Collapse &gt; autoFocus does not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; in TransitionComponent Collapse &gt; focus during layout effect does not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; in TransitionComponent Collapse &gt; focus during passive effects do not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; in TransitionComponent Fade &gt; autoFocus does not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; in TransitionComponent Fade &gt; focus during layout effect does not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; in TransitionComponent Fade &gt; focus during passive effects do not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; in TransitionComponent Grow &gt; autoFocus does not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; in TransitionComponent Grow &gt; focus during layout effect does not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; in TransitionComponent Grow &gt; focus during passive effects do not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; in TransitionComponent Slide &gt; autoFocus does not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; in TransitionComponent Slide &gt; focus during layout effect does not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; in TransitionComponent Slide &gt; focus during passive effects do not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; in TransitionComponent Zoom &gt; autoFocus does not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; in TransitionComponent Zoom &gt; focus during layout effect does not scroll" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/test/integration/PopperChildrenLayout.test.js" name="&lt;Popper /&gt; &gt; children layout integration &gt; in TransitionComponent Zoom &gt; focus during passive effects do not scroll" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/test/integration/Select.test.js" timestamp="2025-09-10T11:25:37.367Z" hostname="Jans-MacBook-Air.local" tests="5" failures="0" errors="0" skipped="0" time="0.301731917">
        <testcase classname="packages/mui-material/test/integration/Select.test.js" name="&lt;Select&gt; integration &gt; with Dialog &gt; should focus the selected item" time="0.159630209">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Select.test.js" name="&lt;Select&gt; integration &gt; with Dialog &gt; should be able to change the selected item" time="0.0616425">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Select.test.js" name="&lt;Select&gt; integration &gt; with label &gt; requires `id` and `labelId` for a proper accessible name" time="0.016642834">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Select.test.js" name="&lt;Select&gt; integration &gt; with label &gt; is displayed as focused while open" time="0.040132375">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/Select.test.js" name="&lt;Select&gt; integration &gt; with label &gt; does not stays in an active state if an open action did not actually open" time="0.022622917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/test/integration/TableCell.test.js" timestamp="2025-09-10T11:25:37.368Z" hostname="Jans-MacBook-Air.local" tests="11" failures="0" errors="0" skipped="0" time="0.095529667">
        <testcase classname="packages/mui-material/test/integration/TableCell.test.js" name="&lt;TableRow&gt; integration &gt; should render a th with the head class when in the context of a table head" time="0.035732667">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/TableCell.test.js" name="&lt;TableRow&gt; integration &gt; should render specified scope attribute even when in the context of a table head" time="0.012991833">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/TableCell.test.js" name="&lt;TableRow&gt; integration &gt; should render a th with the footer class when in the context of a table footer" time="0.005591959">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/TableCell.test.js" name="&lt;TableRow&gt; integration &gt; should render with the footer class when in the context of a table footer" time="0.005075666">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/TableCell.test.js" name="&lt;TableRow&gt; integration &gt; should render with the head class when variant is head, overriding context" time="0.006637958">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/TableCell.test.js" name="&lt;TableRow&gt; integration &gt; should render without head class when variant is body, overriding context" time="0.003347917">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/TableCell.test.js" name="&lt;TableRow&gt; integration &gt; should render without footer class when variant is body, overriding context" time="0.0053795">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/TableCell.test.js" name="&lt;TableRow&gt; integration &gt; should render with the footer class when variant is footer, overriding context" time="0.01054675">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/TableCell.test.js" name="&lt;TableRow&gt; integration &gt; does not set `role` when `component` prop is set and used in the context of table head" time="0.003677667">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/TableCell.test.js" name="&lt;TableRow&gt; integration &gt; does not set `role` when `component` prop is set and used in the context of table body " time="0.002520542">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/TableCell.test.js" name="&lt;TableRow&gt; integration &gt; does not set `role` when `component` prop is set and used in the context of table footer " time="0.002798625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/test/integration/TableRow.test.js" timestamp="2025-09-10T11:25:37.368Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.093277083">
        <testcase classname="packages/mui-material/test/integration/TableRow.test.js" name="&lt;TableRow&gt; integration &gt; should render with the head class when in the context of a table head" time="0.082174708">
        </testcase>
        <testcase classname="packages/mui-material/test/integration/TableRow.test.js" name="&lt;TableRow&gt; integration &gt; should render with the footer class when in the context of a table footer" time="0.010184583">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Accordion/Accordion.test.js" timestamp="2025-09-10T11:25:37.368Z" hostname="Jans-MacBook-Air.local" tests="59" failures="0" errors="0" skipped="7" time="0.470949292">
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.037064834">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.009302417">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.009946667">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.010575291">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition prop" time="0.0100655">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; sets custom properties on the heading slot&apos;s element with the slotProps.heading prop" time="0.007692208">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.heading with the built-in ones" time="0.005410875">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.005827459">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.010010959">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; sets custom properties on the region slot&apos;s element with the slotProps.region prop" time="0.005405291">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.region with the built-in ones" time="0.005553291">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback" time="0.00485075">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; sets custom properties on the heading slot&apos;s element with the slotProps.heading callback" time="0.00729275">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004848541">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; sets custom properties on the region slot&apos;s element with the slotProps.region callback" time="0.006776125">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback using the ownerState" time="0.006428709">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; sets custom properties on the heading slot&apos;s element with the slotProps.heading callback using the ownerState" time="0.00516275">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.006524375">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; sets custom properties on the region slot&apos;s element with the slotProps.region callback using the ownerState" time="0.004322917">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; allows overriding the transition slot with a component using the slots.transition prop" time="0.003957">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; allows overriding the heading slot with a component using the slots.heading prop" time="0.006380459">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; allows overriding the heading slot with an element using the slots.heading prop" time="0.005144416">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003935583">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.006589375">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; allows overriding the region slot with a component using the slots.region prop" time="0.006665625">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; allows overriding the region slot with an element using the slots.region prop" time="0.008055167">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.009634292">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004874541">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000416084">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000784541">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.00204825">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000213375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000150625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.006233584">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; should render and not be controlled" time="0.00430975">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; should handle defaultExpanded prop" time="0.00414025">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; should render the summary and collapse elements" time="0.056541666">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; should be controlled" time="0.010775417">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; should call onChange when clicking the summary element" time="0.0101105">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; when controlled should call the onChange" time="0.0049775">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; when undefined onChange and controlled should not call the onChange" time="0.007982875">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; when disabled should have the disabled class" time="0.009249792">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; should handle the TransitionComponent prop" time="0.011967042">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; should handle the `square` prop" time="0.008749">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; when `square` prop is passed, it should not have the rounded class" time="0.004070708">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; prop: children &gt; first child &gt; requires at least one child" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; prop: children &gt; first child &gt; needs a valid element as the first child" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; prop: children &gt; should accept empty content" time="0.007222">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; should warn when switching from controlled to uncontrolled" time="0.004900833">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; should warn when switching between uncontrolled to controlled" time="0.004047625">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; prop: TransitionProps &gt; should apply properties to the Transition component" time="0.008824833">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; details unmounting behavior &gt; does not unmount by default" time="0.006517167">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; details unmounting behavior &gt; unmounts if opted in via slotProps.transition" time="0.006350042">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; should not forward ownerState prop to the underlying DOM element when using transition slot &gt; Collapse" time="0.02490425">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; should not forward ownerState prop to the underlying DOM element when using transition slot &gt; Fade" time="0.006092292">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; should not forward ownerState prop to the underlying DOM element when using transition slot &gt; Grow" time="0.00755275">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; should not forward ownerState prop to the underlying DOM element when using transition slot &gt; Slide" time="0.012437708">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; should not forward ownerState prop to the underlying DOM element when using transition slot &gt; Zoom" time="0.010859334">
        </testcase>
        <testcase classname="packages/mui-material/src/Accordion/Accordion.test.js" name="&lt;Accordion /&gt; &gt; should allow custom role for region slot via slotProps" time="0.007950583">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/AccordionActions/AccordionActions.test.js" timestamp="2025-09-10T11:25:37.372Z" hostname="Jans-MacBook-Air.local" tests="13" failures="0" errors="0" skipped="6" time="0.060191083">
        <testcase classname="packages/mui-material/src/AccordionActions/AccordionActions.test.js" name="&lt;AccordionActions /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.024730833">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionActions/AccordionActions.test.js" name="&lt;AccordionActions /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005279042">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionActions/AccordionActions.test.js" name="&lt;AccordionActions /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004532542">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionActions/AccordionActions.test.js" name="&lt;AccordionActions /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00427025">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionActions/AccordionActions.test.js" name="&lt;AccordionActions /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006365167">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionActions/AccordionActions.test.js" name="&lt;AccordionActions /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002009125">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionActions/AccordionActions.test.js" name="&lt;AccordionActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000479209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionActions/AccordionActions.test.js" name="&lt;AccordionActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000465709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionActions/AccordionActions.test.js" name="&lt;AccordionActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.001193792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionActions/AccordionActions.test.js" name="&lt;AccordionActions /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000384334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionActions/AccordionActions.test.js" name="&lt;AccordionActions /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000198458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionActions/AccordionActions.test.js" name="&lt;AccordionActions /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.007698083">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionActions/AccordionActions.test.js" name="&lt;AccordionActions /&gt; &gt; should apply margin to all children but the first one" time="0.00094625">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/AccordionDetails/AccordionDetails.test.js" timestamp="2025-09-10T11:25:37.373Z" hostname="Jans-MacBook-Air.local" tests="11" failures="0" errors="0" skipped="3" time="0.067746084">
        <testcase classname="packages/mui-material/src/AccordionDetails/AccordionDetails.test.js" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.031142333">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionDetails/AccordionDetails.test.js" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.008563417">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionDetails/AccordionDetails.test.js" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003655">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionDetails/AccordionDetails.test.js" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008165083">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionDetails/AccordionDetails.test.js" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005785916">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionDetails/AccordionDetails.test.js" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001969333">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionDetails/AccordionDetails.test.js" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000407333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionDetails/AccordionDetails.test.js" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000419584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionDetails/AccordionDetails.test.js" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.00048075">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionDetails/AccordionDetails.test.js" name="&lt;AccordionDetails /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003141083">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionDetails/AccordionDetails.test.js" name="&lt;AccordionDetails /&gt; &gt; should render a children element" time="0.002091084">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Alert/Alert.test.js" timestamp="2025-09-10T11:25:37.373Z" hostname="Jans-MacBook-Air.local" tests="76" failures="0" errors="0" skipped="5" time="0.576576958">
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.036377042">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.02087675">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.010233125">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00559125">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.011103542">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.007771208">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.004678541">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the icon slot&apos;s element with the slotProps.icon prop" time="0.005376917">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.icon with the built-in ones" time="0.005787709">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the message slot&apos;s element with the slotProps.message prop" time="0.005078709">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.message with the built-in ones" time="0.004705916">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the action slot&apos;s element with the slotProps.action prop" time="0.003933334">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.action with the built-in ones" time="0.004769125">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the closeButton slot&apos;s element with the slotProps.closeButton prop" time="0.006089792">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the closeButton slot&apos;s element with the componentsProps.closeButton prop" time="0.003897583">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.closeButton&apos; over componentsProps.closeButton if both are defined" time="0.004225042">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the closeIcon slot&apos;s element with the slotProps.closeIcon prop" time="0.005660042">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the closeIcon slot&apos;s element with the componentsProps.closeIcon prop" time="0.00409325">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.closeIcon&apos; over componentsProps.closeIcon if both are defined" time="0.004457959">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.005373125">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the icon slot&apos;s element with the slotProps.icon callback" time="0.004039583">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the message slot&apos;s element with the slotProps.message callback" time="0.012867458">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the action slot&apos;s element with the slotProps.action callback" time="0.003892458">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the closeButton slot&apos;s element with the slotProps.closeButton callback" time="0.005099542">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the closeIcon slot&apos;s element with the slotProps.closeIcon callback" time="0.003602666">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003959084">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the icon slot&apos;s element with the slotProps.icon callback using the ownerState" time="0.003376667">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the message slot&apos;s element with the slotProps.message callback using the ownerState" time="0.003474125">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the action slot&apos;s element with the slotProps.action callback using the ownerState" time="0.003900583">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the closeButton slot&apos;s element with the slotProps.closeButton callback using the ownerState" time="0.004742">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; sets custom properties on the closeIcon slot&apos;s element with the slotProps.closeIcon callback using the ownerState" time="0.00502325">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003381666">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.003968625">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the icon slot with a component using the slots.icon prop" time="0.004833834">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the icon slot with an element using the slots.icon prop" time="0.004206042">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the message slot with a component using the slots.message prop" time="0.003188541">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the message slot with an element using the slots.message prop" time="0.003140709">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the action slot with a component using the slots.action prop" time="0.034345459">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the action slot with an element using the slots.action prop" time="0.004847958">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the closeButton slot with a component using the slots.closeButton prop" time="0.003328625">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the closeButton slot with an element using the slots.closeButton prop" time="0.002330292">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the closeButton slot with a component using the components.CloseButton prop" time="0.006958167">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.closeButton&apos; over components.CloseButton if both are defined" time="0.002479292">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the closeButton slot with an element using the components.CloseButton prop" time="0.004119292">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the closeIcon slot with a component using the slots.closeIcon prop" time="0.00439025">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the closeIcon slot with an element using the slots.closeIcon prop" time="0.010275208">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the closeIcon slot with a component using the components.CloseIcon prop" time="0.005305333">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.closeIcon&apos; over components.CloseIcon if both are defined" time="0.004716667">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; allows overriding the closeIcon slot with an element using the components.CloseIcon prop" time="0.011014917">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.008080958">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.008475541">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.004312083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000924292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000270208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000175375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000146625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.006024791">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; prop: square &gt; should have rounded corners by default" time="0.004432583">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; prop: square &gt; should disable rounded corners with square prop" time="0.002696917">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; prop: action &gt; using ownerState in styleOverrides should not throw" time="0.003823584">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; prop: action &gt; should render the action provided into the Alert" time="0.078568667">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; prop: components &gt; should override the default icon used in the close action" time="0.020100541">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; prop: components &gt; should override the default button used in the close action" time="0.004668375">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; prop: componentsProps &gt; should apply the props on the close IconButton component" time="0.007685292">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; prop: componentsProps &gt; should apply the props on the close SvgIcon component" time="0.034500375">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; prop: icon &gt; should render the icon provided into the Alert" time="0.00714775">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; prop: icon &gt; should not render any icon if false is provided" time="0.006403041">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; prop: iconMapping &gt; should render the icon provided into the Alert for severity success" time="0.005502916">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; prop: iconMapping &gt; should render the icon provided into the Alert for severity info" time="0.005350625">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; prop: iconMapping &gt; should render the icon provided into the Alert for severity warning" time="0.006549458">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; prop: iconMapping &gt; should render the icon provided into the Alert for severity error" time="0.004389958">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; classes &gt; should apply default color class to the root" time="0.004073541">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; classes &gt; should apply color classes to the root" time="0.004500167">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; classes &gt; should apply color classes to the root" time="0.004585334">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; classes &gt; should apply color classes to the root" time="0.005738625">
        </testcase>
        <testcase classname="packages/mui-material/src/Alert/Alert.test.js" name="&lt;Alert /&gt; &gt; classes &gt; should apply color classes to the root" time="0.003370708">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/AlertTitle/AlertTitle.test.js" timestamp="2025-09-10T11:25:37.377Z" hostname="Jans-MacBook-Air.local" tests="9" failures="0" errors="0" skipped="3" time="0.063531958">
        <testcase classname="packages/mui-material/src/AlertTitle/AlertTitle.test.js" name="&lt;AlertTitle /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.031260792">
        </testcase>
        <testcase classname="packages/mui-material/src/AlertTitle/AlertTitle.test.js" name="&lt;AlertTitle /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.009116416">
        </testcase>
        <testcase classname="packages/mui-material/src/AlertTitle/AlertTitle.test.js" name="&lt;AlertTitle /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003972">
        </testcase>
        <testcase classname="packages/mui-material/src/AlertTitle/AlertTitle.test.js" name="&lt;AlertTitle /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0024035">
        </testcase>
        <testcase classname="packages/mui-material/src/AlertTitle/AlertTitle.test.js" name="&lt;AlertTitle /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008047959">
        </testcase>
        <testcase classname="packages/mui-material/src/AlertTitle/AlertTitle.test.js" name="&lt;AlertTitle /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000817125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AlertTitle/AlertTitle.test.js" name="&lt;AlertTitle /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000399834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AlertTitle/AlertTitle.test.js" name="&lt;AlertTitle /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000417458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AlertTitle/AlertTitle.test.js" name="&lt;AlertTitle /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004866042">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/AppBar/AppBar.test.js" timestamp="2025-09-10T11:25:37.378Z" hostname="Jans-MacBook-Air.local" tests="20" failures="0" errors="0" skipped="7" time="0.129528208">
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.055852417">
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006069792">
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007532084">
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005628">
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00666875">
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.008556625">
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.003230458">
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000596583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000563125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000239292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000181959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.0001565">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.008101208">
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; should render with the root class and primary" time="0.009381375">
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; should render a primary app bar" time="0.002781875">
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; should render an secondary app bar" time="0.004900042">
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; should change elevation" time="0.003483792">
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; Dialog &gt; should add a .mui-fixed class" time="0.003151334">
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; should inherit Paper background color with ThemeProvider" time="0.000279291">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AppBar/AppBar.test.js" name="&lt;AppBar /&gt; &gt; should inherit Paper background color with CssVarsProvider" time="0.000369166">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Avatar/Avatar.test.js" timestamp="2025-09-10T11:25:37.379Z" hostname="Jans-MacBook-Air.local" tests="47" failures="0" errors="0" skipped="5" time="0.140943459">
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.022185042">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.004996708">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004207875">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004715042">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008157417">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002773375">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002480959">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; sets custom properties on the fallback slot&apos;s element with the slotProps.fallback prop" time="0.0103615">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.fallback with the built-in ones" time="0.003606792">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002433042">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; sets custom properties on the fallback slot&apos;s element with the slotProps.fallback callback" time="0.003263209">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.002082625">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; sets custom properties on the fallback slot&apos;s element with the slotProps.fallback callback using the ownerState" time="0.00192225">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002037833">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002100292">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; allows overriding the fallback slot with a component using the slots.fallback prop" time="0.001924791">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; allows overriding the fallback slot with an element using the slots.fallback prop" time="0.001370625">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.003932458">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001998125">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000323958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000211625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000155875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000145667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000131417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.002852834">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; image avatar &gt; should render a div containing an img" time="0.002847667">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; image avatar &gt; should be able to add more props to the image" time="0.003471">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; image avatar &gt; should be able to add more props to the img slot" time="0.002314166">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; image avatar &gt; should pass slots.img to `useLoaded` hook" time="0.001417167">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; image avatar with unrendered children &gt; should render a div containing an img, not children" time="0.001577375">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; image avatar with unrendered children &gt; should be able to add more props to the image" time="0.002035959">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; image avatar with unrendered children &gt; should be able to add more props to the img slot" time="0.006061958">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; font icon avatar &gt; should render a div containing an font icon" time="0.001654792">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; font icon avatar &gt; should merge user classes &amp; spread custom props to the root node" time="0.001311709">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; font icon avatar &gt; should apply the colorDefault class" time="0.000960625">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; svg icon avatar &gt; should render a div containing an svg icon" time="0.006463">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; svg icon avatar &gt; should merge user classes &amp; spread custom props to the root node" time="0.002008542">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; svg icon avatar &gt; should apply the colorDefault class" time="0.001608125">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; text avatar &gt; should render a div containing a string" time="0.001097333">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; text avatar &gt; should merge user classes &amp; spread custom props to the root node" time="0.002993125">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; text avatar &gt; should apply the colorDefault class" time="0.001277458">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; falsey avatar &gt; should render with defaultColor class when supplied with a child with falsey value" time="0.000976583">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; falsey avatar &gt; should merge user classes &amp; spread custom props to the root node" time="0.001035958">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; falsey avatar &gt; should apply the colorDefault class" time="0.000957125">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; falsey avatar &gt; should fallback if children is empty string" time="0.00140325">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; falsey avatar &gt; should fallback if children is false" time="0.001351958">
        </testcase>
        <testcase classname="packages/mui-material/src/Avatar/Avatar.test.js" name="&lt;Avatar /&gt; &gt; should not throw error when ownerState is used in styleOverrides" time="0.00293675">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" timestamp="2025-09-10T11:25:37.381Z" hostname="Jans-MacBook-Air.local" tests="38" failures="0" errors="0" skipped="6" time="0.493487375">
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.051013625">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.010290833">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.007984042">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.011162292">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.011134">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.006941458">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; sets custom properties on the content slot&apos;s element with the slotProps.content prop" time="0.004996709">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.content with the built-in ones" time="0.004964834">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; sets custom properties on the expandIconWrapper slot&apos;s element with the slotProps.expandIconWrapper prop" time="0.0038745">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.expandIconWrapper with the built-in ones" time="0.012410916">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002781417">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; sets custom properties on the content slot&apos;s element with the slotProps.content callback" time="0.003395">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; sets custom properties on the expandIconWrapper slot&apos;s element with the slotProps.expandIconWrapper callback" time="0.004474708">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.006318875">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; sets custom properties on the content slot&apos;s element with the slotProps.content callback using the ownerState" time="0.004123708">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; sets custom properties on the expandIconWrapper slot&apos;s element with the slotProps.expandIconWrapper callback using the ownerState" time="0.003204041">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002069083">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.004262084">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; allows overriding the content slot with a component using the slots.content prop" time="0.006710791">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; allows overriding the content slot with an element using the slots.content prop" time="0.005266834">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; allows overriding the expandIconWrapper slot with a component using the slots.expandIconWrapper prop" time="0.011840875">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; allows overriding the expandIconWrapper slot with an element using the slots.expandIconWrapper prop" time="0.0105515">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.023142042">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00461025">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000343084">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000274542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000164292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000146458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000198625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005776709">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; renders the children inside the .content element" time="0.007644541">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; when disabled should have disabled class" time="0.143338834">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; renders the content given in expandIcon prop inside the div.expandIconWrapper" time="0.015679875">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; when expanded adds the expanded class to the button and .expandIconWrapper" time="0.052425417">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; should fire onBlur when the button blurs" time="0.010107083">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; should fire onClick callbacks" time="0.015538792">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; fires onChange of the Accordion if clicked" time="0.021555083">
        </testcase>
        <testcase classname="packages/mui-material/src/AccordionSummary/AccordionSummary.test.js" name="&lt;AccordionSummary /&gt; &gt; calls onFocusVisible if focused visibly" time="0.000507667">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" timestamp="2025-09-10T11:25:37.383Z" hostname="Jans-MacBook-Air.local" tests="34" failures="0" errors="0" skipped="5" time="0.385018541">
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.029339209">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.008492292">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007593667">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005710292">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.022808209">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; sets custom properties on the surplus slot&apos;s element with the slotProps.surplus prop" time="0.017018708">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.surplus with the built-in ones" time="0.006475917">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; sets custom properties on the surplus slot&apos;s element with the slotProps.surplus callback" time="0.003158459">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; sets custom properties on the surplus slot&apos;s element with the slotProps.surplus callback using the ownerState" time="0.00612625">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; allows overriding the surplus slot with a component using the slots.surplus prop" time="0.004209291">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; allows overriding the surplus slot with an element using the slots.surplus prop" time="0.003040417">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.011824125">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.009957041">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.00233475">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.001322333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000762167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000847375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000418875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.010372125">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; sets custom properties on the additionalAvatar slot&apos;s element with the slotProps.additionalAvatar prop" time="0.0038575">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.additionalAvatar with the built-in ones" time="0.009668125">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; should render avatars with spacing of 0px when spacing is 0" time="0.002758375">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; should display all the avatars" time="0.006286666">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; should display 2 avatars and &quot;+2&quot;" time="0.008825375">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; should display custom surplus element if renderSurplus prop is passed" time="0.082748708">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; should pass props from componentsProps.additionalAvatar to the slot component" time="0.004377541">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; should respect total" time="0.005483708">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; should respect both total and max" time="0.005543917">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; should respect total and clamp down shown avatars" time="0.00234425">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; should display extra if clamp max is &gt;= total" time="0.004829375">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; should display all avatars if total === max === children.length" time="0.002935541">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; should display all avatars with default (circular) variant" time="0.003293125">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; should display all avatars with the specified variant" time="0.00208525">
        </testcase>
        <testcase classname="packages/mui-material/src/AvatarGroup/AvatarGroup.test.js" name="&lt;AvatarGroup /&gt; &gt; should respect child&apos;s avatar variant prop if specified" time="0.002729875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Backdrop/Backdrop.test.js" timestamp="2025-09-10T11:25:37.385Z" hostname="Jans-MacBook-Air.local" tests="25" failures="0" errors="0" skipped="5" time="0.108167875">
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.028716375">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006419667">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005938625">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00279625">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004828583">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.00274625">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002704125">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition prop" time="0.003330959">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004261083">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback" time="0.005012667">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.002127875">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback using the ownerState" time="0.00187325">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001535333">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.0015415">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; allows overriding the transition slot with a component using the slots.transition prop" time="0.001372625">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005817584">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002571084">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000411375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000277334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000262292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000204875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000171042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004438667">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; should render a backdrop div with content of nested children" time="0.003947875">
        </testcase>
        <testcase classname="packages/mui-material/src/Backdrop/Backdrop.test.js" name="&lt;Backdrop /&gt; &gt; prop: transitionDuration &gt; delays appearance of its children" time="0.012293875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Autocomplete/Autocomplete.test.js" timestamp="2025-09-10T11:25:37.386Z" hostname="Jans-MacBook-Air.local" tests="200" failures="0" errors="0" skipped="9" time="5.710887583">
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.155843666">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.045140583">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.034211708">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.041522667">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the listbox slot&apos;s element with the slotProps.listbox prop" time="0.08262925">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.listbox with the built-in ones" time="0.054746375">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the paper slot&apos;s element with the slotProps.paper prop" time="0.029158417">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.paper with the built-in ones" time="0.029334125">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the popper slot&apos;s element with the slotProps.popper prop" time="0.035873125">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.popper with the built-in ones" time="0.033541291">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the listbox slot&apos;s element with the slotProps.listbox callback" time="0.027661042">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the paper slot&apos;s element with the slotProps.paper callback" time="0.024815333">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the popper slot&apos;s element with the slotProps.popper callback" time="0.040261125">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the listbox slot&apos;s element with the slotProps.listbox callback using the ownerState" time="0.02502725">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the paper slot&apos;s element with the slotProps.paper callback using the ownerState" time="0.029792792">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the popper slot&apos;s element with the slotProps.popper callback using the ownerState" time="0.025413083">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; allows overriding the listbox slot with a component using the slots.listbox prop" time="0.020284666">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; allows overriding the listbox slot with an element using the slots.listbox prop" time="0.024130708">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; allows overriding the paper slot with a component using the slots.paper prop" time="0.024472875">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; allows overriding the paper slot with an element using the slots.paper prop" time="0.042654625">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; allows overriding the popper slot with a component using the slots.popper prop" time="0.018994417">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.032258666">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.032862792">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000411625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000213833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000157625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000141834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000138708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.032853">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the clearIndicator slot&apos;s element with the slotProps.clearIndicator prop" time="0.023793125">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.clearIndicator with the built-in ones" time="0.022883292">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the popupIndicator slot&apos;s element with the slotProps.popupIndicator prop" time="0.019256417">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.popupIndicator with the built-in ones" time="0.021930125">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; MUI component API &gt; sets custom properties on the chip slot&apos;s element with the slotProps.chip prop" time="0.033175458">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; should be customizable in the theme" time="0.026338791">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; should not throw error when accessing ownerState in styleOverrides" time="0.026587458">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; combobox &gt; should clear the input when blur" time="0.061346">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; combobox &gt; should apply the icon classes" time="0.01413575">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: loading &gt; should show a loading message when open" time="0.029979375">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: loading &gt; should show supplied options to the &quot;options&quot; prop even when loading" time="0.029645458">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should set the focus on the first item" time="0.052265833">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should keep the highlight on the first item" time="0.035282458">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should set the focus on the first item when possible" time="0.044633958">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should set the highlight on selected item when dropdown is expanded" time="0.043830958">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should scroll the listbox to the top when keyboard highlight wraps around after the last item is highlighted" time="0.000310625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should keep the current highlight if possible" time="0.048892125">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should work with filterSelectedOptions too" time="0.076653416">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should auto highlight first option after options order changes with autoHighlight" time="0.035488583">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should auto highlight first option when no match with input value with autoHighlight" time="0.023757708">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: autoHighlight &gt; should auto highlight first option of rest after selecting an option with autoHighlight and filterSelectedOptions" time="0.037295333">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; highlight synchronisation &gt; should not update the highlight when multiple open and value change" time="0.038374958">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: limitTags &gt; show all items on focus" time="0.021148917">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: limitTags &gt; show 0 item on close when set 0 to limitTags" time="0.026971875">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: filterSelectedOptions &gt; when the last item is selected, highlights the new last item" time="0.046550917">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: autoSelect &gt; should not clear on blur when value does not match any option" time="0.03059875">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: autoSelect &gt; should add new value when autoSelect &amp; multiple on blur" time="0.0317345">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: autoSelect &gt; should add new value when autoSelect &amp; multiple &amp; freeSolo on blur" time="0.02635625">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: multiple &gt; should not crash" time="0.020833834">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: multiple &gt; should remove the last option" time="0.012171709">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: multiple &gt; navigates between different tags" time="0.037802667">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: multiple &gt; deletes a focused tag when pressing the delete key" time="0.031223833">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: multiple &gt; should keep listbox open on pressing left or right keys when inputValue is not empty" time="0.028103542">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: multiple &gt; should close listbox on pressing left or right keys when inputValue is empty" time="0.027105083">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: multiple &gt; should not crash if a tag is missing" time="0.037391333">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: multiple &gt; should not call onChange function for duplicate values" time="0.065627792">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: multiple &gt; has no textbox value" time="0.015562">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: multiple &gt; should fail validation if a required field has no value" time="0.000294917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: multiple &gt; should fail validation if a required field has a value" time="0.000131292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; should trigger a form expectedly" time="0.096976959">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; should not open the autocomplete popup when deleting chips" time="0.03184525">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; should toggle the autocomplete popup when clicking the popup indicator" time="0.0598405">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: getOptionDisabled &gt; should prevent the disabled option to trigger actions but allow focus with disabledItemsFocusable" time="0.03619925">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: getOptionDisabled &gt; should skip disabled options when navigating via keyboard" time="0.027385875">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: getOptionDisabled &gt; should skip disabled options at the end of the list when navigating via keyboard" time="0.029356125">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: getOptionDisabled &gt; should skip the first and last disabled options in the list when navigating via keyboard" time="0.028472292">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: getOptionDisabled &gt; should not focus any option when all the options are disabled" time="0.0233915">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; WAI-ARIA conforming markup &gt; when closed" time="0.013178791">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; WAI-ARIA conforming markup &gt; when open" time="0.028073542">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; WAI-ARIA conforming markup &gt; should add and remove aria-activedescendant" time="0.030186084">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; when popup closed &gt; opens when the textbox is focused when `openOnFocus`" time="0.019609542">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; when popup closed &gt; does not open on clear" time="0.010273417">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; when popup closed &gt; opens on ArrowDown when focus is on the textbox and `openOnFocus` without moving focus" time="0.008408083">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; when popup closed &gt; opens on ArrowUp when focus is on the textbox and `openOnFocus` without moving focus" time="0.010727417">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; when popup closed &gt; should open popup when clicked on the root element" time="0.006721958">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; when popup closed &gt; does not clear the textbox on Escape" time="0.009145375">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: clearOnEscape &gt; should clear on escape" time="0.014629958">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: clearOnEscape &gt; should clear on escape if rendering single value" time="0.011298083">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: clearOnBlur &gt; should clear on blur" time="0.020409542">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: clearOnBlur &gt; should not clear on blur" time="0.021602375">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: clearOnBlur &gt; should not clear on blur with `multiple` enabled" time="0.0251195">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; when popup open &gt; closes the popup if Escape is pressed " time="0.024378958">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; when popup open &gt; does not close the popup when option selected if Control is pressed" time="0.022302375">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; when popup open &gt; does not close the popup when option selected if Meta is pressed" time="0.023650583">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; when popup open &gt; moves focus to the first option on ArrowDown" time="0.0215445">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; when popup open &gt; moves focus to the last option on ArrowUp" time="0.027397708">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; when popup open &gt; should ignore keydown event until the IME is confirmed" time="0.027935208">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: openOnFocus &gt; enables open on input focus" time="0.041063">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; listbox wrapping behavior &gt; wraps around when navigating the list by default" time="0.021252792">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; listbox wrapping behavior &gt; selects the first item if on the last item and pressing up by default" time="0.024130792">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; listbox wrapping behavior &gt; prop: includeInputInList &gt; considers the textbox the predecessor of the first option when pressing Up" time="0.022479333">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; listbox wrapping behavior &gt; prop: includeInputInList &gt; considers the textbox the successor of the last option when pressing Down" time="0.023503417">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; listbox wrapping behavior &gt; prop: disableListWrap &gt; keeps focus on the first item if focus is on the first item and pressing Up" time="0.032000458">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; listbox wrapping behavior &gt; prop: disableListWrap &gt; focuses the last item when pressing Up when no option is active" time="0.029710083">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; listbox wrapping behavior &gt; prop: disableListWrap &gt; keeps focus on the last item if focus is on the last item and pressing Down" time="0.041262541">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: disabled &gt; should disable the input" time="0.014331208">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: disabled &gt; should disable the popup button" time="0.017882375">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: disabled &gt; clicks should not toggle the listbox open state when disabled" time="0.016019792">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: disabled &gt; mouseup should not toggle the listbox open state when disabled" time="0.021274125">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: disabled &gt; should not render the clear button" time="0.008306917">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: disabled &gt; should not apply the hasClearIcon class" time="0.007891625">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: disabled &gt; should close the popup when disabled is true" time="0.033155">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: disabled &gt; should not crash when autoSelect &amp; freeSolo are set, text is focused &amp; disabled gets truthy" time="0.024882125">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: disableClearable &gt; should not render the clear button" time="0.010487292">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; warnings &gt; warn if getOptionLabel do not return a string" time="0.0299915">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; warnings &gt; warn if isOptionEqualToValue match multiple values for a given option" time="0.039920667">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; warnings &gt; warn if groups options are not sorted" time="0.032597833">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; warnings &gt; warn if the type of the value is wrong" time="0.000608833">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; warnings &gt; warn if the type of the defaultValue is wrong" time="0.000199">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: options &gt; should keep focus on selected option and not reset to top option when options updated" time="0.032167417">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: options &gt; should keep focus when multiple options are selected and not reset to top option when options updated" time="0.039701542">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: options &gt; should keep focus when multiple options are selected by not resetting to the top option when options are updated and when options are provided as objects" time="0.038414542">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: options &gt; should keep focus on selected option when options updates and when options are provided as objects" time="0.029010792">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: options &gt; should reset the highlight when the input changed" time="0.048513291">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: options &gt; should reset the highlight when previously highlighted option doesn&apos;t exists in new options" time="0.021238875">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: options &gt; should not select undefined" time="0.022284541">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: options &gt; should work if options are the default data structure" time="0.019561875">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: options &gt; should display a &apos;no options&apos; message if no options are available" time="0.017366959">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; enter &gt; select a single value when enter is pressed" time="0.02267675">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; enter &gt; select multiple value when enter is pressed" time="0.0241005">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: autoComplete &gt; add a completion string" time="0.02213475">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; click input &gt; when `openOnFocus` toggles if empty" time="0.018829458">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; click input &gt; selects all the first time" time="0.014771375">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; click input &gt; should focus the input when clicking on the open action" time="0.029301292">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; click input &gt; should maintain list box open clicking on input when it is not empty" time="0.034669">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; click input &gt; should not toggle list box" time="0.036513958">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; click input &gt; should not focus when tooltip clicked" time="0.019984584">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; controlled &gt; controls the input value" time="0.016534">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; controlled &gt; should fire the input change event before the change event" time="0.025961542">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: filterOptions &gt; should ignore object keys by default" time="0.030501292">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: filterOptions &gt; limits the amount of rendered options when `limit` is set in `createFilterOptions`" time="0.02701125">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: filterOptions &gt; does not limit the amount of rendered options when `limit` is not set in `createFilterOptions`" time="0.024375333">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: freeSolo &gt; pressing twice enter should not call onChange listener twice" time="0.028948042">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: freeSolo &gt; should not delete exiting tag when try to add it twice" time="0.050345458">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: freeSolo &gt; should not fire change event until the IME is confirmed" time="0.028341625">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: freeSolo &gt; should render endAdornment only when clear icon or popup icon is available" time="0.006618916">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onChange &gt; provides a reason and details on option creation" time="0.030489958">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onChange &gt; provides a reason and details on option selection" time="0.028421542">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onChange &gt; provides a reason and details on option removing" time="0.017053833">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onChange &gt; provides a reason and details on blur" time="0.028858416">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onChange &gt; provides a reason and details on clear" time="0.016626833">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onInputChange &gt; provides a reason on input change" time="0.049861875">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onInputChange &gt; provides a reason on select reset" time="0.057070792">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onInputChange &gt; provides a reason on clear" time="0.029562625">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onInputChange &gt; provides a reason on blur" time="0.091589375">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onInputChange &gt; provides a reason on select option" time="0.054489625">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onInputChange &gt; provides a reason on remove option" time="0.066855791">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: blurOnSelect &gt; [blurOnSelect=true] should blur the input when clicking or touching options" time="0.034329917">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: blurOnSelect &gt; [blurOnSelect=&quot;touch&quot;] should only blur the input when an option is touched" time="0.034072125">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: blurOnSelect &gt; [blurOnSelect=&quot;mouse&quot;] should only blur the input when an option is clicked" time="0.034304917">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: getOptionLabel &gt; is considered for falsy values when filtering the list of options" time="0.0298165">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: getOptionLabel &gt; is not considered for nullish values when filtering the list of options" time="0.014947584">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: getOptionLabel &gt; should update the input value when getOptionLabel changes" time="0.026366041">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: getOptionLabel &gt; should not update the input value when users is focusing" time="0.028745917">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: getOptionLabel &gt; should not throw error when nested options are provided" time="0.017955">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; should specify option key for duplicate options" time="0.023890583">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: fullWidth &gt; should have the fullWidth class" time="0.006479292">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; should not override internal listbox ref when external listbox ref is provided by testing if highlighting works" time="0.022102292">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onHighlightChange &gt; should not trigger event when default value is passed" time="0.019551583">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onHighlightChange &gt; should support keyboard event" time="0.019920042">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onHighlightChange &gt; should support mouse event" time="0.017816666">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onHighlightChange &gt; should pass to onHighlightChange the correct value after filtering" time="0.025476875">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: onHighlightChange &gt; should reset the highlight when the options change and onHighlightChange should not be called" time="0.024760375">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; should filter options when new input value matches option" time="0.048712542">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; should prevent the default event handlers" time="0.02534725">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: componentsProps &gt; should apply the props on the AutocompleteClearIndicator component" time="0.027286542">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: componentsProps &gt; should apply the props on the Paper component" time="0.018590875">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: componentsProps &gt; should apply the props on the Popper component" time="0.024160125">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: componentsProps &gt; should apply the props on the AutocompletePopupIndicator component" time="0.027216916">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: componentsProps &gt; should keep AutocompletePopper mounted if keepMounted is true in popper props" time="0.010317334">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: readOnly &gt; should make the input readonly" time="0.011737458">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: readOnly &gt; should not render the clear button" time="0.016851625">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: readOnly &gt; should not apply the hasClearIcon class" time="0.018824584">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: readOnly &gt; should focus on input when clicked" time="0.027318333">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: readOnly &gt; should not open the popup" time="0.022472042">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: readOnly &gt; should not be able to delete the tag when multiple=true" time="0.017638208">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: readOnly &gt; should not be able to delete the tag using Backspace when using renderValue" time="0.022341792">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; deleting a tag immediately after adding it while the listbox is still open &gt; should allow it, given that options are primitive values" time="0.059154083">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; deleting a tag immediately after adding it while the listbox is still open &gt; should allow it, given that options are objects" time="0.061695417">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; should apply the expanded class &gt; when listbox having options is opened" time="0.032244916">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; should apply the expanded class &gt; when listbox having no options is opened" time="0.029818667">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: renderOption &gt; should pass getOptionLabel through ownerState in renderOption callback" time="0.032032666">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: renderOption &gt; should pass getOptionLabel default value through ownerState when no custom getOptionLabel prop provided" time="0.03248475">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; should preserve scrollTop position of the listbox when adding new options on mobile" time="0.000275667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: renderValue (single selection) &gt; should render only a single value, given that options are primitive values" time="0.075191583">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: renderValue (single selection) &gt; should render only a single value, given that options as objects" time="0.054519584">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: renderValue (single selection) &gt; should delete using Backspace key" time="0.015364667">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: renderValue (single selection) &gt; should delete using Delete key" time="0.018052">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: renderValue (single selection) &gt; navigates between the tag and input" time="0.019062209">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; prop: renderValue (single selection) &gt; should allow zero number (0) as a value to render" time="0.013124709">
        </testcase>
        <testcase classname="packages/mui-material/src/Autocomplete/Autocomplete.test.js" name="&lt;Autocomplete /&gt; &gt; should not shrink the input label when value is an empty array in multiple mode using renderValue" time="0.008697166">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" timestamp="2025-09-10T11:25:37.396Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="3" time="0.11911375">
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.028972">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.00883975">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007865791">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.008330333">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006070167">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.00585125">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004868625">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000535375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.00047725">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000225125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004720167">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; renders with a null child" time="0.005140291">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; should pass selected prop to children" time="0.005965666">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; should overwrite parent showLabel prop adding class iconOnly" time="0.005363666">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; should forward the click" time="0.0075165">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; should use custom action values" time="0.005075375">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigation/BottomNavigation.test.js" name="&lt;BottomNavigation /&gt; &gt; should handle also empty action value" time="0.011819834">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" timestamp="2025-09-10T11:25:37.397Z" hostname="Jans-MacBook-Air.local" tests="32" failures="0" errors="0" skipped="5" time="0.199918666">
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.030544417">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007048666">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.006744458">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005310708">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.007720833">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003252709">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label prop" time="0.003794125">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.label with the built-in ones" time="0.003211125">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004274625">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label callback" time="0.005696333">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.002588041">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label callback using the ownerState" time="0.002095166">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002443291">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002855208">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; allows overriding the label slot with a component using the slots.label prop" time="0.003635292">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; allows overriding the label slot with an element using the slots.label prop" time="0.005022292">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.010293042">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00566375">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000430209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.00024725">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000184792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.00016625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.0001505">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.0040035">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; adds a `selected` class when selected" time="0.050387875">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; should render label with the selected class when selected" time="0.002535291">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; adds a `iconOnly` class by default" time="0.005172208">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; should render label with the `iconOnly` class" time="0.002378">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; removes the `iconOnly` class when `selected`" time="0.005415166">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; removes the `iconOnly` class when `showLabel`" time="0.003839667">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; should render the passed `icon`" time="0.003805">
        </testcase>
        <testcase classname="packages/mui-material/src/BottomNavigationAction/BottomNavigationAction.test.js" name="&lt;BottomNavigationAction /&gt; &gt; prop: onClick &gt; should be called when a click is triggered" time="0.007048542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Breadcrumbs/BreadcrumbCollapsed.test.js" timestamp="2025-09-10T11:25:37.399Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.106711458">
        <testcase classname="packages/mui-material/src/Breadcrumbs/BreadcrumbCollapsed.test.js" name="&lt;BreadcrumbCollapsed /&gt; &gt; should render an icon" time="0.029662125">
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/BreadcrumbCollapsed.test.js" name="&lt;BreadcrumbCollapsed /&gt; &gt; renders a native &lt;button&gt;" time="0.061481791">
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/BreadcrumbCollapsed.test.js" name="&lt;BreadcrumbCollapsed /&gt; &gt; prop: onClick &gt; should be called when clicked" time="0.013844125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" timestamp="2025-09-10T11:25:37.399Z" hostname="Jans-MacBook-Air.local" tests="19" failures="0" errors="0" skipped="5" time="0.4765725">
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.027583917">
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.01275625">
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.025744041">
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.019155958">
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.046309125">
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.013836292">
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004454584">
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.001325">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000526959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000233792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000175208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000155042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004429459">
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; should render inaccessible separators between each listitem" time="0.100381625">
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; should render an ellipsis between `itemsAfterCollapse` and `itemsBeforeCollapse`" time="0.122591">
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; should expand when `BreadcrumbCollapsed` is clicked" time="0.069185167">
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; should warn about invalid input" time="0.013866583">
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; prop: slots and slotProps &gt; should show custom collapsed icon" time="0.007217917">
        </testcase>
        <testcase classname="packages/mui-material/src/Breadcrumbs/Breadcrumbs.test.js" name="&lt;Breadcrumbs /&gt; &gt; prop: slots and slotProps &gt; should apply slotProps to collapsed icon" time="0.004226042">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Button/Button.test.js" timestamp="2025-09-10T11:25:37.400Z" hostname="Jans-MacBook-Air.local" tests="67" failures="0" errors="0" skipped="7" time="0.509696042">
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.034039916">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.010549542">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006978708">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.006652792">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006599417">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006339833">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00474275">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000646959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000537916">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000267875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000178792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000155458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.007571875">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render with the root, text, and textPrimary classes but no others" time="0.060608416">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; startIcon and endIcon should have icon class" time="0.006423209">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should add the appropriate color class to root element based on color prop" time="0.013595417">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; can render a text primary button" time="0.009753542">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a text secondary button" time="0.007285625">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a text success button" time="0.005146">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a text error button" time="0.004131083">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a text info button" time="0.004634125">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a text warning button" time="0.003703041">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render an outlined button" time="0.004476291">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a primary outlined button" time="0.003552125">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a secondary outlined button" time="0.004618792">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render an inherit outlined button" time="0.005136417">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a success outlined button" time="0.011890042">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a error outlined button" time="0.00401075">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a info outlined button" time="0.005895792">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a warning outlined button" time="0.004062875">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a contained button" time="0.007513">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a contained primary button" time="0.003833542">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a contained secondary button" time="0.005441792">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a contained success button" time="0.00446225">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a contained error button" time="0.008608416">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a contained info button" time="0.00705">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a contained warning button" time="0.006629875">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a small text button" time="0.004412417">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a large text button" time="0.003924375">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a small outlined button" time="0.004185125">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a large outlined button" time="0.00749225">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a small contained button" time="0.004173709">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a large contained button" time="0.004391041">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a button with startIcon" time="0.007753334">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should render a button with endIcon" time="0.003664125">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should have a ripple" time="0.016578166">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; can disable the ripple" time="0.009586709">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; can disable the elevation" time="0.006855208">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should have a focusRipple" time="0.000270208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; can disable the focusRipple" time="0.000231417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; server-side &gt; should server-side render" time="0.016871916">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should automatically change the button to an anchor element when href is provided" time="0.012352709">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should forward classes to ButtonBase" time="0.003373208">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should disable ripple when MuiButtonBase has disableRipple in theme&apos;s defaultProps" time="0.004511542">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; should disable ripple when MuiButtonBase has disableRipple in theme&apos;s defaultProps but override on the individual Buttons if provided" time="0.018873791">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; Emotion compatibility &gt; classes.root should overwrite builtin styles." time="0.006151959">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; Emotion compatibility &gt; className should overwrite classes.root and builtin styles." time="0.00452975">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; Emotion compatibility &gt; classes.* should overwrite builtin styles." time="0.011590708">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; prop: loading &gt; should not have a loading wrapper by default" time="0.002313708">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; prop: loading &gt; should have a loading wrapper when loading is boolean" time="0.009613792">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; prop: loading &gt; disables the button" time="0.005513292">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; prop: loading &gt; cannot be enabled while `loading`" time="0.007600416">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; prop: loading &gt; renders a progressbar that is labelled by the button" time="0.011892708">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; prop: loading &gt; has no id when `loading=false` and no `id` prop is present`" time="0.011258334">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; prop: loadingIndicator &gt; is not rendered by default" time="0.002964458">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; prop: loadingIndicator &gt; is rendered before the children when `loading`" time="0.003241708">
        </testcase>
        <testcase classname="packages/mui-material/src/Button/Button.test.js" name="&lt;Button /&gt; &gt; prop: loadingIndicator &gt; should have loading position class attached to root when `loading`" time="0.013524208">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Box/Box.test.js" timestamp="2025-09-10T11:25:37.403Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="1" time="0.057867084">
        <testcase classname="packages/mui-material/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.029775">
        </testcase>
        <testcase classname="packages/mui-material/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006618584">
        </testcase>
        <testcase classname="packages/mui-material/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004159708">
        </testcase>
        <testcase classname="packages/mui-material/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005109167">
        </testcase>
        <testcase classname="packages/mui-material/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; respects theme from context" time="0.001008292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Box/Box.test.js" name="&lt;Box /&gt; &gt; ClassNameGenerator &gt; get custom className" time="0.009751292">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Badge/Badge.test.js" timestamp="2025-09-10T11:25:37.404Z" hostname="Jans-MacBook-Air.local" tests="64" failures="0" errors="0" skipped="5" time="0.282559709">
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.029768208">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; prop components: &gt; can render another root component with the `components` prop" time="0.0055845">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.011289416">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007639542">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.009099583">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008474334">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.003744084">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.00533325">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; sets custom properties on the badge slot&apos;s element with the slotProps.badge prop" time="0.008099792">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.badge with the built-in ones" time="0.00503325">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.003943791">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; sets custom properties on the badge slot&apos;s element with the slotProps.badge callback" time="0.004128833">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.004353541">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; sets custom properties on the badge slot&apos;s element with the slotProps.badge callback using the ownerState" time="0.004211084">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001635">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001436333">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; allows overriding the badge slot with a component using the slots.badge prop" time="0.001226">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; allows overriding the badge slot with an element using the slots.badge prop" time="0.001465792">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.013903958">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.003947583">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000847875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000636">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000850042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.002106375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.001318625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005683125">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; renders children and badgeContent" time="0.017860542">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; applies customized classes" time="0.007007083">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; renders children" time="0.00224675">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: color &gt; should have the colorPrimary class when color=&quot;primary&quot;" time="0.001976958">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: color &gt; should have the colorSecondary class when color=&quot;secondary&quot;" time="0.002565791">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: color &gt; should have the colorError class when color=&quot;error&quot;" time="0.001889333">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: invisible &gt; should default to false" time="0.010637666">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: invisible &gt; should render without the invisible class when set to false" time="0.002503959">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: invisible &gt; should render with the invisible class when set to true" time="0.001569584">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: invisible &gt; should render with the invisible class when empty and not dot" time="0.00919">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: invisible &gt; should render with invisible class when invisible and showZero are set to false and content is 0" time="0.00310525">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: invisible &gt; should not render with invisible class when invisible and showZero are set to false and content is not 0" time="0.001436416">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: showZero &gt; should default to false" time="0.001410084">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: showZero &gt; should render without the invisible class when false and badgeContent is not 0" time="0.00138225">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: showZero &gt; should render without the invisible class when true and badgeContent is 0" time="0.001556959">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: showZero &gt; should render with the invisible class when false and badgeContent is 0" time="0.003090875">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: variant &gt; should default to standard" time="0.002731125">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: variant &gt; should render with the standard class when variant=&quot;standard&quot;" time="0.002736167">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: variant &gt; should not render badgeContent when variant=&quot;dot&quot;" time="0.002158083">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: max &gt; should default to 99" time="0.001497334">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: max &gt; should cap badgeContent" time="0.001982333">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: max &gt; should not cap if badgeContent and max are equal" time="0.0024325">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: max &gt; should not cap if badgeContent is lower than max" time="0.001616709">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: anchorOrigin &gt; should apply style for top left rectangular" time="0.001315916">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: anchorOrigin &gt; should apply style for top right rectangular" time="0.00177725">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: anchorOrigin &gt; should apply style for bottom left rectangular" time="0.003133875">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: anchorOrigin &gt; should apply style for bottom right rectangular" time="0.003349833">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: anchorOrigin &gt; should apply style for bottom right rectangular when only vertical is specified" time="0.00175075">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: anchorOrigin &gt; should apply style for top left rectangular when only horizontal is specified" time="0.003066292">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: anchorOrigin &gt; should apply style for top left circular" time="0.001971875">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: anchorOrigin &gt; should apply style for top right circular" time="0.00708525">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: anchorOrigin &gt; should apply style for bottom left circular" time="0.006316708">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: anchorOrigin &gt; should apply style for bottom right circular" time="0.002715084">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: components / slots &gt; allows overriding the slots using the components prop" time="0.001268375">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: components / slots &gt; allows overriding the slots using the slots prop" time="0.000988875">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: componentsProps / slotProps &gt; allows modifying slots props using the componentsProps prop" time="0.001928375">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; prop: componentsProps / slotProps &gt; allows modifying slots props using the slotProps prop" time="0.006735042">
        </testcase>
        <testcase classname="packages/mui-material/src/Badge/Badge.test.js" name="&lt;Badge /&gt; &gt; retains anchorOrigin, content, color, max, overlap and variant when invisible is true for consistent disappearing transition" time="0.005549667">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ButtonBase/ButtonBase.test.js" timestamp="2025-09-10T11:25:37.407Z" hostname="Jans-MacBook-Air.local" tests="73" failures="0" errors="0" skipped="38" time="0.244644">
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.021585666">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006921292">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003754541">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003487458">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004837208">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.008353375">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002068875">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000510667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000476709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000231542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000167833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.0001495">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003142333">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; root node &gt; should have default button type &quot;button&quot;" time="0.006206042">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; root node &gt; should change the button type" time="0.00323725">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; root node &gt; should change the button component and add accessibility requirements" time="0.023190125">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; root node &gt; should not apply role=&quot;button&quot; if type=&quot;button&quot;" time="0.001912375">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; root node &gt; should change the button type to span and set role=&quot;button&quot;" time="0.002902375">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; root node &gt; should automatically change the button to an anchor element when href is provided" time="0.00303725">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; root node &gt; should use custom LinkComponent when provided in the theme" time="0.004053375">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; root node &gt; applies role=&quot;button&quot; when an anchor is used without href" time="0.006533584">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; root node &gt; should not add role=&quot;button&quot; if custom component and href are used" time="0.001949958">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; root node &gt; should not add role=&quot;button&quot; if custom component and to are used" time="0.001484708">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event callbacks &gt; should fire event callbacks" time="0.046398458">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; ripple &gt; interactions &gt; should not have a focus ripple by default" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; ripple &gt; interactions &gt; should start the ripple when the mouse is pressed" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; ripple &gt; interactions &gt; should stop the ripple when the mouse is released" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; ripple &gt; interactions &gt; should start the ripple when the mouse is pressed 2" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; ripple &gt; interactions &gt; should stop the ripple when the button blurs" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; ripple &gt; interactions &gt; should restart the ripple when the mouse is pressed again" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; ripple &gt; interactions &gt; should stop the ripple when the mouse leaves" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; ripple &gt; interactions &gt; should stop the ripple when dragging has finished" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; ripple &gt; interactions &gt; should stop the ripple when the context menu opens" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; ripple &gt; interactions &gt; should not crash when changes enableRipple from false to true" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; ripple &gt; interactions &gt; should stop the ripple on blur if disableTouchRipple is set" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; prop: centerRipple &gt; centers the TouchRipple" time="0.022988625">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; prop: centerRipple &gt; is disabled by default" time="0.018893">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; focusRipple &gt; should pulsate the ripple when focusVisible" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; focusRipple &gt; should not stop the ripple when the mouse leaves" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; focusRipple &gt; should stop pulsate and start a ripple when the space button is pressed" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; focusRipple &gt; should stop and re-pulsate when space bar is released" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; focusRipple &gt; should stop on blur and set focusVisible to false" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; prop: disabled &gt; should have a negative tabIndex" time="0.001950041">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; prop: disabled &gt; should forward it to native buttons" time="0.001851334">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; prop: disabled &gt; should reset the focused state" time="0.000201917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; prop: disabled &gt; should not use aria-disabled with button host" time="0.002482292">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; prop: disabled &gt; should use aria-disabled for other components" time="0.002924791">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; prop: component &gt; should allow to use a link component" time="0.001667875">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: focus &gt; when disabled should be called onFocus" time="0.004791833">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: focus &gt; has a focus-visible polyfill" time="0.000276208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: focus &gt; removes focus-visible if focus is re-targetted" time="0.000176333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: focus &gt; onFocusVisibleHandler() should propagate call to onFocusVisible prop" time="0.000196875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: focus &gt; can be autoFocused" time="0.003328541">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: keydown &gt; ripples on repeated keydowns" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: keydown &gt; prop: onKeyDown &gt; call it when keydown events are dispatched" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: keydown &gt; prop: disableTouchRipple &gt; creates no ripples on click" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: keydown &gt; prop: disableRipple &gt; removes the TouchRipple" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: keydown &gt; keyboard accessibility for non interactive elements &gt; does not call onClick when a spacebar is pressed on the element but prevents the default" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: keydown &gt; keyboard accessibility for non interactive elements &gt; does call onClick when a spacebar is released on the element" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: keydown &gt; keyboard accessibility for non interactive elements &gt; does not call onClick when a spacebar is released and the default is prevented" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: keydown &gt; keyboard accessibility for non interactive elements &gt; calls onClick when Enter is pressed on the element" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: keydown &gt; keyboard accessibility for non interactive elements &gt; does not call onClick if Enter was pressed on a child" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: keydown &gt; keyboard accessibility for non interactive elements &gt; does not call onClick if Space was released on a child" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: keydown &gt; keyboard accessibility for non interactive elements &gt; prevents default with an anchor and empty href" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; event: keydown &gt; keyboard accessibility for non interactive elements &gt; should ignore anchors with href" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; prop: action &gt; should be able to focus visible the button" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; warnings &gt; warns on invalid `component` prop: ref forward" time="0.000677375">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; prop: type &gt; is `button` by default" time="0.002454">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; prop: type &gt; can be changed to other button types" time="0.002508417">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; prop: type &gt; allows non-standard values" time="0.002652416">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; prop: type &gt; is forwarded to anchor components" time="0.003990375">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; prop: type &gt; is forwarded to custom components" time="0.004961834">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/ButtonBase.test.js" name="&lt;ButtonBase /&gt; &gt; prop: touchRippleRef &gt; should return a ref" time="0.007167542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ButtonBase/Ripple.test.js" timestamp="2025-09-10T11:25:37.411Z" hostname="Jans-MacBook-Air.local" tests="8" failures="0" errors="0" skipped="0" time="0.042346458">
        <testcase classname="packages/mui-material/src/ButtonBase/Ripple.test.js" name="&lt;Ripple /&gt; &gt; should have the ripple className" time="0.018691416">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/Ripple.test.js" name="&lt;Ripple /&gt; &gt; starting and stopping &gt; should start the ripple" time="0.004447208">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/Ripple.test.js" name="&lt;Ripple /&gt; &gt; starting and stopping &gt; should stop the ripple" time="0.003043375">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/Ripple.test.js" name="&lt;Ripple /&gt; &gt; pulsating and stopping 1 &gt; should render the ripple inside a pulsating Ripple" time="0.002715167">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/Ripple.test.js" name="&lt;Ripple /&gt; &gt; pulsating and stopping 1 &gt; should start the ripple" time="0.00207525">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/Ripple.test.js" name="&lt;Ripple /&gt; &gt; pulsating and stopping 1 &gt; should stop the ripple" time="0.003721208">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/Ripple.test.js" name="&lt;Ripple /&gt; &gt; pulsating and stopping 2 &gt; handleExit should trigger a timer" time="0.004335458">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/Ripple.test.js" name="&lt;Ripple /&gt; &gt; pulsating and stopping 2 &gt; unmount should defuse the handleExit timer" time="0.002182875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ButtonBase/TouchRipple.test.js" timestamp="2025-09-10T11:25:37.411Z" hostname="Jans-MacBook-Air.local" tests="16" failures="0" errors="0" skipped="0" time="0.145814">
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.019602042">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.00389825">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.000476">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.014959291">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.010825375">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.009383625">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; prop: center &gt; should compute the right ripple dimensions" time="0.015428708">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; should create individual ripples" time="0.028373167">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; creating unique ripples &gt; should create a ripple" time="0.00460225">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; creating unique ripples &gt; should ignore a mousedown event after a touchstart event" time="0.003899875">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; creating unique ripples &gt; should create a specific ripple" time="0.010031">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; mobile &gt; should delay the display of the ripples" time="0.008500833">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; mobile &gt; should trigger the ripple for short touch interactions" time="0.006688042">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; mobile &gt; should interrupt the ripple schedule" time="0.002369708">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; mobile &gt; should not leak on multi-touch" time="0.001571875">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonBase/TouchRipple.test.js" name="&lt;TouchRipple /&gt; &gt; mobile &gt; should handle empty event.touches" time="0.001410416">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" timestamp="2025-09-10T11:25:37.412Z" hostname="Jans-MacBook-Air.local" tests="31" failures="0" errors="0" skipped="5" time="0.378829041">
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.030165291">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.00762275">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.008235333">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004758416">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006669042">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005679792">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.007070291">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000525917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000492375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000223167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000167042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000143542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.012909417">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; should render with the root class but no others" time="0.00594625">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; should have colorPrimary, horizontal class" time="0.004820084">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; should have colorSecondary class" time="0.0036435">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; should render an outlined button" time="0.055143125">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; can render an outlined primary button" time="0.008041166">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; can render a contained button" time="0.009973417">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; can render a small button" time="0.007557333">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; can render a large button" time="0.005089417">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; should have a ripple" time="0.029375292">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; can disable the elevation" time="0.020775459">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; can disable the ripple" time="0.014434042">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; should not be fullWidth by default" time="0.006580875">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; can pass fullWidth to Button" time="0.007570875">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; classes.grouped should be merged with Button className" time="0.005934583">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; should forward the context to children" time="0.003502709">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; theme default props on Button &gt; should override default variant prop" time="0.069295">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; position classes &gt; correctly applies position classes to buttons" time="0.02998">
        </testcase>
        <testcase classname="packages/mui-material/src/ButtonGroup/ButtonGroup.test.js" name="&lt;ButtonGroup /&gt; &gt; position classes &gt; does not apply any position classes to a single button" time="0.004354">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/CardContent/CardContent.test.js" timestamp="2025-09-10T11:25:37.414Z" hostname="Jans-MacBook-Air.local" tests="11" failures="0" errors="0" skipped="3" time="0.060924125">
        <testcase classname="packages/mui-material/src/CardContent/CardContent.test.js" name="&lt;CardContent /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.028166167">
        </testcase>
        <testcase classname="packages/mui-material/src/CardContent/CardContent.test.js" name="&lt;CardContent /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.008628166">
        </testcase>
        <testcase classname="packages/mui-material/src/CardContent/CardContent.test.js" name="&lt;CardContent /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004724083">
        </testcase>
        <testcase classname="packages/mui-material/src/CardContent/CardContent.test.js" name="&lt;CardContent /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002594875">
        </testcase>
        <testcase classname="packages/mui-material/src/CardContent/CardContent.test.js" name="&lt;CardContent /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004161667">
        </testcase>
        <testcase classname="packages/mui-material/src/CardContent/CardContent.test.js" name="&lt;CardContent /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004195958">
        </testcase>
        <testcase classname="packages/mui-material/src/CardContent/CardContent.test.js" name="&lt;CardContent /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00174925">
        </testcase>
        <testcase classname="packages/mui-material/src/CardContent/CardContent.test.js" name="&lt;CardContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000520708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardContent/CardContent.test.js" name="&lt;CardContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000525417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardContent/CardContent.test.js" name="&lt;CardContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000250833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardContent/CardContent.test.js" name="&lt;CardContent /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.0030195">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Card/Card.test.tsx" timestamp="2025-09-10T11:25:37.414Z" hostname="Jans-MacBook-Air.local" tests="15" failures="0" errors="0" skipped="5" time="0.207566167">
        <testcase classname="packages/mui-material/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.062340334">
        </testcase>
        <testcase classname="packages/mui-material/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.056705791">
        </testcase>
        <testcase classname="packages/mui-material/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.020983167">
        </testcase>
        <testcase classname="packages/mui-material/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003821042">
        </testcase>
        <testcase classname="packages/mui-material/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.028429208">
        </testcase>
        <testcase classname="packages/mui-material/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.007596708">
        </testcase>
        <testcase classname="packages/mui-material/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004130541">
        </testcase>
        <testcase classname="packages/mui-material/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000597875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000571708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000266958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.00020225">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000181708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004688667">
        </testcase>
        <testcase classname="packages/mui-material/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; when raised should render Paper with 8dp" time="0.010104208">
        </testcase>
        <testcase classname="packages/mui-material/src/Card/Card.test.tsx" name="&lt;Card /&gt; &gt; should support variant=&quot;outlined&quot;" time="0.004265583">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/CardActions/CardActions.test.js" timestamp="2025-09-10T11:25:37.415Z" hostname="Jans-MacBook-Air.local" tests="13" failures="0" errors="0" skipped="6" time="0.048821333">
        <testcase classname="packages/mui-material/src/CardActions/CardActions.test.js" name="&lt;CardActions /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.019703833">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActions/CardActions.test.js" name="&lt;CardActions /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004815208">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActions/CardActions.test.js" name="&lt;CardActions /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002800167">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActions/CardActions.test.js" name="&lt;CardActions /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.002910875">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActions/CardActions.test.js" name="&lt;CardActions /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.009948666">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActions/CardActions.test.js" name="&lt;CardActions /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00191875">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActions/CardActions.test.js" name="&lt;CardActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000468334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardActions/CardActions.test.js" name="&lt;CardActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000409958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardActions/CardActions.test.js" name="&lt;CardActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000536417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardActions/CardActions.test.js" name="&lt;CardActions /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000262">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardActions/CardActions.test.js" name="&lt;CardActions /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000192042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardActions/CardActions.test.js" name="&lt;CardActions /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003222791">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActions/CardActions.test.js" name="&lt;CardActions /&gt; &gt; should apply margin to all children but the first one" time="0.000236833">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/CardActionArea/CardActionArea.test.js" timestamp="2025-09-10T11:25:37.416Z" hostname="Jans-MacBook-Air.local" tests="24" failures="0" errors="0" skipped="5" time="0.126378625">
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.028926583">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006629459">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005271">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00860225">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.006892333">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.004222833">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; sets custom properties on the focusHighlight slot&apos;s element with the slotProps.focusHighlight prop" time="0.003602791">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.focusHighlight with the built-in ones" time="0.003767667">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004308708">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; sets custom properties on the focusHighlight slot&apos;s element with the slotProps.focusHighlight callback" time="0.002962209">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.005015792">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; sets custom properties on the focusHighlight slot&apos;s element with the slotProps.focusHighlight callback using the ownerState" time="0.002773292">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001881542">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.008209208">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; allows overriding the focusHighlight slot with a component using the slots.focusHighlight prop" time="0.002644959">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; allows overriding the focusHighlight slot with an element using the slots.focusHighlight prop" time="0.002270833">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.012810541">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.005068542">
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.001755792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000919375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000535416">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000297666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000422292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardActionArea/CardActionArea.test.js" name="&lt;CardActionArea /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004923958">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/CardHeader/CardHeader.test.js" timestamp="2025-09-10T11:25:37.417Z" hostname="Jans-MacBook-Air.local" tests="57" failures="0" errors="0" skipped="5" time="0.42067125">
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.044113666">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.014101375">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.011176208">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.007041625">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.014299458">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.008258292">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.005407583">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the avatar slot&apos;s element with the slotProps.avatar prop" time="0.004560166">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.avatar with the built-in ones" time="0.005328125">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the action slot&apos;s element with the slotProps.action prop" time="0.008534625">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.action with the built-in ones" time="0.004128875">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the content slot&apos;s element with the slotProps.content prop" time="0.006060042">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.content with the built-in ones" time="0.015066834">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the title slot&apos;s element with the slotProps.title prop" time="0.008849333">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.title with the built-in ones" time="0.010124417">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the subheader slot&apos;s element with the slotProps.subheader prop" time="0.0055285">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.subheader with the built-in ones" time="0.003845916">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.0037985">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the avatar slot&apos;s element with the slotProps.avatar callback" time="0.006560959">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the action slot&apos;s element with the slotProps.action callback" time="0.008684625">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the content slot&apos;s element with the slotProps.content callback" time="0.006774167">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the title slot&apos;s element with the slotProps.title callback" time="0.004236791">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the subheader slot&apos;s element with the slotProps.subheader callback" time="0.006014292">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.005353083">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the avatar slot&apos;s element with the slotProps.avatar callback using the ownerState" time="0.004274875">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the action slot&apos;s element with the slotProps.action callback using the ownerState" time="0.005209208">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the content slot&apos;s element with the slotProps.content callback using the ownerState" time="0.00618775">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the title slot&apos;s element with the slotProps.title callback using the ownerState" time="0.005151417">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; sets custom properties on the subheader slot&apos;s element with the slotProps.subheader callback using the ownerState" time="0.005137042">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.007749958">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.00930925">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; allows overriding the avatar slot with a component using the slots.avatar prop" time="0.010379792">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; allows overriding the avatar slot with an element using the slots.avatar prop" time="0.00634175">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; allows overriding the action slot with a component using the slots.action prop" time="0.00615325">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; allows overriding the action slot with an element using the slots.action prop" time="0.005953375">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; allows overriding the content slot with a component using the slots.content prop" time="0.005122292">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; allows overriding the content slot with an element using the slots.content prop" time="0.008472666">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; allows overriding the title slot with a component using the slots.title prop" time="0.005550042">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; allows overriding the title slot with an element using the slots.title prop" time="0.006487334">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; allows overriding the subheader slot with a component using the slots.subheader prop" time="0.011537083">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; allows overriding the subheader slot with an element using the slots.subheader prop" time="0.010276416">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.009014958">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.007044709">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000368333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000232458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000158208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000152">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000129167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005168834">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; without an avatar &gt; should render the title as headline text" time="0.002439708">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; without an avatar &gt; should render the subheader as body1" time="0.003060083">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; without an avatar &gt; should not render the subheader if none is given" time="0.004198917">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; with an avatar &gt; should render the avatar inside the first child" time="0.00239225">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; with an avatar &gt; should render the title text inside the second child" time="0.002093833">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; with an avatar &gt; should render the subheader as body2 secondary text inside the second child" time="0.004090417">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; should merge className and style from props and from the theme if mergeClassNameAndStyle is true" time="0.005751375">
        </testcase>
        <testcase classname="packages/mui-material/src/CardHeader/CardHeader.test.js" name="&lt;CardHeader /&gt; &gt; should not merge className and style from props and from the theme if mergeClassNameAndStyle is false" time="0.03366625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Checkbox/Checkbox.test.js" timestamp="2025-09-10T11:25:37.420Z" hostname="Jans-MacBook-Air.local" tests="38" failures="0" errors="0" skipped="6" time="0.385707791">
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.038413">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.0145185">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0126505">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.004529208">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.006987792">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.005373292">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004079">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback" time="0.008499291">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.005179125">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback using the ownerState" time="0.006205166">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003196708">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002827167">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.003215042">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; allows overriding the input slot with an element using the slots.input prop" time="0.007382917">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.009033709">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004178875">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000436292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000310459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000219959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.00100525">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000237375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.006809875">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; should have the classes required for Checkbox" time="0.000215334">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; renders an unchecked `checkbox` by default" time="0.071639667">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; renders an checked `checkbox` when `checked={true}`" time="0.0111025">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; flips the checked property when clicked and calls onchange with the checked state" time="0.027032167">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; prop: indeterminate &gt; should render an indeterminate icon" time="0.008260375">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; prop: size &gt; add sizeSmall class to the root element when the size prop equals &quot;small&quot;" time="0.012252041">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; prop: size &gt; add sizeMedium class to the root element when the size prop equals &quot;medium&quot;" time="0.010237917">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; prop: size &gt; add sizeMedium class to the root element when the size is not expplicitly provided" time="0.015188917">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; theme: customization &gt; should be customizable in the theme using the size prop." time="0.000309584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; with FormControl &gt; enabled &gt; should not have the disabled class" time="0.0127525">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; with FormControl &gt; enabled &gt; should be overridden by props" time="0.011386833">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; with FormControl &gt; disabled &gt; should have the disabled class" time="0.007409791">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; with FormControl &gt; disabled &gt; should be overridden by props" time="0.007886667">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; should allow custom icon font sizes" time="0.007196042">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; should have a ripple" time="0.023127958">
        </testcase>
        <testcase classname="packages/mui-material/src/Checkbox/Checkbox.test.js" name="&lt;Checkbox /&gt; &gt; should not have ripple" time="0.011746583">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/CircularProgress/CircularProgress.test.js" timestamp="2025-09-10T11:25:37.423Z" hostname="Jans-MacBook-Air.local" tests="23" failures="0" errors="0" skipped="5" time="0.189270625">
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.060339875">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.010169167">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.010697708">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.009222333">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.021710291">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.005216">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.00054675">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.001959666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.00177125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000418834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000231209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.008390458">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; should render with the primary color by default" time="0.006854375">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; should render with the primary color" time="0.007439333">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; should render with the secondary color" time="0.006173709">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; should contain an SVG with the svg class, and a circle with the circle class" time="0.0041945">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; should render indeterminate variant by default" time="0.005606916">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; should render with a different size" time="0.00368075">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; prop: variant=&quot;determinate&quot; &gt; should render with determinate classes" time="0.004435708">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; prop: variant=&quot;determinate&quot; &gt; should set strokeDasharray of circle" time="0.004894917">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; prop: disableShrink  &gt; should default to false" time="0.00341625">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; prop: disableShrink  &gt; should render without disableShrink class when set to false" time="0.0037125">
        </testcase>
        <testcase classname="packages/mui-material/src/CircularProgress/CircularProgress.test.js" name="&lt;CircularProgress /&gt; &gt; prop: disableShrink  &gt; should render with disableShrink class when set to true" time="0.003419708">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" timestamp="2025-09-10T11:25:37.424Z" hostname="Jans-MacBook-Air.local" tests="27" failures="0" errors="0" skipped="0" time="0.179387834">
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; should render the children" time="0.015208958">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: onClickAway &gt; should be called when clicking away" time="0.005613084">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: onClickAway &gt; should not be called when clicking inside" time="0.006816083">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: onClickAway &gt; should be called when preventDefault is `true`" time="0.005485875">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: onClickAway &gt; should not be called when clicking inside a portaled element" time="0.011902625">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: onClickAway &gt; should be called when clicking inside a portaled element and `disableReactTree` is `true`" time="0.0040805">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: onClickAway &gt; should not be called even if the event propagation is stopped" time="0.003853291">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: onClickAway &gt; should not be called when onClick mounted the listener" time="0.004411417">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: onClickAway &gt; should not be called when onClickCapture mounted the listener" time="0.0028095">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: onClickAway &gt; should be called if an element is interleaved between mousedown and mouseup" time="0.003258125">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: mouseEvent &gt; should not call `props.onClickAway` when `props.mouseEvent` is `false`" time="0.001570083">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: mouseEvent &gt; should call `props.onClickAway` when mouse down is triggered" time="0.001611541">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: mouseEvent &gt; should call `props.onClickAway` when mouse up is triggered" time="0.001423667">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: mouseEvent &gt; should call `props.onClickAway` when pointer down is triggered" time="0.002952958">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: mouseEvent &gt; should call `props.onClickAway` when pointer up is triggered" time="0.002735667">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: touchEvent &gt; should not call `props.onClickAway` when `props.touchEvent` is `false`" time="0.001336041">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: touchEvent &gt; should call `props.onClickAway` when the appropriate touch event is triggered" time="0.001481333">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; prop: touchEvent &gt; should ignore `touchend` when preceded by `touchmove` event" time="0.001481875">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; should handle null child" time="0.001036083">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; when &apos;disableRectTree=false&apos; onClick triggers onClickAway if an outside target is removed" time="0.05426075">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; when &apos;disableRectTree=false&apos; onClick does not trigger onClickAway if an inside target is removed" time="0.011329417">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; when &apos;disableRectTree=true&apos; onClick triggers onClickAway if an outside target is removed" time="0.006028083">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; when &apos;disableRectTree=true&apos; onClick does not trigger onClickAway if an inside target is removed" time="0.006612417">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; when &apos;disableRectTree=false&apos; onClickCapture triggers onClickAway if an outside target is removed" time="0.003947416">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; when &apos;disableRectTree=false&apos; onClickCapture does not trigger onClickAway if an inside target is removed" time="0.007679333">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; when &apos;disableRectTree=true&apos; onClickCapture triggers onClickAway if an outside target is removed" time="0.006122334">
        </testcase>
        <testcase classname="packages/mui-material/src/ClickAwayListener/ClickAwayListener.test.js" name="&lt;ClickAwayListener /&gt; &gt; when &apos;disableRectTree=true&apos; onClickCapture does not trigger onClickAway if an inside target is removed" time="0.002613208">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Chip/Chip.test.js" timestamp="2025-09-10T11:25:37.425Z" hostname="Jans-MacBook-Air.local" tests="78" failures="0" errors="0" skipped="7" time="0.372922459">
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.022320083">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006313958">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005242959">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004628292">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007656625">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.003441333">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002604584">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label prop" time="0.002334375">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.label with the built-in ones" time="0.003141208">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002219458">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label callback" time="0.001824791">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.001876209">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label callback using the ownerState" time="0.003982833">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001662209">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001246">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; allows overriding the label slot with a component using the slots.label prop" time="0.001778917">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; allows overriding the label slot with an element using the slots.label prop" time="0.0016115">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004174333">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.003287458">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000369625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000215417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000163209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000154792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000165792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.00368025">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; text only &gt; is not in tab order" time="0.002671459">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; text only &gt; should renders certain classes and contains a label" time="0.003047333">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; text only &gt; should render with the color class name based on the color prop" time="0.011240666">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; clickable chip &gt; renders as a button in taborder with the label as the accessible name" time="0.032713833">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; clickable chip &gt; should render link with the button base" time="0.004629875">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; clickable chip &gt; should disable ripple when MuiButtonBase has disableRipple in theme" time="0.006987625">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; clickable chip &gt; should apply user value of tabIndex" time="0.005705584">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; clickable chip &gt; should render with the root and clickable class" time="0.003222458">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; clickable chip &gt; should render with the root and clickable primary class" time="0.007164708">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; clickable chip &gt; should render with the root and outlined clickable primary class" time="0.007066959">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; clickable chip &gt; should render with the root and outlined clickable secondary class" time="0.023647084">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; clickable chip &gt; should render with the root and filled clickable primary class" time="0.0048205">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; clickable chip &gt; should not be focused when a deletable chip is disabled and skipFocusWhenDisabled is true" time="0.0060885">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; clickable chip &gt; should render with the root and filled clickable secondary class" time="0.005458083">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; deletable Avatar chip &gt; should render a button in tab order with the avatar" time="0.006078875">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; deletable Avatar chip &gt; should not create ripples" time="0.005239416">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; deletable Avatar chip &gt; should apply user value of tabIndex" time="0.004889667">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; deletable Avatar chip &gt; fires onDelete when clicking the delete icon" time="0.005099541">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; deletable Avatar chip &gt; should stop propagation when clicking the delete icon" time="0.003808125">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; deletable Avatar chip &gt; should render with the root, deletable classes" time="0.003543375">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; deletable Avatar chip &gt; should render with the root, deletable and avatar primary classes" time="0.003935292">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; deletable Avatar chip &gt; should render with the root, deletable and avatar secondary classes" time="0.003619583">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; prop: deleteIcon &gt; should render a default icon with the root, deletable and deleteIcon classes" time="0.004498417">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; prop: deleteIcon &gt; should render default icon with the root, deletable and deleteIcon primary class" time="0.005663208">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; prop: deleteIcon &gt; should render a default icon with the root, deletable, deleteIcon secondary class" time="0.003468084">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; prop: deleteIcon &gt; should render default icon with the root, deletable, deleteIcon primary class and deleteIcon filled primary class" time="0.004600416">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; prop: deleteIcon &gt; should render default icon with the root, deletable, deleteIcon primary class and deleteIcon outlined primary class" time="0.003978833">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; prop: deleteIcon &gt; accepts a custom icon" time="0.004045417">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; reacts to keyboard chip &gt; should call onKeyDown when a key is pressed" time="0.00569525">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; reacts to keyboard chip &gt; should call onClick when `space` is released " time="0.004667333">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; reacts to keyboard chip &gt; should call onClick when `enter` is pressed " time="0.004528708">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; reacts to keyboard chip &gt; prop: onDelete &gt; should call onDelete &apos;Backspace&apos; is released" time="0.007394167">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; reacts to keyboard chip &gt; prop: onDelete &gt; should call onDelete &apos;Delete&apos; is released" time="0.0051135">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; reacts to keyboard chip &gt; prop: onDelete &gt; should not prevent default on input" time="0.003703">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; reacts to keyboard chip &gt; with children that generate events &gt; should not call onDelete for child keyup event when &apos;Backspace&apos; is released" time="0.005519834">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; reacts to keyboard chip &gt; with children that generate events &gt; should not call onDelete for child keyup event when &apos;Delete&apos; is released" time="0.003422459">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; reacts to keyboard chip &gt; with children that generate events &gt; should not call onClick for child keyup event when &apos;Space&apos; is released" time="0.004292083">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; reacts to keyboard chip &gt; with children that generate events &gt; should not call onClick for child keydown event when &apos;Enter&apos; is pressed" time="0.003402209">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; reacts to keyboard chip &gt; with children that generate events &gt; should not call onClick for child event when `space` is released" time="0.003020084">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; reacts to keyboard chip &gt; with children that generate events &gt; should not call onClick for child event when `enter` is pressed" time="0.006892834">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; prop: icon &gt; should render the icon" time="0.002107167">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; prop: icon &gt; should not override the icon&apos;s custom color" time="0.0076415">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; prop: size &gt; should render with the sizeSmall class" time="0.001899334">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; prop: size &gt; should render the label with the labelSmall class" time="0.001629291">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; prop: size &gt; should render an avatar with the avatarSmall class" time="0.001943">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; prop: size &gt; should render an icon with the icon and iconSmall classes" time="0.001836708">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; prop: size &gt; should render the delete icon with the deleteIcon and deleteIconSmall classes" time="0.002945458">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; event: focus &gt; has a focus-visible polyfill" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; event: focus &gt; should reset the focused state" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; CSS vars &gt; should not throw when there is theme value is CSS variable" time="0.008027333">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; should not throw on clicking Chip when onClick is not provided" time="0.002438167">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; should not throw on keydown when onKeyDown is not provided" time="0.003540125">
        </testcase>
        <testcase classname="packages/mui-material/src/Chip/Chip.test.js" name="&lt;Chip /&gt; &gt; should not throw on keyup when onKeyUp is not provided" time="0.005837458">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/CardMedia/CardMedia.test.js" timestamp="2025-09-10T11:25:37.429Z" hostname="Jans-MacBook-Air.local" tests="23" failures="0" errors="0" skipped="5" time="0.118709583">
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.030406375">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.012939">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.011241167">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004887833">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.009669542">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.008824208">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004221625">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.00098225">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.001019084">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000277833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000194417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000164167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.002793291">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; has the img role if `image` is defined" time="0.004211542">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; should have the backgroundImage specified" time="0.001697958">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; should have backgroundImage specified even though custom styles got passed" time="0.001443083">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; should be possible to overwrite backgroundImage via custom styles" time="0.001199042">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; prop: component &gt; should have `src` prop when media component specified" time="0.011631">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; prop: component &gt; should not have `src` prop when picture media component specified" time="0.002381875">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; prop: component &gt; should not have default inline style when media component specified" time="0.0012565">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; prop: component &gt; should not have `src` prop if not media component specified" time="0.002093041">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; prop: component &gt; should not have an explicit role when host components already apply image semantics" time="0.002517291">
        </testcase>
        <testcase classname="packages/mui-material/src/CardMedia/CardMedia.test.js" name="&lt;CardMedia /&gt; &gt; warnings &gt; warns when neither `children`, nor `image`, nor `src`, nor `component` are provided" time="0.00062075">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Container/Container.test.js" timestamp="2025-09-10T11:25:37.430Z" hostname="Jans-MacBook-Air.local" tests="14" failures="0" errors="0" skipped="5" time="0.055895875">
        <testcase classname="packages/mui-material/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.022340334">
        </testcase>
        <testcase classname="packages/mui-material/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.00493875">
        </testcase>
        <testcase classname="packages/mui-material/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004079917">
        </testcase>
        <testcase classname="packages/mui-material/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002346916">
        </testcase>
        <testcase classname="packages/mui-material/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004143292">
        </testcase>
        <testcase classname="packages/mui-material/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005596334">
        </testcase>
        <testcase classname="packages/mui-material/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001977916">
        </testcase>
        <testcase classname="packages/mui-material/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000649709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000589666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000269209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000197208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000173917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003143209">
        </testcase>
        <testcase classname="packages/mui-material/src/Container/Container.test.js" name="&lt;Container /&gt; &gt; prop: maxWidth &gt; should support different maxWidth values" time="0.003775542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Collapse/Collapse.test.js" timestamp="2025-09-10T11:25:37.431Z" hostname="Jans-MacBook-Air.local" tests="24" failures="0" errors="0" skipped="6" time="0.097143708">
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.020343792">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.004999">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.00380075">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002341125">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004145125">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004057416">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004556958">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000574667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000504959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000233375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000171292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000148416">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.00349075">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; should render a container around the wrapper" time="0.005215">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; should render a wrapper around the children" time="0.002810042">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; transition lifecycle &gt; should run in" time="0.007976792">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; transition lifecycle &gt; should run out" time="0.005364375">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; prop: timeout &gt; should delay based on height when timeout is auto" time="0.008877625">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; prop: timeout &gt; should use timeout as delay when timeout is number" time="0.004877125">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; prop: timeout &gt; should create proper easeOut animation onEntering" time="0.0035275">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; prop: timeout &gt; should create proper sharp animation onExiting" time="0.003082541">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; prop: collapsedSize &gt; should work when closed" time="0.001583042">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; prop: collapsedSize &gt; should be taken into account in handleExiting" time="0.002829">
        </testcase>
        <testcase classname="packages/mui-material/src/Collapse/Collapse.test.js" name="&lt;Collapse /&gt; &gt; should render correctly when external ownerState prop is passed" time="0.000195708">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/DialogActions/DialogActions.test.js" timestamp="2025-09-10T11:25:37.433Z" hostname="Jans-MacBook-Air.local" tests="13" failures="0" errors="0" skipped="6" time="0.043688458">
        <testcase classname="packages/mui-material/src/DialogActions/DialogActions.test.js" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.018829542">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogActions/DialogActions.test.js" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004712667">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogActions/DialogActions.test.js" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002771209">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogActions/DialogActions.test.js" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00306025">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogActions/DialogActions.test.js" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005612167">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogActions/DialogActions.test.js" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001728208">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogActions/DialogActions.test.js" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000415083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogActions/DialogActions.test.js" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000367167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogActions/DialogActions.test.js" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000579958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogActions/DialogActions.test.js" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000403375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogActions/DialogActions.test.js" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000285">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogActions/DialogActions.test.js" name="&lt;DialogActions /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003306458">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogActions/DialogActions.test.js" name="&lt;DialogActions /&gt; &gt; should apply margin to all children but the first one" time="0.000220375">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Dialog/Dialog.test.js" timestamp="2025-09-10T11:25:37.433Z" hostname="Jans-MacBook-Air.local" tests="58" failures="0" errors="0" skipped="7" time="0.686029958">
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.102984792">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.015220042">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.016535209">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.0169135">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition prop" time="0.015506375">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.008137084">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.009600584">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop prop" time="0.01110525">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; sets custom properties on the container slot&apos;s element with the slotProps.container prop" time="0.009070583">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.container with the built-in ones" time="0.00900425">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; sets custom properties on the paper slot&apos;s element with the slotProps.paper prop" time="0.006300834">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.paper with the built-in ones" time="0.009987209">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback" time="0.011436666">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.007111375">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop callback" time="0.005793458">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; sets custom properties on the container slot&apos;s element with the slotProps.container callback" time="0.007943708">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; sets custom properties on the paper slot&apos;s element with the slotProps.paper callback" time="0.007045292">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback using the ownerState" time="0.009153125">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.008377375">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop callback using the ownerState" time="0.010808292">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; sets custom properties on the container slot&apos;s element with the slotProps.container callback using the ownerState" time="0.005925625">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; sets custom properties on the paper slot&apos;s element with the slotProps.paper callback using the ownerState" time="0.013174584">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; allows overriding the transition slot with a component using the slots.transition prop" time="0.009551584">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003336167">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; allows overriding the backdrop slot with a component using the slots.backdrop prop" time="0.0044515">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; allows overriding the container slot with a component using the slots.container prop" time="0.009581208">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; allows overriding the paper slot with a component using the slots.paper prop" time="0.004610333">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.012519292">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.006181042">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000494709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000308625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000226459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.008418791">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; should work correctly when using css selectors for scroll=&quot;body&quot;" time="0.007346709">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; should work correctly when using css selectors for scroll=&quot;paper&quot;" time="0.008025792">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; should render with a TransitionComponent" time="0.005058292">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; calls onClose when pressing Esc and removes the content after the specified duration" time="0.016762167">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; should not close until the IME is cancelled" time="0.039054541">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; can ignore backdrop click and Esc keydown" time="0.017833208">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; backdrop &gt; does have `role` `presentation`" time="0.019021959">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; backdrop &gt; calls onClose when clicked" time="0.0110165">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; backdrop &gt; should not close if the target changes between the mousedown and the click" time="0.017832875">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; prop: classes &gt; should add the class on the Paper element" time="0.009239208">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; prop: maxWidth &gt; should use the right className" time="0.005860292">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; prop: maxWidth &gt; should use the right className when maxWidth={false}" time="0.039399792">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; prop: maxWidth &gt; should apply the correct max-width styles when maxWidth={false}" time="0.01613325">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; prop: fullWidth &gt; should set `fullWidth` class if specified" time="0.007320833">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; prop: fullWidth &gt; should not set `fullWidth` class if not specified" time="0.00776975">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; prop: fullScreen &gt; can render fullScreen if true" time="0.01703725">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; prop: fullScreen &gt; does not render fullScreen by default" time="0.011760708">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; prop: fullScreen &gt; scrolls if overflown on the Y axis" time="0.000333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; prop: PaperProps.className &gt; should merge the className" time="0.006195375">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; a11y &gt; can be labelled by another element" time="0.009778">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; a11y &gt; should add the aria-modal=&quot;true&quot; by default" time="0.020729959">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; a11y &gt; should render the custom aria-modal prop if provided" time="0.011952625">
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; prop: transitionDuration &gt; should render the default theme values by default" time="0.000305041">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; prop: transitionDuration &gt; should render the custom theme values" time="0.000197416">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Dialog/Dialog.test.js" name="&lt;Dialog /&gt; &gt; prop: transitionDuration &gt; should render the values provided via prop" time="0.00024225">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/CssBaseline/CssBaseline.test.js" timestamp="2025-09-10T11:25:37.436Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="3" time="0.023643209">
        <testcase classname="packages/mui-material/src/CssBaseline/CssBaseline.test.js" name="&lt;CssBaseline /&gt; &gt; renders its children" time="0.021479958">
        </testcase>
        <testcase classname="packages/mui-material/src/CssBaseline/CssBaseline.test.js" name="&lt;CssBaseline /&gt; &gt; supports theme overrides as string" time="0.000606542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CssBaseline/CssBaseline.test.js" name="&lt;CssBaseline /&gt; &gt; supports theme overrides as object" time="0.000345791">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/CssBaseline/CssBaseline.test.js" name="&lt;CssBaseline /&gt; &gt; supports theme overrides as callback" time="0.000280458">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/DialogContent/DialogContent.test.js" timestamp="2025-09-10T11:25:37.436Z" hostname="Jans-MacBook-Air.local" tests="13" failures="0" errors="0" skipped="5" time="0.130200208">
        <testcase classname="packages/mui-material/src/DialogContent/DialogContent.test.js" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.064219416">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContent/DialogContent.test.js" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.009654">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContent/DialogContent.test.js" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.009705542">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContent/DialogContent.test.js" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005683834">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContent/DialogContent.test.js" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.019559666">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContent/DialogContent.test.js" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.005568791">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContent/DialogContent.test.js" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000760584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContent/DialogContent.test.js" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.001123792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContent/DialogContent.test.js" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.002487792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContent/DialogContent.test.js" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000543667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContent/DialogContent.test.js" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.0007565">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContent/DialogContent.test.js" name="&lt;DialogContent /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005556833">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContent/DialogContent.test.js" name="&lt;DialogContent /&gt; &gt; should render children" time="0.002122542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/DialogTitle/DialogTitle.test.js" timestamp="2025-09-10T11:25:37.437Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="5" time="0.294079792">
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.050242958">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.013168709">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0048115">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008166417">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.015798459">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004349167">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000429625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000444041">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.001279209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000430208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000904834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.00743425">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; should render JSX children" time="0.006013">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; should render string children as given string" time="0.006500792">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; prop: id &gt; should apply the id attribute provided to the Dialog title" time="0.131958791">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; prop: id &gt; should fallback to the aria-labelledby from the Dialog" time="0.014096083">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogTitle/DialogTitle.test.js" name="&lt;DialogTitle /&gt; &gt; prop: id &gt; should apply the id attribute explicitly provided to the DialogTitle and not take from Dialog" time="0.024679125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/DialogContentText/DialogContentText.test.js" timestamp="2025-09-10T11:25:37.438Z" hostname="Jans-MacBook-Air.local" tests="12" failures="0" errors="0" skipped="3" time="0.063327125">
        <testcase classname="packages/mui-material/src/DialogContentText/DialogContentText.test.js" name="&lt;DialogContentText /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.023021333">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContentText/DialogContentText.test.js" name="&lt;DialogContentText /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006565375">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContentText/DialogContentText.test.js" name="&lt;DialogContentText /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006050291">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContentText/DialogContentText.test.js" name="&lt;DialogContentText /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002842125">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContentText/DialogContentText.test.js" name="&lt;DialogContentText /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005720917">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContentText/DialogContentText.test.js" name="&lt;DialogContentText /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004607125">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContentText/DialogContentText.test.js" name="&lt;DialogContentText /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00260525">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContentText/DialogContentText.test.js" name="&lt;DialogContentText /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000578875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContentText/DialogContentText.test.js" name="&lt;DialogContentText /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000557917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContentText/DialogContentText.test.js" name="&lt;DialogContentText /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000263042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContentText/DialogContentText.test.js" name="&lt;DialogContentText /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004233458">
        </testcase>
        <testcase classname="packages/mui-material/src/DialogContentText/DialogContentText.test.js" name="&lt;DialogContentText /&gt; &gt; prop: children &gt; should render children" time="0.0045135">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Drawer/Drawer.test.js" timestamp="2025-09-10T11:25:37.438Z" hostname="Jans-MacBook-Air.local" tests="70" failures="0" errors="0" skipped="10" time="0.420302667">
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.066312125">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.015325917">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.010124041">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008301917">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.008761">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.009159917">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the paper slot&apos;s element with the slotProps.paper prop" time="0.006004">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.paper with the built-in ones" time="0.00732825">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop prop" time="0.008796375">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.backdrop with the built-in ones" time="0.007597708">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition prop" time="0.005115041">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004788708">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the paper slot&apos;s element with the slotProps.paper callback" time="0.005699333">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop callback" time="0.008729792">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback" time="0.006485375">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.006443125">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the paper slot&apos;s element with the slotProps.paper callback using the ownerState" time="0.005477709">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop callback using the ownerState" time="0.007194042">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback using the ownerState" time="0.005290625">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002871667">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; allows overriding the paper slot with a component using the slots.paper prop" time="0.005942792">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; allows overriding the backdrop slot with a component using the slots.backdrop prop" time="0.006183291">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; allows overriding the backdrop slot with an element using the slots.backdrop prop" time="0.004177542">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; allows overriding the transition slot with a component using the slots.transition prop" time="0.004507333">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; allows overriding the transition slot with an element using the slots.transition prop" time="0.007509375">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.007467417">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.005988834">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000462583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000265084">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000213334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005835542">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.00200275">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.001807917">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.001560792">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.001634666">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the docked slot&apos;s element with the slotProps.docked prop" time="0.001516042">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.docked with the built-in ones" time="0.001460583">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the docked slot&apos;s element with the slotProps.docked callback" time="0.001821166">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; sets custom properties on the docked slot&apos;s element with the slotProps.docked callback using the ownerState" time="0.001560084">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; allows overriding the docked slot with a component using the slots.docked prop" time="0.001574417">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; allows overriding the docked slot with an element using the slots.docked prop" time="0.002269167">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.003473458">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.003106959">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.00044175">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000271667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000169042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000235333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000198667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003219125">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; prop: variant=temporary &gt; transitionDuration property &gt; should delay the slide transition to complete using default theme values by default" time="0.000368958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; prop: variant=temporary &gt; transitionDuration property &gt; should delay the slide transition to complete using custom theme values" time="0.000207833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; prop: variant=temporary &gt; transitionDuration property &gt; delay the slide transition to complete using values provided via prop" time="0.034664875">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; prop: variant=temporary &gt; accessibility &gt; should have role=&quot;dialog&quot; and aria-modal=&quot;true&quot; when variant is temporary" time="0.0051515">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; prop: variant=temporary &gt; accessibility &gt; should not have role=&quot;dialog&quot; and aria-modal=&quot;true&quot; when variant is permanent" time="0.0024455">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; prop: variant=temporary &gt; accessibility &gt; should not have role=&quot;dialog&quot; and aria-modal=&quot;true&quot; when variant is persistent" time="0.006769708">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; prop: variant=temporary &gt; should set the custom className for Modal when variant is temporary" time="0.005605583">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; prop: variant=temporary &gt; should set the Paper className" time="0.004799125">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; prop: variant=temporary &gt; should be closed by default" time="0.001459917">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; prop: variant=temporary &gt; opening and closing &gt; should open and close" time="0.012749333">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; prop: variant=persistent &gt; should render a div instead of a Modal when persistent" time="0.006450917">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; prop: variant=persistent &gt; should render Slide &gt; Paper inside the div" time="0.010252875">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; prop: variant=permanent &gt; should render a div instead of a Modal when permanent" time="0.002189375">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; prop: PaperProps &gt; should merge class names" time="0.002589834">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; slide direction &gt; should return the opposing slide direction" time="0.012618792">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; Right To Left &gt; should switch left and right anchor when theme is right-to-left" time="0.007629542">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; isHorizontal &gt; should recognize left and right as horizontal swiping directions" time="0.000273959">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; getAnchor &gt; should return the anchor" time="0.000840417">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; getAnchor &gt; should switch left/right if RTL is enabled" time="0.000188833">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; zIndex &gt; should set correct zIndex on the root element" time="0.006322083">
        </testcase>
        <testcase classname="packages/mui-material/src/Drawer/Drawer.test.js" name="&lt;Drawer /&gt; &gt; prop: anchor &gt; should set correct class name on the root element" time="0.010942416">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Fab/Fab.test.js" timestamp="2025-09-10T11:25:37.442Z" hostname="Jans-MacBook-Air.local" tests="30" failures="0" errors="0" skipped="6" time="0.300369208">
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.02825425">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.016888708">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.008040584">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005492625">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.011107125">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004591042">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002879792">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000587625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000520042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000721084">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.00092225">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.00090375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004069333">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should render with the root class but no others" time="0.050202292">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should render an extended floating action button" time="0.006084542">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should render a primary floating action button" time="0.008214458">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should render a secondary floating action button" time="0.004634584">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should render a info floating action button" time="0.004497875">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should render a error floating action button" time="0.005374208">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should render a warning floating action button" time="0.00532975">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should render a success floating action button" time="0.004884541">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should render a small floating action button" time="0.022321709">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should render a medium floating action button" time="0.00641325">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should have a ripple" time="0.03073425">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should pass disableRipple to ButtonBase" time="0.039127917">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should have a focusRipple" time="0.001276125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should pass disableFocusRipple to ButtonBase" time="0.009428958">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should pass disabled class to ButtonBase" time="0.002331375">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; should render Icon children with right classes" time="0.005352333">
        </testcase>
        <testcase classname="packages/mui-material/src/Fab/Fab.test.js" name="&lt;Fab /&gt; &gt; server-side &gt; should server-side render" time="0.00735325">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/FilledInput/FilledInput.test.js" timestamp="2025-09-10T11:25:37.444Z" hostname="Jans-MacBook-Air.local" tests="35" failures="0" errors="0" skipped="5" time="0.331113833">
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.047288375">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.018746917">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.006869167">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.021044042">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.011697625">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.004301">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the componentsProps.root prop" time="0.004246">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.root&apos; over componentsProps.root if both are defined" time="0.0137655">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.0172825">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.input with the built-in ones" time="0.005630041">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the componentsProps.input prop" time="0.006982667">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.input&apos; over componentsProps.input if both are defined" time="0.0033105">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002665584">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the components.Root prop" time="0.002649875">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.root&apos; over components.Root if both are defined" time="0.002875917">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.003059875">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the components.Input prop" time="0.007862958">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.input&apos; over components.Input if both are defined" time="0.00958">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006589667">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00393975">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000365125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.00092825">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000834292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000691041">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.00064925">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.007215334">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; should have the underline class" time="0.003643541">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; color={undefined} should not result in crash" time="0.0054635">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; can disable the underline" time="0.003211417">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; should forward classes to InputBase" time="0.0032235">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; should respects the componentsProps if passed" time="0.011931208">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; should respect the classes coming from InputBase" time="0.055943375">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; should not throw: &quot;Maximum call stack size exceeded&quot; if both slotProps and an adornment are passed" time="0.012497083">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; should not have following classes" time="0.008811292">
        </testcase>
        <testcase classname="packages/mui-material/src/FilledInput/FilledInput.test.js" name="&lt;FilledInput /&gt; &gt; should have following classes" time="0.010164083">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" timestamp="2025-09-10T11:25:37.445Z" hostname="Jans-MacBook-Air.local" tests="43" failures="0" errors="0" skipped="5" time="0.197859292">
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.02869675">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.01113525">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00764">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006286167">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; sets custom properties on the typography slot&apos;s element with the slotProps.typography prop" time="0.007589125">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.typography with the built-in ones" time="0.006604834">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; sets custom properties on the typography slot&apos;s element with the slotProps.typography callback" time="0.004185">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; sets custom properties on the typography slot&apos;s element with the slotProps.typography callback using the ownerState" time="0.004325208">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; allows overriding the typography slot with a component using the slots.typography prop" time="0.005120125">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; allows overriding the typography slot with an element using the slots.typography prop" time="0.006521875">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.0076555">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004801666">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000392625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000227333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000171208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000167166">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000145375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.008898959">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; prop: label &gt; should render the label text inside an additional element" time="0.003298958">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; prop: label &gt; should render numeric labels" time="0.001796667">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; prop: label &gt; should render node labels" time="0.001976416">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; prop: label &gt; should render fragment labels" time="0.002025875">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; prop: label &gt; should render with nullish labels" time="0.001791">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; prop: disabled &gt; should disable everything 1" time="0.001906667">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; prop: disabled &gt; should disable everything 2" time="0.001795291">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; prop: labelPlacement &gt; should have the `start` class" time="0.00157625">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; prop: labelPlacement &gt; should have the `top` class" time="0.00163425">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; prop: labelPlacement &gt; should have the `bottom` class" time="0.001417583">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; prop: disableTypography &gt; should not add a typography component" time="0.001381084">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; prop: disableTypography &gt; should auto disable when passed a Typography component" time="0.001642042">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; prop: required &gt; should visually show an asterisk but not include it in the a11y tree" time="0.029525417">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; prop: required &gt; should not show an asterisk by default" time="0.001824542">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; componentsProps: typography &gt; should spread its contents to the typography element" time="0.008807375">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; with FormControl &gt; error &gt; should have the error class" time="0.002460042">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; with FormControl &gt; enabled &gt; should not have the disabled class" time="0.001852958">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; with FormControl &gt; enabled &gt; should be overridden by props" time="0.002326">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; with FormControl &gt; disabled &gt; should have the disabled class" time="0.004687625">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; with FormControl &gt; disabled &gt; should be overridden by props" time="0.00193275">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; with FormControl &gt; required &gt; should not have the required class" time="0.001768667">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; with FormControl &gt; required &gt; should be overridden by props" time="0.002666625">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; with FormControl &gt; required &gt; should not have the required attribute" time="0.002099">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; should not inject extra props" time="0.001559583">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControlLabel/FormControlLabel.test.js" name="&lt;FormControlLabel /&gt; &gt; should forward some props" time="0.0015125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Fade/Fade.test.js" timestamp="2025-09-10T11:25:37.448Z" hostname="Jans-MacBook-Air.local" tests="11" failures="0" errors="0" skipped="3" time="0.05423325">
        <testcase classname="packages/mui-material/src/Fade/Fade.test.js" name="&lt;Fade /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.023688208">
        </testcase>
        <testcase classname="packages/mui-material/src/Fade/Fade.test.js" name="&lt;Fade /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004373625">
        </testcase>
        <testcase classname="packages/mui-material/src/Fade/Fade.test.js" name="&lt;Fade /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.006030709">
        </testcase>
        <testcase classname="packages/mui-material/src/Fade/Fade.test.js" name="&lt;Fade /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.001640666">
        </testcase>
        <testcase classname="packages/mui-material/src/Fade/Fade.test.js" name="&lt;Fade /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004559083">
        </testcase>
        <testcase classname="packages/mui-material/src/Fade/Fade.test.js" name="&lt;Fade /&gt; &gt; transition lifecycle &gt; calls the appropriate callbacks for each transition" time="0.005694958">
        </testcase>
        <testcase classname="packages/mui-material/src/Fade/Fade.test.js" name="&lt;Fade /&gt; &gt; prop: appear &gt; should work when initially hidden, appear=true" time="0.002588833">
        </testcase>
        <testcase classname="packages/mui-material/src/Fade/Fade.test.js" name="&lt;Fade /&gt; &gt; prop: appear &gt; should work when initially hidden, appear=false" time="0.001502875">
        </testcase>
        <testcase classname="packages/mui-material/src/Fade/Fade.test.js" name="&lt;Fade /&gt; &gt; prop: timeout &gt; should render the default theme values by default" time="0.000565041">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Fade/Fade.test.js" name="&lt;Fade /&gt; &gt; prop: timeout &gt; should render the custom theme values" time="0.000201458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Fade/Fade.test.js" name="&lt;Fade /&gt; &gt; prop: timeout &gt; should render the values provided via prop" time="0.000138167">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/FormControl/FormControl.test.js" timestamp="2025-09-10T11:25:37.449Z" hostname="Jans-MacBook-Air.local" tests="37" failures="0" errors="0" skipped="5" time="0.1794965">
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.018786667">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.0042665">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003277459">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002205334">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.003792042">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.003236791">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001437416">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000433208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000480416">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000244417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000173208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000153667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.002521125">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; initial state &gt; should have no margin" time="0.002145416">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; initial state &gt; can have the margin normal class" time="0.001426583">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; initial state &gt; can have the margin dense class" time="0.0038075">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; initial state &gt; should not be filled initially" time="0.002108959">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; initial state &gt; should not be focused initially" time="0.001327958">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; prop: required &gt; should not apply it to the DOM" time="0.001176">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; prop: disabled &gt; will be unfocused if it gets disabled" time="0.021193208">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; prop: focused &gt; should display input in focused state" time="0.005456542">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; prop: focused &gt; ignores focused when disabled" time="0.005216291">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; input &gt; should be filled when a value is set" time="0.004659167">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; input &gt; should be filled when a value is set through inputProps" time="0.014809292">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; input &gt; should be filled when a defaultValue is set" time="0.004201417">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; input &gt; should not be adornedStart with an endAdornment" time="0.007003625">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; input &gt; should be adornedStar with a startAdornment" time="0.011756542">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; select &gt; should not be adorned without a startAdornment" time="0.017955042">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; select &gt; should be adorned with a startAdornment" time="0.008911583">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; useFormControl &gt; from props &gt; should have the required prop from the instance" time="0.002090291">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; useFormControl &gt; from props &gt; should have the error prop from the instance" time="0.001517166">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; useFormControl &gt; from props &gt; should have the margin prop from the instance" time="0.006228583">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; useFormControl &gt; from props &gt; should have the fullWidth prop from the instance" time="0.00397825">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; useFormControl &gt; callbacks &gt; onFilled &gt; should set the filled state" time="0.001704">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; useFormControl &gt; callbacks &gt; onEmpty &gt; should clean the filled state" time="0.001525458">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; useFormControl &gt; callbacks &gt; handleFocus &gt; should set the focused state" time="0.002658">
        </testcase>
        <testcase classname="packages/mui-material/src/FormControl/FormControl.test.js" name="&lt;FormControl /&gt; &gt; useFormControl &gt; callbacks &gt; handleBlur &gt; should clear the focused state" time="0.003084833">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Divider/Divider.test.js" timestamp="2025-09-10T11:25:37.450Z" hostname="Jans-MacBook-Air.local" tests="34" failures="0" errors="0" skipped="7" time="0.112901709">
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.018388917">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.004584625">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003236">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.001863916">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00382225">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004272084">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001768584">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000464375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000471958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000225042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000169375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.00015325">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003764041">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; should set the absolute class" time="0.003661166">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; should set the light class" time="0.00169675">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; should set the flexItem class" time="0.001209917">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; prop: children &gt; should render with the children" time="0.002695792">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; prop: children &gt; should set the default text class" time="0.005498">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; prop: children &gt; prop: orientation &gt; should set the textVertical class" time="0.002230458">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; prop: children &gt; prop: textAlign &gt; should set the textAlignRight class" time="0.00180025">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; prop: children &gt; prop: textAlign &gt; should set the textAlignLeft class" time="0.001707875">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; prop: children &gt; prop: textAlign &gt; should not set the textAlignRight class if orientation=&quot;vertical&quot;" time="0.001532459">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; prop: children &gt; prop: textAlign &gt; should not set the textAlignLeft class if orientation=&quot;vertical&quot;" time="0.001492084">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; prop: children &gt; custom border style &gt; should set the dashed border-left-style in before and after pseudo-elements when orientation is vertical" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; prop: children &gt; custom border style &gt; should set the dashed border-top-style in before and after pseudo-elements when orientation is horizontal" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; prop: variant &gt; should default to variant=&quot;fullWidth&quot;" time="0.001042792">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; prop: variant &gt; prop: variant=&quot;fullWidth&quot;  &gt; should render with the root and default class" time="0.000875125">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; prop: variant &gt; prop: variant=&quot;inset&quot;  &gt; should set the inset class" time="0.000903166">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; prop: variant &gt; prop: variant=&quot;middle&quot; with default orientation (horizontal) &gt; should set the middle class" time="0.025305959">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; prop: variant &gt; prop: variant=&quot;middle&quot; with orientation=&quot;vertical&quot; &gt; should set the middle class with marginTop &amp; marginBottom styles" time="0.002774667">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; role &gt; avoids adding implicit aria semantics" time="0.007275291">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; role &gt; adds a proper role if none is specified" time="0.002362875">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; role &gt; adds a proper role with vertical orientation" time="0.002527084">
        </testcase>
        <testcase classname="packages/mui-material/src/Divider/Divider.test.js" name="&lt;Divider /&gt; &gt; role &gt; overrides the computed role with the provided one" time="0.001466208">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/FormGroup/FormGroup.test.js" timestamp="2025-09-10T11:25:37.452Z" hostname="Jans-MacBook-Air.local" tests="14" failures="0" errors="0" skipped="5" time="0.065806208">
        <testcase classname="packages/mui-material/src/FormGroup/FormGroup.test.js" name="&lt;FormGroup /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.019776292">
        </testcase>
        <testcase classname="packages/mui-material/src/FormGroup/FormGroup.test.js" name="&lt;FormGroup /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004167417">
        </testcase>
        <testcase classname="packages/mui-material/src/FormGroup/FormGroup.test.js" name="&lt;FormGroup /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.006565042">
        </testcase>
        <testcase classname="packages/mui-material/src/FormGroup/FormGroup.test.js" name="&lt;FormGroup /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005477167">
        </testcase>
        <testcase classname="packages/mui-material/src/FormGroup/FormGroup.test.js" name="&lt;FormGroup /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.007614709">
        </testcase>
        <testcase classname="packages/mui-material/src/FormGroup/FormGroup.test.js" name="&lt;FormGroup /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001845">
        </testcase>
        <testcase classname="packages/mui-material/src/FormGroup/FormGroup.test.js" name="&lt;FormGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000449792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormGroup/FormGroup.test.js" name="&lt;FormGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.001262458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormGroup/FormGroup.test.js" name="&lt;FormGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000630166">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormGroup/FormGroup.test.js" name="&lt;FormGroup /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000262875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormGroup/FormGroup.test.js" name="&lt;FormGroup /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000201542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormGroup/FormGroup.test.js" name="&lt;FormGroup /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003733667">
        </testcase>
        <testcase classname="packages/mui-material/src/FormGroup/FormGroup.test.js" name="&lt;FormGroup /&gt; &gt; should render a div with a div child" time="0.00572375">
        </testcase>
        <testcase classname="packages/mui-material/src/FormGroup/FormGroup.test.js" name="&lt;FormGroup /&gt; &gt; with FormControl &gt; error &gt; should have the error class" time="0.006489333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/FormLabel/FormLabel.test.js" timestamp="2025-09-10T11:25:37.453Z" hostname="Jans-MacBook-Air.local" tests="26" failures="0" errors="0" skipped="5" time="0.141256416">
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.026565916">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.004872583">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006196875">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003563792">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.003742917">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005589541">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001904708">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000500167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000477833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000227958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000170209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000153125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004189917">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; prop: required &gt; should visually show an asterisk but not include it in the a11y tree" time="0.033497458">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; prop: required &gt; should not show an asterisk by default" time="0.002795083">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; prop: error &gt; should have an error class" time="0.005455833">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; with FormControl &gt; error &gt; should have the error class" time="0.003057875">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; with FormControl &gt; error &gt; should be overridden by props" time="0.006382459">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; with FormControl &gt; focused &gt; should have the focused class" time="0.003798292">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; with FormControl &gt; focused &gt; should be overridden by props" time="0.005655666">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; with FormControl &gt; required &gt; should show an asterisk" time="0.0024465">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; with FormControl &gt; required &gt; should be overridden by props" time="0.003830708">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; prop: color &gt; should have color secondary class" time="0.001273417">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; prop: color &gt; should have the focused class and style" time="0.003915125">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; prop: color &gt; should have the error class and style, even when focused" time="0.003704792">
        </testcase>
        <testcase classname="packages/mui-material/src/FormLabel/FormLabel.test.js" name="&lt;FormLabel /&gt; &gt; prop: color &gt; should have the disabled class and style, even when focused" time="0.004964417">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Grid/Grid.test.js" timestamp="2025-09-10T11:25:37.454Z" hostname="Jans-MacBook-Air.local" tests="16" failures="0" errors="0" skipped="5" time="0.259394584">
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.023666875">
        </testcase>
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.004645375">
        </testcase>
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003769417">
        </testcase>
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004056875">
        </testcase>
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004098125">
        </testcase>
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.018119792">
        </testcase>
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.049237458">
        </testcase>
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.003435459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.0018565">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.001713167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.0004565">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000353292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.076868667">
        </testcase>
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; should not crash with theme scoping" time="0.019853209">
        </testcase>
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; should render with the container class" time="0.002677417">
        </testcase>
        <testcase classname="packages/mui-material/src/Grid/Grid.test.js" name="&lt;Grid /&gt; &gt; should have container styles passed from theme" time="0.040624667">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/GlobalStyles/GlobalStyles.test.js" timestamp="2025-09-10T11:25:37.455Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="2" time="0.016980542">
        <testcase classname="packages/mui-material/src/GlobalStyles/GlobalStyles.test.js" name="Global &gt; should provide default theme" time="0.00632525">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/GlobalStyles/GlobalStyles.test.js" name="Global &gt; should respect context theme if available" time="0.000623709">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/FormHelperText/FormHelperText.test.js" timestamp="2025-09-10T11:25:37.455Z" hostname="Jans-MacBook-Air.local" tests="20" failures="0" errors="0" skipped="5" time="0.103779833">
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.021421584">
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005718833">
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005182375">
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002214625">
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.003893">
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005300292">
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002086">
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000672208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.001279875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.0009475">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000340583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000208958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003578291">
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; prop: error &gt; should have an error class" time="0.003496834">
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; with FormControl &gt; error &gt; should have the error class" time="0.006553208">
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; with FormControl &gt; error &gt; should be overridden by props" time="0.014896625">
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; with FormControl &gt; disabled &gt; should have the disabled class" time="0.0047305">
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; with FormControl &gt; disabled &gt; should be overridden by props" time="0.00332775">
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; with FormControl &gt; size &gt; small margin FormControl &gt; should have the small class" time="0.005652458">
        </testcase>
        <testcase classname="packages/mui-material/src/FormHelperText/FormHelperText.test.js" name="&lt;FormHelperText /&gt; &gt; with FormControl &gt; size &gt; should be overridden by props" time="0.00696525">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Grow/Grow.test.js" timestamp="2025-09-10T11:25:37.456Z" hostname="Jans-MacBook-Air.local" tests="12" failures="0" errors="0" skipped="0" time="0.108695">
        <testcase classname="packages/mui-material/src/Grow/Grow.test.js" name="&lt;Grow /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.029540334">
        </testcase>
        <testcase classname="packages/mui-material/src/Grow/Grow.test.js" name="&lt;Grow /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.008813083">
        </testcase>
        <testcase classname="packages/mui-material/src/Grow/Grow.test.js" name="&lt;Grow /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004373125">
        </testcase>
        <testcase classname="packages/mui-material/src/Grow/Grow.test.js" name="&lt;Grow /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.001139875">
        </testcase>
        <testcase classname="packages/mui-material/src/Grow/Grow.test.js" name="&lt;Grow /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.007924083">
        </testcase>
        <testcase classname="packages/mui-material/src/Grow/Grow.test.js" name="&lt;Grow /&gt; &gt; calls the appropriate callbacks for each transition &gt; calls the appropriate callbacks for each transition" time="0.01322975">
        </testcase>
        <testcase classname="packages/mui-material/src/Grow/Grow.test.js" name="&lt;Grow /&gt; &gt; prop: timeout &gt; onEnter &gt; should create proper easeOut animation" time="0.006348834">
        </testcase>
        <testcase classname="packages/mui-material/src/Grow/Grow.test.js" name="&lt;Grow /&gt; &gt; prop: timeout &gt; onEnter &gt; should delay based on height when timeout is auto" time="0.017541541">
        </testcase>
        <testcase classname="packages/mui-material/src/Grow/Grow.test.js" name="&lt;Grow /&gt; &gt; prop: timeout &gt; onEnter &gt; should use timeout as delay when timeout is number" time="0.003360209">
        </testcase>
        <testcase classname="packages/mui-material/src/Grow/Grow.test.js" name="&lt;Grow /&gt; &gt; prop: timeout &gt; onExit &gt; should delay based on height when timeout is auto" time="0.003940625">
        </testcase>
        <testcase classname="packages/mui-material/src/Grow/Grow.test.js" name="&lt;Grow /&gt; &gt; prop: timeout &gt; onExit &gt; should use timeout as delay when timeout is number" time="0.007381333">
        </testcase>
        <testcase classname="packages/mui-material/src/Grow/Grow.test.js" name="&lt;Grow /&gt; &gt; prop: timeout &gt; onExit &gt; should create proper sharp animation" time="0.002582584">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/IconButton/IconButton.test.js" timestamp="2025-09-10T11:25:37.456Z" hostname="Jans-MacBook-Air.local" tests="36" failures="0" errors="0" skipped="6" time="0.4095015">
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.040472292">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.010543416">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.011945042">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006921083">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.009388083">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004385375">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.001205709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000719875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000739666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000478583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.0002085">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.007598">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; should render Icon children with right classes" time="0.00728675">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; should have a ripple" time="0.102805792">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; can disable the ripple and hover effect" time="0.014778208">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: size &gt; should render the right class" time="0.03240725">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: edge &gt; edge=&quot;start&quot; should render the right class" time="0.002416584">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: edge &gt; edge=&quot;end&quot; should render the right class" time="0.003036">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: edge &gt; no edge should render the right class" time="0.003341542">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: disabled &gt; should disable the component" time="0.0093305">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: color &gt; should render the primary class" time="0.005989833">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: color &gt; should render the secondary class" time="0.003942083">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: color &gt; should render the error class" time="0.006499875">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: color &gt; should render the info class" time="0.007465708">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: color &gt; should render the success class" time="0.005114084">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: color &gt; should render the warning class" time="0.007111167">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; should raise a warning about onClick in children because of Firefox" time="0.000362042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; should not throw error for a custom color" time="0.0007325">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; should disable ripple if disableRipple:true is set in MuiButtonBase" time="0.01568375">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: loading &gt; does not render the wrapper by default" time="0.004971542">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: loading &gt; disables the button" time="0.009963208">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: loading &gt; cannot be enabled while `loading`" time="0.02377175">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: loading &gt; renders a progressbar that is labelled by the button" time="0.021027375">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: loading &gt; has no id when `loading=false` and no `id` prop is present`" time="0.007963416">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: loadingIndicator &gt; is not rendered by default" time="0.0112735">
        </testcase>
        <testcase classname="packages/mui-material/src/IconButton/IconButton.test.js" name="&lt;IconButton /&gt; &gt; prop: loadingIndicator &gt; is rendered before the children when `loading`" time="0.003308333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ImageList/ImageList.test.js" timestamp="2025-09-10T11:25:37.458Z" hostname="Jans-MacBook-Air.local" tests="27" failures="0" errors="0" skipped="7" time="0.135471291">
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.025394375">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004761375">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003028542">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.010205583">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005839208">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001698208">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000416417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000338458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000434583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000216417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000161208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.002718333">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; should render children by default" time="0.00479775">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; classes: &gt; should render with the root and standard classes by default" time="0.009672833">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; classes: &gt; should render with the masonry class" time="0.003193292">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; classes: &gt; should render with the quilted class" time="0.002603084">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; classes: &gt; should render with the woven class" time="0.002279291">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; style attribute: &gt; should render with default grid-template-columns and gap styles" time="0.014006">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; style attribute: &gt; should overwrite style" time="0.01400375">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; props: &gt; prop: component &gt; should render a ul by default" time="0.006997834">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; props: &gt; prop: component &gt; should render a different component" time="0.002569583">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; props: &gt; prop: className &gt; should append the className to the root element" time="0.004200833">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; props: &gt; prop: variant &gt; should render with column-count and column-gap styles" time="0.003438417">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; props: &gt; prop: cols &gt; should render with modified grid-template-columns style" time="0.004163958">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; props: &gt; prop: cols &gt; should render with modified column-count style" time="0.004407709">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; props: &gt; prop: gap &gt; should render with modified grid-template-columns style" time="0.000788583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageList/ImageList.test.js" name="&lt;ImageList /&gt; &gt; props: &gt; prop: gap &gt; should render with modified column-gap style" time="0.00017825">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ImageListItem/ImageListItem.test.js" timestamp="2025-09-10T11:25:37.460Z" hostname="Jans-MacBook-Air.local" tests="19" failures="0" errors="0" skipped="5" time="0.113615541">
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.028028625">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.00441975">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.011078125">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00408975">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.013049042">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004454875">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.001355708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.00092875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.001382083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000865375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.001220666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.006828042">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; mount image &gt; should handle missing image" time="0.002820416">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; props: &gt; prop: children &gt; should render children by default" time="0.009748">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; props: &gt; prop: component &gt; should render a different component" time="0.003943542">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; props: &gt; prop: variant &gt; should render with the  woven class" time="0.009414042">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; classes: &gt; should render with the root and standard classes by default" time="0.004164667">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; classes: &gt; should render img with the img class" time="0.001707667">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItem/ImageListItem.test.js" name="&lt;ImageListItem /&gt; &gt; classes: &gt; should not render a non-img with the img class" time="0.002292458">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" timestamp="2025-09-10T11:25:37.461Z" hostname="Jans-MacBook-Air.local" tests="21" failures="0" errors="0" skipped="5" time="0.087640416">
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.026283792">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006666875">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005686834">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004439042">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.007370875">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002342375">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000377375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000351917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000419333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000208333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000161">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003929625">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; props: &gt; prop: title &gt; should render a title" time="0.001993834">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; props: &gt; prop: subtitle &gt; should render a subtitle" time="0.005627042">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; props: &gt; prop:actionPosition &gt; should render the actionPositionLeft class" time="0.005890084">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; props: &gt; prop:actionPosition &gt; should render the actionPositionRight class" time="0.003352042">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; props: &gt; prop: position &gt; position=&quot;top&quot; &gt; should render the positionTop class" time="0.001793417">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; props: &gt; prop: position &gt; position=&quot;below&quot; &gt; should render the positionBelow class" time="0.004053291">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; props: &gt; prop: position &gt; position=&quot;below&quot; &gt; should render a child div with the titleWrapBelow class" time="0.0016905">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; props: &gt; prop: actionPosition &gt; should render a child div with the titleWrapActionPosLeft class" time="0.0018875">
        </testcase>
        <testcase classname="packages/mui-material/src/ImageListItemBar/ImageListItemBar.test.js" name="&lt;ImageListItemBar /&gt; &gt; classes: &gt; should render with the root and positionBottom classes by default" time="0.001559">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/InitColorSchemeScript/InitColorSchemeScript.test.tsx" timestamp="2025-09-10T11:25:37.462Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.020472583">
        <testcase classname="packages/mui-material/src/InitColorSchemeScript/InitColorSchemeScript.test.tsx" name="InitColorSchemeScript &gt; should render as expected" time="0.01950325">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Icon/Icon.test.js" timestamp="2025-09-10T11:25:37.462Z" hostname="Jans-MacBook-Air.local" tests="19" failures="0" errors="0" skipped="3" time="0.081362667">
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.028433833">
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005323709">
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007795333">
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003150875">
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005019584">
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004956709">
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002163333">
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000592167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000547083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000293125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003586583">
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; renders children by default" time="0.003008208">
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; optional classes &gt; should render with the secondary color" time="0.0018085">
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; optional classes &gt; should render with the action color" time="0.001623375">
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; optional classes &gt; should render with the error color" time="0.001793125">
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; optional classes &gt; should render with the primary class" time="0.001886833">
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; optional classes &gt; should render without the default class" time="0.001531333">
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; optional classes &gt; should render with the supplied base class" time="0.004515791">
        </testcase>
        <testcase classname="packages/mui-material/src/Icon/Icon.test.js" name="&lt;Icon /&gt; &gt; prop: fontSize &gt; should be able to change the fontSize" time="0.001516417">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Input/Input.test.js" timestamp="2025-09-10T11:25:37.463Z" hostname="Jans-MacBook-Air.local" tests="29" failures="0" errors="0" skipped="5" time="0.245338083">
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.039688833">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007789875">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.010284042">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006436417">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.006533416">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.00479925">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the componentsProps.root prop" time="0.004805791">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.root&apos; over componentsProps.root if both are defined" time="0.004500125">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.005015667">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.input with the built-in ones" time="0.005480458">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the componentsProps.input prop" time="0.00606675">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.input&apos; over componentsProps.input if both are defined" time="0.006022709">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.00317625">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the components.Root prop" time="0.00270975">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.root&apos; over components.Root if both are defined" time="0.002551542">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.003208">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the components.Input prop" time="0.002247291">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.input&apos; over components.Input if both are defined" time="0.002123667">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.007473792">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004785125">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000425916">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000240792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000180625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.002048542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000673458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.010921375">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; should forward classes to InputBase" time="0.005893666">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; should respects the componentsProps if passed" time="0.003211375">
        </testcase>
        <testcase classname="packages/mui-material/src/Input/Input.test.js" name="&lt;Input /&gt; &gt; should respect the classes coming from InputBase" time="0.082118083">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/InputAdornment/InputAdornment.test.js" timestamp="2025-09-10T11:25:37.465Z" hostname="Jans-MacBook-Air.local" tests="27" failures="0" errors="0" skipped="5" time="0.1747485">
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.023557708">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.004929542">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003557583">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00323225">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005335875">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.008885125">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002591958">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000601459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000560459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000307459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000197458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000167542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.00320925">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; should wrap text children in a Typography" time="0.002701083">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; should have the root and start class when position is start" time="0.002725875">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; should have the root and end class when position is end" time="0.002387458">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; prop: variant &gt; should inherit the TextField&apos;s variant" time="0.034566959">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; prop: variant &gt; should inherit the FormControl&apos;s variant" time="0.011775875">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; prop: variant &gt; should override the inherited variant" time="0.036442333">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; prop: variant &gt; should have the filled root and class when variant is filled" time="0.002395792">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; prop: variant &gt; should warn if the variant supplied is equal to the variant inferred" time="0.008580542">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; should have the disabled pointer events class when disabledPointerEvents true" time="0.001396041">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; should not wrap text children in a Typography when disableTypography true" time="0.001378417">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; should render children" time="0.002139083">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; prop: position &gt; should render span for vertical baseline alignment" time="0.003724083">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; applies a size small class inside &lt;FormControl size=&quot;small&quot; /&gt;" time="0.003137084">
        </testcase>
        <testcase classname="packages/mui-material/src/InputAdornment/InputAdornment.test.js" name="&lt;InputAdornment /&gt; &gt; applies a hiddenLabel class inside &lt;FormControl hiddenLabel /&gt;" time="0.002144584">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/InputLabel/InputLabel.test.js" timestamp="2025-09-10T11:25:37.466Z" hostname="Jans-MacBook-Air.local" tests="24" failures="0" errors="0" skipped="5" time="0.159396083">
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.024286459">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005886125">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.00576">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004014084">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004449416">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.008680333">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002424334">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000546875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000475833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000218417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000168958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000144167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004650125">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; should render a label with text" time="0.004440167">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; should have the animated class by default" time="0.003287167">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; should not have the animated class when disabled" time="0.002882458">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; should forward the asterisk class to AsteriskComponent when required" time="0.002330291">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; with FormControl &gt; should have the formControl class" time="0.00325375">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; with FormControl &gt; should have the small class" time="0.0035815">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; with FormControl &gt; filled &gt; applies a shrink class that can be controlled by props" time="0.017711708">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; with FormControl &gt; focused &gt; applies a shrink class that can be controlled by props" time="0.017150375">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; with FormControl &gt; focused &gt; provides ownerState.focused in styleOverrides" time="0.026989916">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; Emotion compatibility &gt; classes.root should overwrite built-in styles." time="0.010349584">
        </testcase>
        <testcase classname="packages/mui-material/src/InputLabel/InputLabel.test.js" name="&lt;InputLabel /&gt; &gt; Emotion compatibility &gt; className should overwrite classes.root and built-in styles." time="0.004124167">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Link/Link.test.js" timestamp="2025-09-10T11:25:37.467Z" hostname="Jans-MacBook-Air.local" tests="18" failures="0" errors="0" skipped="6" time="0.1049755">
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.027548791">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005641458">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003845708">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003918125">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.0074575">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006614084">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00551425">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000621709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.0005465">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000273875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000198917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000176792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.006948916">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; should render children" time="0.012097417">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; should pass props to the &lt;Typography&gt; component" time="0.004853458">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; using sx color as a function should not crash" time="0.004198542">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; event callbacks &gt; should fire event callbacks" time="0.012577833">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/Link.test.js" name="&lt;Link /&gt; &gt; keyboard focus &gt; should add the focusVisible class when focused" time="0.000307625">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Link/getTextDecoration.test.js" timestamp="2025-09-10T11:25:37.468Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.003530416">
        <testcase classname="packages/mui-material/src/Link/getTextDecoration.test.js" name="getTextDecoration &gt; without theme.vars &gt; system color" time="0.00114025">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/getTextDecoration.test.js" name="getTextDecoration &gt; without theme.vars &gt; valid CSS color" time="0.000409334">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/getTextDecoration.test.js" name="getTextDecoration &gt; without theme.vars &gt; work with a custom palette" time="0.0007475">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/getTextDecoration.test.js" name="getTextDecoration &gt; CSS variables &gt; system color" time="0.000152917">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/getTextDecoration.test.js" name="getTextDecoration &gt; CSS variables &gt; valid CSS color" time="0.000189042">
        </testcase>
        <testcase classname="packages/mui-material/src/Link/getTextDecoration.test.js" name="getTextDecoration &gt; Native color &gt; oklch" time="0.000105709">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/List/List.test.js" timestamp="2025-09-10T11:25:37.469Z" hostname="Jans-MacBook-Air.local" tests="20" failures="0" errors="0" skipped="5" time="0.080597583">
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.020269708">
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.008116125">
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006250625">
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004258125">
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005466042">
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004284417">
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004994708">
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000521666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000537375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000254542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.00028475">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000250542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003697375">
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; should render with padding classes" time="0.002389792">
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; can disable the padding" time="0.002591584">
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; prop: subheader &gt; should render with subheader class" time="0.00269325">
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; prop: subheader &gt; should render ListSubheader" time="0.003073416">
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; prop: dense &gt; is disabled by default" time="0.002258625">
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; prop: dense &gt; adds a dense class" time="0.001548625">
        </testcase>
        <testcase classname="packages/mui-material/src/List/List.test.js" name="&lt;List /&gt; &gt; prop: dense &gt; sets dense on deep nested ListItem" time="0.005182292">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/LinearProgress/LinearProgress.test.js" timestamp="2025-09-10T11:25:37.470Z" hostname="Jans-MacBook-Air.local" tests="26" failures="0" errors="0" skipped="5" time="0.152124208">
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.026714167">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007804875">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0060835">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007360209">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006109458">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004101333">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.002576292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.001347667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.002138917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000404541">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000194959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.006591">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; should render indeterminate variant by default" time="0.029530541">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; should render for the primary color by default" time="0.003780459">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; should render for the secondary color" time="0.007581625">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; should render with determinate classes for the primary color by default" time="0.00322825">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; should render with determinate classes for the primary color" time="0.002607167">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; should render with determinate classes for the secondary color" time="0.002474417">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; should set width of bar1 on determinate variant" time="0.002783375">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; should render with buffer classes for the primary color by default" time="0.003682333">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; should render with buffer classes for the primary color" time="0.003576875">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; should render with buffer classes for the secondary color" time="0.003821583">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; should set width of bar1 and bar2 on buffer variant" time="0.005660584">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; should render with query classes" time="0.0041585">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; exposes the current, min and max value to screen readers when determinate" time="0.002459542">
        </testcase>
        <testcase classname="packages/mui-material/src/LinearProgress/LinearProgress.test.js" name="&lt;LinearProgress /&gt; &gt; prop: value &gt; should warn when not used as expected" time="0.003513167">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/InputBase/InputBase.test.js" timestamp="2025-09-10T11:25:37.472Z" hostname="Jans-MacBook-Air.local" tests="68" failures="0" errors="0" skipped="6" time="0.473865125">
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; prop components: &gt; can render another root component with the `components` prop" time="0.031517458">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.007105958">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005309209">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00425">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007689958">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.00317575">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.00296375">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the componentsProps.root prop" time="0.003069583">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.root&apos; over componentsProps.root if both are defined" time="0.006091208">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.003267083">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.input with the built-in ones" time="0.002841792">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the componentsProps.input prop" time="0.005220167">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.input&apos; over componentsProps.input if both are defined" time="0.002682458">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002426167">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the components.Root prop" time="0.003735542">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.root&apos; over components.Root if both are defined" time="0.00231825">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.001589125">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the components.Input prop" time="0.00170175">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.input&apos; over components.Input if both are defined" time="0.001736709">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.0071925">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.003431125">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000332417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000210042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000160625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.002119208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000234667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003732791">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; should render an &lt;input /&gt; inside the div" time="0.002682042">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; should add the right class when size is small" time="0.002374417">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; multiline &gt; should render a `textbox` with `aria-multiline`" time="0.053756125">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; multiline &gt; should render a `textbox` with `aria-multiline` if `rows` is specified" time="0.01792675">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; multiline &gt; should forward the value to the textarea" time="0.006193958">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; multiline &gt; should preserve state when changing rows" time="0.0241625">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: disabled &gt; should render a disabled &lt;input /&gt;" time="0.002587375">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: disabled &gt; should reset the focused state if getting disabled" time="0.005743583">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: disabled &gt; fires the click event when the &lt;input /&gt; is disabled" time="0.007274541">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: readonly &gt; should render a readonly &lt;input /&gt;" time="0.004176708">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; should fire event callbacks" time="0.009528875">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; controlled &gt; should considered [] as controlled" time="0.003813">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: inputComponent &gt; should accept any html component" time="0.002511041">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: inputComponent &gt; should inject onBlur and onFocus" time="0.003031083">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: inputComponent &gt; target mock implementations &gt; can just mock the value" time="0.009183667">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: inputComponent &gt; target mock implementations &gt; can expose the input component&apos;s ref through the inputComponent prop" time="0.005973">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: inputComponent &gt; errors &gt; throws on change if the target isn&apos;t mocked" time="0.003847417">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; with FormControl &gt; should have the formControl class" time="0.002920792">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; with FormControl &gt; callbacks &gt; should fire the onClick prop" time="0.004595917">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; with FormControl &gt; error &gt; should be overridden by props" time="0.004659666">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; with FormControl &gt; size &gt; should have the inputSizeSmall class in a dense context" time="0.0026355">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; with FormControl &gt; size &gt; should be overridden by props" time="0.008180875">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; with FormControl &gt; size &gt; has an inputHiddenLabel class to further reduce margin" time="0.007872708">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; with FormControl &gt; required &gt; should have the aria-required prop with value true" time="0.003342208">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; with FormControl &gt; focused &gt; prioritizes context focus" time="0.02012675">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; with FormControl &gt; focused &gt; propagates focused state" time="0.014348541">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; with FormControl &gt; propagates filled state when uncontrolled" time="0.017975792">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; with FormControl &gt; propagates filled state when controlled" time="0.012530458">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; with FormControl &gt; registering input &gt; should warn if more than one input is rendered regardless how it&apos;s nested" time="0.005091">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; with FormControl &gt; registering input &gt; should not warn if only one input is rendered" time="0.004510708">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; with FormControl &gt; registering input &gt; should not warn when toggling between inputs" time="0.022786708">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: inputProps &gt; should apply the props on the input" time="0.003171458">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: inputProps &gt; should be able to get a ref" time="0.004163875">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: inputProps &gt; should not repeat the same classname" time="0.003082583">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: inputComponent with prop: inputProps &gt; should call onChange inputProp callback with all params sent from custom inputComponent" time="0.004475041">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: startAdornment, prop: endAdornment &gt; should render adornment before input" time="0.004203208">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: startAdornment, prop: endAdornment &gt; should render adornment after input" time="0.003553">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: startAdornment, prop: endAdornment &gt; should allow a Select as an adornment" time="0.027863333">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: inputRef &gt; should be able to access the native input" time="0.003044958">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: inputRef &gt; should be able to access the native textarea" time="0.005373709">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/InputBase.test.js" name="&lt;InputBase /&gt; &gt; prop: focused &gt; should render correct border color with `ThemeProvider` imported from `@emotion/react`" time="0.000244708">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/InputBase/utils.test.js" timestamp="2025-09-10T11:25:37.476Z" hostname="Jans-MacBook-Air.local" tests="14" failures="0" errors="0" skipped="0" time="0.003336834">
        <testcase classname="packages/mui-material/src/InputBase/utils.test.js" name="Input/utils.js &gt; hasValue &gt; is true for " time="0.001136792">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/utils.test.js" name="Input/utils.js &gt; hasValue &gt; is true for 0" time="0.00017275">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/utils.test.js" name="Input/utils.js &gt; hasValue &gt; is false for null" time="0.000142375">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/utils.test.js" name="Input/utils.js &gt; hasValue &gt; is false for undefined" time="0.000078583">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/utils.test.js" name="Input/utils.js &gt; isFilled &gt; is true for value  " time="0.000141625">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/utils.test.js" name="Input/utils.js &gt; isFilled &gt; is true for SSR defaultValue  " time="0.000087625">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/utils.test.js" name="Input/utils.js &gt; isFilled &gt; is true for value 0" time="0.000052166">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/utils.test.js" name="Input/utils.js &gt; isFilled &gt; is true for SSR defaultValue 0" time="0.000047917">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/utils.test.js" name="Input/utils.js &gt; isFilled &gt; is false for value null" time="0.000220917">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/utils.test.js" name="Input/utils.js &gt; isFilled &gt; is false for SSR defaultValue null" time="0.000079">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/utils.test.js" name="Input/utils.js &gt; isFilled &gt; is false for value undefined" time="0.000042041">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/utils.test.js" name="Input/utils.js &gt; isFilled &gt; is false for SSR defaultValue undefined" time="0.000037042">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/utils.test.js" name="Input/utils.js &gt; isFilled &gt; is false for value " time="0.000033458">
        </testcase>
        <testcase classname="packages/mui-material/src/InputBase/utils.test.js" name="Input/utils.js &gt; isFilled &gt; is false for SSR defaultValue " time="0.000036542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ListItem/ListItem.test.js" timestamp="2025-09-10T11:25:37.477Z" hostname="Jans-MacBook-Air.local" tests="31" failures="0" errors="0" skipped="7" time="0.193738166">
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.026896667">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006784334">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.0060835">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003308416">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00685775">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.00192025">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the componentsProps.root prop" time="0.001638667">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.root&apos; over componentsProps.root if both are defined" time="0.001695167">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002121041">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001321625">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the components.Root prop" time="0.000972209">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.root&apos; over components.Root if both are defined" time="0.00096175">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the components.Root prop" time="0.000934917">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.007141959">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004494584">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000447125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000234041">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.00017675">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000164833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000243709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.006409375">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; should render with gutters classes" time="0.045416625">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; should disable the gutters" time="0.004134083">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; context: dense &gt; should forward the context" time="0.008913917">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; action &gt; should show action if provided" time="0.015197125">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; secondary action &gt; should wrap with a container" time="0.006714834">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; secondary action &gt; should accept a component property" time="0.014072541">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; secondary action &gt; should accept a ContainerComponent property" time="0.009195916">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; secondary action &gt; should allow customization of the wrapper" time="0.00651325">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; secondary action &gt; warnings &gt; warns if it cant detect the secondary action properly" time="0.000251292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItem/ListItem.test.js" name="&lt;ListItem /&gt; &gt; container overrides should work" time="0.000158333">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ListItemIcon/ListItemIcon.test.js" timestamp="2025-09-10T11:25:37.478Z" hostname="Jans-MacBook-Air.local" tests="10" failures="0" errors="0" skipped="3" time="0.086102459">
        <testcase classname="packages/mui-material/src/ListItemIcon/ListItemIcon.test.js" name="&lt;ListItemIcon /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.037669667">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemIcon/ListItemIcon.test.js" name="&lt;ListItemIcon /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006265458">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemIcon/ListItemIcon.test.js" name="&lt;ListItemIcon /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003010042">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemIcon/ListItemIcon.test.js" name="&lt;ListItemIcon /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.022979083">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemIcon/ListItemIcon.test.js" name="&lt;ListItemIcon /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006021417">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemIcon/ListItemIcon.test.js" name="&lt;ListItemIcon /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00276125">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemIcon/ListItemIcon.test.js" name="&lt;ListItemIcon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000490792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemIcon/ListItemIcon.test.js" name="&lt;ListItemIcon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000617458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemIcon/ListItemIcon.test.js" name="&lt;ListItemIcon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000645583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemIcon/ListItemIcon.test.js" name="&lt;ListItemIcon /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003445416">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ListItemSecondaryAction/ListItemSecondaryAction.test.js" timestamp="2025-09-10T11:25:37.479Z" hostname="Jans-MacBook-Air.local" tests="12" failures="0" errors="0" skipped="3" time="0.056775417">
        <testcase classname="packages/mui-material/src/ListItemSecondaryAction/ListItemSecondaryAction.test.js" name="&lt;ListItemSecondaryAction /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.021568834">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemSecondaryAction/ListItemSecondaryAction.test.js" name="&lt;ListItemSecondaryAction /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004930166">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemSecondaryAction/ListItemSecondaryAction.test.js" name="&lt;ListItemSecondaryAction /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0026415">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemSecondaryAction/ListItemSecondaryAction.test.js" name="&lt;ListItemSecondaryAction /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.002838791">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemSecondaryAction/ListItemSecondaryAction.test.js" name="&lt;ListItemSecondaryAction /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005791291">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemSecondaryAction/ListItemSecondaryAction.test.js" name="&lt;ListItemSecondaryAction /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002529125">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemSecondaryAction/ListItemSecondaryAction.test.js" name="&lt;ListItemSecondaryAction /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000487416">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemSecondaryAction/ListItemSecondaryAction.test.js" name="&lt;ListItemSecondaryAction /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000456625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemSecondaryAction/ListItemSecondaryAction.test.js" name="&lt;ListItemSecondaryAction /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000501833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemSecondaryAction/ListItemSecondaryAction.test.js" name="&lt;ListItemSecondaryAction /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.002943583">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemSecondaryAction/ListItemSecondaryAction.test.js" name="&lt;ListItemSecondaryAction /&gt; &gt; should render without classes that disable gutters" time="0.006445959">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemSecondaryAction/ListItemSecondaryAction.test.js" name="&lt;ListItemSecondaryAction /&gt; &gt; should disable the gutters" time="0.003532792">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ListItemText/ListItemText.test.js" timestamp="2025-09-10T11:25:37.480Z" hostname="Jans-MacBook-Air.local" tests="47" failures="0" errors="0" skipped="5" time="0.1678465">
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.026874334">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.00556675">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005168">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005216583">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; sets custom properties on the primary slot&apos;s element with the slotProps.primary prop" time="0.004957417">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.primary with the built-in ones" time="0.002450125">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; sets custom properties on the secondary slot&apos;s element with the slotProps.secondary prop" time="0.003936375">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.secondary with the built-in ones" time="0.005272208">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.003582625">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003781875">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; sets custom properties on the primary slot&apos;s element with the slotProps.primary callback" time="0.003002208">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; sets custom properties on the secondary slot&apos;s element with the slotProps.secondary callback" time="0.007425458">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.0090635">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; sets custom properties on the primary slot&apos;s element with the slotProps.primary callback using the ownerState" time="0.004023667">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; sets custom properties on the secondary slot&apos;s element with the slotProps.secondary callback using the ownerState" time="0.003478125">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.002233625">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; allows overriding the primary slot with a component using the slots.primary prop" time="0.002865625">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; allows overriding the primary slot with an element using the slots.primary prop" time="0.002020292">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; allows overriding the secondary slot with a component using the slots.secondary prop" time="0.002722584">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; allows overriding the secondary slot with an element using the slots.secondary prop" time="0.003989292">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002521333">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.00223925">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.00613225">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.003496875">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000359708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000223708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000170708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000154167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000271333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005962333">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; should render with inset class" time="0.001240958">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; should render with no children" time="0.0012315">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; prop: primary &gt; should render primary text" time="0.002021667">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; prop: primary &gt; should use the primary node" time="0.001989792">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; prop: primary &gt; should use the children prop as primary node" time="0.001630459">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; prop: primary &gt; should read 0 as primary" time="0.001887334">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; prop: secondary &gt; should render secondary text" time="0.002493125">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; prop: secondary &gt; should use the secondary node" time="0.001531792">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; prop: secondary &gt; should read 0 as secondary" time="0.001245292">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; prop: disableTypography &gt; should wrap children in `&lt;Typography/&gt;` by default" time="0.001641416">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; prop: disableTypography &gt; should render JSX children" time="0.002964125">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; should render primary and secondary text with customisable classes" time="0.001999125">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; should not re-wrap the &lt;Typography&gt; element" time="0.001658875">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; should use variant if provided" time="0.0046845">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; should fall back to the default tag name if no variant provided" time="0.003892292">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; should pass primaryTypographyProps to primary Typography component" time="0.002241833">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemText/ListItemText.test.js" name="&lt;ListItemText /&gt; &gt; should pass secondaryTypographyProps to secondary Typography component" time="0.001923792">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ListItemButton/ListItemButton.test.js" timestamp="2025-09-10T11:25:37.482Z" hostname="Jans-MacBook-Air.local" tests="31" failures="0" errors="0" skipped="6" time="0.258740375">
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.0316135">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.010953459">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.009999542">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0057765">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008328708">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.009491916">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.003137125">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000515958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.0004685">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000246834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000251208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000179708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.015085208">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; should render with gutters classes" time="0.046855375">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; should render with the selected class" time="0.005455833">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; should disable the gutters" time="0.018975459">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; context: dense &gt; should forward the context" time="0.007722417">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; prop: focusVisibleClassName &gt; should merge the class names" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; prop: href &gt; should rendered as link without specifying component=&quot;a&quot;" time="0.006184959">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; prop: href &gt; should rendered as link when specifying component=&quot;div&quot;" time="0.006797167">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; prop: href &gt; should rendered as link when specifying component=&quot;a&quot;" time="0.003603208">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; prop: href &gt; should rendered as specifying component" time="0.00599325">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; prop: to &gt; should rendered as link without specifying component=&quot;a&quot;" time="0.005851291">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; prop: to &gt; should rendered as link when specifying component=&quot;div&quot;" time="0.0038915">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; prop: to &gt; should rendered as link when specifying component=&quot;a&quot;" time="0.008012042">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; prop: to &gt; should rendered as specifying component" time="0.006156292">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; prop: LinkComponent &gt; should rendered as LinkComponent when href is provided" time="0.005746833">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; prop: LinkComponent &gt; should ignore LinkComponent is component is provided" time="0.008514458">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; prop: LinkComponent &gt; should rendered as LinkComponent (from theme) when href is provided" time="0.008810541">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; prop: LinkComponent &gt; should rendered as LinkComponent (from theme MuiButtonBase) when href is provided" time="0.006899917">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemButton/ListItemButton.test.js" name="&lt;ListItemButton /&gt; &gt; prop: LinkComponent &gt; should prefer LinkComponent from MuiListItemButton over MuiButtonBase" time="0.004605792">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ListItemAvatar/ListItemAvatar.test.js" timestamp="2025-09-10T11:25:37.484Z" hostname="Jans-MacBook-Air.local" tests="10" failures="0" errors="0" skipped="3" time="0.0538955">
        <testcase classname="packages/mui-material/src/ListItemAvatar/ListItemAvatar.test.js" name="&lt;ListItemAvatar /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.028055375">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemAvatar/ListItemAvatar.test.js" name="&lt;ListItemAvatar /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004238542">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemAvatar/ListItemAvatar.test.js" name="&lt;ListItemAvatar /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003417375">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemAvatar/ListItemAvatar.test.js" name="&lt;ListItemAvatar /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.003572292">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemAvatar/ListItemAvatar.test.js" name="&lt;ListItemAvatar /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005650708">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemAvatar/ListItemAvatar.test.js" name="&lt;ListItemAvatar /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002016125">
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemAvatar/ListItemAvatar.test.js" name="&lt;ListItemAvatar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000557625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemAvatar/ListItemAvatar.test.js" name="&lt;ListItemAvatar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000449167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemAvatar/ListItemAvatar.test.js" name="&lt;ListItemAvatar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000539917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListItemAvatar/ListItemAvatar.test.js" name="&lt;ListItemAvatar /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003093041">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ListSubheader/ListSubheader.test.js" timestamp="2025-09-10T11:25:37.484Z" hostname="Jans-MacBook-Air.local" tests="19" failures="0" errors="0" skipped="5" time="0.075249792">
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.0217705">
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005523583">
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005739708">
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0026">
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.003768917">
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004913333">
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002215125">
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.00060925">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000555625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.0002695">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000202583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000178042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003189">
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; should display primary color" time="0.0032755">
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; should display inset class" time="0.002158916">
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; prop: disableSticky &gt; should display sticky class" time="0.00264475">
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; prop: disableSticky &gt; should not display sticky class" time="0.00284725">
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; prop: disableGutters &gt; should not display gutters class" time="0.006703791">
        </testcase>
        <testcase classname="packages/mui-material/src/ListSubheader/ListSubheader.test.js" name="&lt;ListSubheader /&gt; &gt; prop: disableGutters &gt; should display gutters class" time="0.004356625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/MenuList/MenuList.test.js" timestamp="2025-09-10T11:25:37.486Z" hostname="Jans-MacBook-Air.local" tests="11" failures="0" errors="0" skipped="0" time="0.121916292">
        <testcase classname="packages/mui-material/src/MenuList/MenuList.test.js" name="&lt;MenuList /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.032023167">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuList/MenuList.test.js" name="&lt;MenuList /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004480625">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuList/MenuList.test.js" name="&lt;MenuList /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00368775">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuList/MenuList.test.js" name="&lt;MenuList /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.000516833">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuList/MenuList.test.js" name="&lt;MenuList /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004220875">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuList/MenuList.test.js" name="&lt;MenuList /&gt; &gt; prop: children &gt; should support null children" time="0.0313815">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuList/MenuList.test.js" name="&lt;MenuList /&gt; &gt; prop: children &gt; should not add tabIndex to presentation elements like Divider when all Menu Items are disabled" time="0.029544458">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuList/MenuList.test.js" name="&lt;MenuList /&gt; &gt; actions: adjustStyleForScrollbar &gt; should not adjust style when container element height is greater" time="0.002872209">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuList/MenuList.test.js" name="&lt;MenuList /&gt; &gt; actions: adjustStyleForScrollbar &gt; should adjust style when container element height is less" time="0.006723542">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuList/MenuList.test.js" name="&lt;MenuList /&gt; &gt; actions: adjustStyleForScrollbar &gt; should adjust paddingLeft when direction=rtl" time="0.003314458">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuList/MenuList.test.js" name="&lt;MenuList /&gt; &gt; actions: adjustStyleForScrollbar &gt; should not adjust styles when width already specified" time="0.001599042">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/MenuItem/MenuItem.test.js" timestamp="2025-09-10T11:25:37.486Z" hostname="Jans-MacBook-Air.local" tests="29" failures="0" errors="0" skipped="5" time="0.2893485">
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.036502">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.014276666">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.00966675">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004261042">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.014881708">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006030833">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.005567792">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000499084">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000475667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000228542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000165917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000141667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005030625">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; should render a focusable menuitem" time="0.0307545">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; has a ripple when clicked" time="0.020212958">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; should render with the selected class but not aria-selected when `selected`" time="0.01369875">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; can have a role of option" time="0.004528833">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; event callbacks &gt; should fire click" time="0.008130792">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; event callbacks &gt; should fire mouseDown" time="0.043961334">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; event callbacks &gt; should fire mouseEnter" time="0.005710333">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; event callbacks &gt; should fire mouseLeave" time="0.00729">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; event callbacks &gt; should fire mouseUp" time="0.005866709">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; event callbacks &gt; should fire touchEnd" time="0.005613209">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; event callbacks &gt; should fire focus, keydown, keyup and blur" time="0.011944167">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; event callbacks &gt; should fire onTouchStart" time="0.005022">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; can be disabled" time="0.003699792">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; can be selected" time="0.008389291">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; prop: disableGutters" time="0.008446083">
        </testcase>
        <testcase classname="packages/mui-material/src/MenuItem/MenuItem.test.js" name="&lt;MenuItem /&gt; &gt; context: dense &gt; should forward the context" time="0.006442375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Menu/Menu.test.js" timestamp="2025-09-10T11:25:37.488Z" hostname="Jans-MacBook-Air.local" tests="58" failures="0" errors="0" skipped="7" time="0.58344675">
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.102021">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.025393916">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.020136584">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.018539083">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.022643959">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; sets custom properties on the paper slot&apos;s element with the slotProps.paper prop" time="0.010615333">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.paper with the built-in ones" time="0.006262959">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; sets custom properties on the list slot&apos;s element with the slotProps.list prop" time="0.011356042">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.list with the built-in ones" time="0.009593042">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop prop" time="0.008977375">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.backdrop with the built-in ones" time="0.01155125">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition prop" time="0.011488833">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.007842167">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; sets custom properties on the paper slot&apos;s element with the slotProps.paper callback" time="0.00683325">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; sets custom properties on the list slot&apos;s element with the slotProps.list callback" time="0.008332708">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop callback" time="0.008329041">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback" time="0.011297375">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.009094833">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; sets custom properties on the paper slot&apos;s element with the slotProps.paper callback using the ownerState" time="0.007382583">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; sets custom properties on the list slot&apos;s element with the slotProps.list callback using the ownerState" time="0.012530542">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop callback using the ownerState" time="0.00821525">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback using the ownerState" time="0.009178792">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.004998542">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.003424166">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; allows overriding the paper slot with a component using the slots.paper prop" time="0.006604417">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; allows overriding the paper slot with an element using the slots.paper prop" time="0.004738792">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; allows overriding the list slot with a component using the slots.list prop" time="0.004872">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; allows overriding the backdrop slot with a component using the slots.backdrop prop" time="0.005808167">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; allows overriding the backdrop slot with an element using the slots.backdrop prop" time="0.005985334">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; allows overriding the transition slot with a component using the slots.transition prop" time="0.00566725">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; allows overriding the transition slot with an element using the slots.transition prop" time="0.007714084">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000436958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000262583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.00020625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.00019475">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000187167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.008799791">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; event callbacks &gt; entering &gt; should fire callbacks" time="0.008022875">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; event callbacks &gt; exiting &gt; should fire callbacks" time="0.015624208">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; should pass `classes.paper` to the Paper" time="0.008785958">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; prop: PopoverClasses &gt; should be able to change the Popover style" time="0.006163792">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; prop: PopoverClasses &gt; should be able to change the Popover root element style when Menu classes prop is also provided" time="0.006734">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; prop: PaperProps &gt; should be passed to the paper component" time="0.0104795">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; should pass onClose prop to Popover" time="0.017182875">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; renders its children only when open" time="0.008863334">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; list node &gt; should render a menu inside the Popover" time="0.010676916">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; should open during the initial mount" time="0.010885209">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; should not focus list if autoFocus=false" time="0.012180125">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; should call slotProps.transition.onEntering" time="0.00790275">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; should call slotProps.transition.onEntering, disableAutoFocusItem" time="0.005314">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; legacy TransitionProps &gt; should call TransitionProps.onEntering" time="0.00892425">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; legacy TransitionProps &gt; should call TransitionProps.onEntering, disableAutoFocusItem" time="0.010157667">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; should call onClose on tab" time="0.010023417">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; ignores invalid children" time="0.009572334">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; warnings &gt; warns a Fragment is passed as a child" time="0.002285458">
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; theme customization &gt; should override Menu Paper styles following correct precedence" time="0.000300584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; theme customization &gt; should override Menu Paper styles using styles in MuiPaper slot" time="0.000202">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Menu/Menu.test.js" name="&lt;Menu /&gt; &gt; slots &gt; should merge slots with existing values" time="0.003069583">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/MobileStepper/MobileStepper.test.js" timestamp="2025-09-10T11:25:37.490Z" hostname="Jans-MacBook-Air.local" tests="57" failures="0" errors="0" skipped="5" time="0.492157459">
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.034622334">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.013302958">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.009095708">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007666417">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.009012459">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.00473275">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; sets custom properties on the dots slot&apos;s element with the slotProps.dots prop" time="0.004451292">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.dots with the built-in ones" time="0.005693375">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; sets custom properties on the dot slot&apos;s element with the slotProps.dot prop" time="0.007942625">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.dot with the built-in ones" time="0.010059583">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.007281625">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; sets custom properties on the dots slot&apos;s element with the slotProps.dots callback" time="0.006043167">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; sets custom properties on the dot slot&apos;s element with the slotProps.dot callback" time="0.011700666">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.005807792">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; sets custom properties on the dots slot&apos;s element with the slotProps.dots callback using the ownerState" time="0.006329459">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; sets custom properties on the dot slot&apos;s element with the slotProps.dot callback using the ownerState" time="0.004118875">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.0055505">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.003569334">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; allows overriding the dots slot with a component using the slots.dots prop" time="0.006333792">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; allows overriding the dots slot with an element using the slots.dots prop" time="0.005534917">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; allows overriding the dot slot with a component using the slots.dot prop" time="0.007225667">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; allows overriding the dot slot with an element using the slots.dot prop" time="0.007507334">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.008418458">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.005832667">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.001102333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000984792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000710542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000719958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000239834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.006967042">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.00597325">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.007482542">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; sets custom properties on the progress slot&apos;s element with the slotProps.progress prop" time="0.006027917">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.progress with the built-in ones" time="0.011598084">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.008952916">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; sets custom properties on the progress slot&apos;s element with the slotProps.progress callback" time="0.006420625">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.005499416">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; sets custom properties on the progress slot&apos;s element with the slotProps.progress callback using the ownerState" time="0.007624375">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.004326208">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.00466325">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; allows overriding the progress slot with a component using the slots.progress prop" time="0.006132041">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; MUI component API &gt; allows overriding the progress slot with an element using the slots.progress prop" time="0.006570166">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; should render a Paper with 0 elevation" time="0.004314083">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; should render with the bottom class if position prop is set to bottom" time="0.006097208">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; should render with the top class if position prop is set to top" time="0.00523825">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; should render two buttons" time="0.078219667">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; should render the back button" time="0.009612709">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; should render next button" time="0.010833875">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; should render two buttons and text displaying progress when supplied with variant text" time="0.010338333">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; should render dots when supplied with variant dots" time="0.00610825">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; should render a dot for each step when using dots variant" time="0.007590625">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; should render the first dot as active if activeStep is not set" time="0.004299166">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; should honor the activeStep prop" time="0.005122666">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; should render a &lt;LinearProgress /&gt; when supplied with variant progress" time="0.010245125">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; should calculate the &lt;LinearProgress /&gt; value correctly" time="0.016085">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; should set value correctly when steps is set to 1" time="0.013015708">
        </testcase>
        <testcase classname="packages/mui-material/src/MobileStepper/MobileStepper.test.js" name="&lt;MobileStepper /&gt; &gt; should set value correctly when steps is updated between 1 &amp; 2" time="0.012965083">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/NoSsr/NoSsr.test.tsx" timestamp="2025-09-10T11:25:37.493Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.032399542">
        <testcase classname="packages/mui-material/src/NoSsr/NoSsr.test.tsx" name="&lt;NoSsr /&gt; &gt; server-side rendering &gt; should not render the children as the width is unknown" time="0.005667458">
        </testcase>
        <testcase classname="packages/mui-material/src/NoSsr/NoSsr.test.tsx" name="&lt;NoSsr /&gt; &gt; mounted &gt; should render the children" time="0.016830292">
        </testcase>
        <testcase classname="packages/mui-material/src/NoSsr/NoSsr.test.tsx" name="&lt;NoSsr /&gt; &gt; prop: fallback &gt; should render the fallback" time="0.004268459">
        </testcase>
        <testcase classname="packages/mui-material/src/NoSsr/NoSsr.test.tsx" name="&lt;NoSsr /&gt; &gt; prop: defer &gt; should defer the rendering" time="0.003980583">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/OutlinedInput/NotchedOutline.test.js" timestamp="2025-09-10T11:25:37.493Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="1" time="0.112258042">
        <testcase classname="packages/mui-material/src/OutlinedInput/NotchedOutline.test.js" name="&lt;NotchedOutline /&gt; &gt; should pass props" time="0.0263765">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/NotchedOutline.test.js" name="&lt;NotchedOutline /&gt; &gt; should set alignment rtl" time="0.082501709">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/NotchedOutline.test.js" name="&lt;NotchedOutline /&gt; &gt; should not set padding (notch) for empty, null or undefined label props" time="0.000551917">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" timestamp="2025-09-10T11:25:37.494Z" hostname="Jans-MacBook-Air.local" tests="36" failures="0" errors="0" skipped="5" time="0.580322958">
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.051939334">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.015177167">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.016432084">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.013809334">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.012112958">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.014810958">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the componentsProps.root prop" time="0.014698125">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.root&apos; over componentsProps.root if both are defined" time="0.023848291">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.032529417">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.input with the built-in ones" time="0.020768">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the componentsProps.input prop" time="0.02312875">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.input&apos; over componentsProps.input if both are defined" time="0.004878083">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; sets custom properties on the notchedOutline slot&apos;s element with the slotProps.notchedOutline prop" time="0.025575458">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.notchedOutline with the built-in ones" time="0.023554875">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.030689666">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the components.Root prop" time="0.0141355">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.root&apos; over components.Root if both are defined" time="0.030538917">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.007256625">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the components.Input prop" time="0.006040542">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.input&apos; over components.Input if both are defined" time="0.003220333">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; allows overriding the notchedOutline slot with a component using the slots.notchedOutline prop" time="0.004365167">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; allows overriding the notchedOutline slot with an element using the slots.notchedOutline prop" time="0.003915333">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.010422583">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.008321458">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.001241958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000917958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000651209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000248625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000165709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005495458">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; should render a NotchedOutline" time="0.01085225">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; should set correct label prop on outline" time="0.005753125">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; should forward classes to InputBase" time="0.006219875">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; should respects the componentsProps if passed" time="0.007365083">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; should respect the classes coming from InputBase" time="0.098238">
        </testcase>
        <testcase classname="packages/mui-material/src/OutlinedInput/OutlinedInput.test.js" name="&lt;OutlinedInput /&gt; &gt; should have ownerState in the theme style overrides" time="0.024517125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Modal/Modal.test.js" timestamp="2025-09-10T11:25:37.495Z" hostname="Jans-MacBook-Air.local" tests="63" failures="0" errors="0" skipped="3" time="0.400042792">
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.0734595">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.013452458">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.009323709">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0054965">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.006359042">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.004902583">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the componentsProps.root prop" time="0.003753291">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.root&apos; over componentsProps.root if both are defined" time="0.004524042">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop prop" time="0.005643833">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.backdrop with the built-in ones" time="0.003836542">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the componentsProps.backdrop prop" time="0.003371375">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.backdrop&apos; over componentsProps.backdrop if both are defined" time="0.004383625">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.006008417">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop callback" time="0.005038959">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.018396291">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop callback using the ownerState" time="0.003361708">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.004243792">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.003173666">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the components.Root prop" time="0.003191334">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.root&apos; over components.Root if both are defined" time="0.003029458">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the components.Root prop" time="0.006068417">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; allows overriding the backdrop slot with a component using the slots.backdrop prop" time="0.002690625">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; allows overriding the backdrop slot with an element using the slots.backdrop prop" time="0.002212292">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; allows overriding the backdrop slot with a component using the components.Backdrop prop" time="0.002089208">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.backdrop&apos; over components.Backdrop if both are defined" time="0.002436834">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; allows overriding the backdrop slot with an element using the components.Backdrop prop" time="0.002914084">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000444375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.00020325">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.006396792">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; props: &gt; should consume theme default props" time="0.01016475">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; prop: classes &gt; adds custom classes to the component" time="0.004283333">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; prop: open &gt; should not render the children by default" time="0.000813667">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; prop: open &gt; renders the children inside a div through a portal when open" time="0.010761542">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; prop: open &gt; makes the child focusable without adding a role" time="0.004595083">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; backdrop &gt; can render a custom backdrop component" time="0.002343416">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; backdrop &gt; should render a backdrop component into the portal before the modal content" time="0.003742375">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; backdrop &gt; should pass prop to the transition component" time="0.002390542">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; backdrop &gt; should attach a handler to the backdrop that fires onClose" time="0.005091667">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; backdrop &gt; should let the user disable backdrop click triggering onClose" time="0.003730125">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; hide backdrop &gt; should not render a backdrop component into the portal before the modal content" time="0.0025955">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; event: keydown &gt; when mounted, TopModal and event not esc should not call given functions" time="0.004169292">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; event: keydown &gt; should call onClose when Esc is pressed and stop event propagation" time="0.00473325">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; event: keydown &gt; should not call onClose when `disableEscapeKeyDown={true}`" time="0.003671042">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; event: keydown &gt; calls onKeyDown on the Modal" time="0.003816333">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; prop: keepMounted &gt; should keep the children in the DOM" time="0.002304708">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; prop: keepMounted &gt; does not include the children in the a11y tree" time="0.010346958">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; prop: keepMounted &gt; should remove the transition children in the DOM when closed whilst transition status is entering" time="0.021998">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; focus &gt; should focus on the modal when it is opened" time="0.005488167">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; focus &gt; should support autoFocus" time="0.004697875">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; focus &gt; should keep focus on the modal when it is closed" time="0.003982209">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; focus &gt; should not focus on the modal when disableAutoFocus is true" time="0.003740292">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; focus &gt; focus stealing &gt; does not steal focus from other frames" time="0.001104084">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; focus &gt; when starting open and closing immediately &gt; should unmount the children " time="0.001931">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; two modal at the same time &gt; should open and close" time="0.006045458">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; two modal at the same time &gt; should open and close with Transitions" time="0.009707125">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; should support open abort" time="0.001127833">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; prop: closeAfterTransition &gt; when true it should close after Transition has finished" time="0.009420833">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; prop: closeAfterTransition &gt; when false it should close before Transition has finished" time="0.008502875">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; prop: container &gt; should be able to change the container" time="0.007066333">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; prop: disablePortal &gt; should render the content into the parent" time="0.003577625">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; prop: BackdropProps &gt; should handle custom className" time="0.00350525">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; should not warn when onTransitionEnter and onTransitionExited are provided" time="0.005210084">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/Modal.test.js" name="&lt;Modal /&gt; &gt; should not override default onKeyDown" time="0.009091083">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Modal/ModalManager.test.ts" timestamp="2025-09-10T11:25:37.498Z" hostname="Jans-MacBook-Air.local" tests="23" failures="0" errors="0" skipped="0" time="0.091751917">
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; should add a modal only once" time="0.033831084">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; managing modals &gt; should add modal1" time="0.002005041">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; managing modals &gt; should add modal2" time="0.000187292">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; managing modals &gt; should add modal3" time="0.000087459">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; managing modals &gt; should remove modal2" time="0.000120542">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; managing modals &gt; should add modal2 2" time="0.00016475">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; managing modals &gt; should remove modal3" time="0.000067167">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; managing modals &gt; should remove modal2 2" time="0.000121083">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; managing modals &gt; should remove modal1" time="0.000335792">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; managing modals &gt; should not do anything" time="0.000098666">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; overflow &gt; should handle the scroll" time="0.00328075">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; overflow &gt; should disable the scroll even when not overflowing" time="0.000579125">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; overflow &gt; should restore styles correctly if none existed before" time="0.001525583">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; overflow &gt; shadow dom &gt; should scroll body when parent is shadow root" time="0.000821042">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; overflow &gt; restore styles &gt; should restore styles correctly if overflow existed before" time="0.001686792">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; overflow &gt; restore styles &gt; should restore styles correctly if overflow-x existed before" time="0.003335292">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; multi container &gt; should work will multiple containers" time="0.004584917">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; container aria-hidden &gt; should not contain aria-hidden on modal" time="0.0010935">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; container aria-hidden &gt; should add aria-hidden to container siblings" time="0.018236458">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; container aria-hidden &gt; should not add aria-hidden to forbidden container siblings" time="0.00412475">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; container aria-hidden &gt; should add aria-hidden to previous modals" time="0.001884458">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; container aria-hidden &gt; should remove aria-hidden on siblings" time="0.002209917">
        </testcase>
        <testcase classname="packages/mui-material/src/Modal/ModalManager.test.ts" name="ModalManager &gt; container aria-hidden &gt; should keep previous aria-hidden siblings hidden" time="0.00441375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/NativeSelect/NativeSelect.test.js" timestamp="2025-09-10T11:25:37.499Z" hostname="Jans-MacBook-Air.local" tests="12" failures="0" errors="0" skipped="1" time="0.379857792">
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelect.test.js" name="&lt;NativeSelect /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.119898083">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelect.test.js" name="&lt;NativeSelect /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.033815208">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelect.test.js" name="&lt;NativeSelect /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.023248459">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelect.test.js" name="&lt;NativeSelect /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.014768666">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelect.test.js" name="&lt;NativeSelect /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.047445625">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelect.test.js" name="&lt;NativeSelect /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.021244417">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelect.test.js" name="&lt;NativeSelect /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.011671625">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelect.test.js" name="&lt;NativeSelect /&gt; &gt; should render a native select" time="0.071920042">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelect.test.js" name="&lt;NativeSelect /&gt; &gt; should provide the classes to the input component" time="0.009503083">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelect.test.js" name="&lt;NativeSelect /&gt; &gt; should provide the classes to the select component" time="0.015014417">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelect.test.js" name="&lt;NativeSelect /&gt; &gt; slots overrides should work" time="0.000622792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelect.test.js" name="&lt;NativeSelect /&gt; &gt; styled NativeSelect with custom input should not overwritten className" time="0.00800575">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/NativeSelect/NativeSelectInput.test.js" timestamp="2025-09-10T11:25:37.500Z" hostname="Jans-MacBook-Air.local" tests="8" failures="0" errors="0" skipped="2" time="0.050305666">
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelectInput.test.js" name="&lt;NativeSelectInput /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.01916575">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelectInput.test.js" name="&lt;NativeSelectInput /&gt; &gt; should render a native select" time="0.005607459">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelectInput.test.js" name="&lt;NativeSelectInput /&gt; &gt; should respond to update event" time="0.011401291">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelectInput.test.js" name="&lt;NativeSelectInput /&gt; &gt; should apply outlined class" time="0.004168583">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelectInput.test.js" name="&lt;NativeSelectInput /&gt; &gt; should apply filled class" time="0.004030167">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelectInput.test.js" name="&lt;NativeSelectInput /&gt; &gt; should apply multiple class to `select` slot" time="0.002725792">
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelectInput.test.js" name="&lt;NativeSelectInput /&gt; &gt; prop: multiple &gt; should be able to override `multiple` rule name in `select` slot" time="0.000555334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/NativeSelect/NativeSelectInput.test.js" name="&lt;NativeSelectInput /&gt; &gt; theme styleOverrides: &gt; should override with error style when `select` has `error` state" time="0.000860083">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Paper/Paper.test.js" timestamp="2025-09-10T11:25:37.500Z" hostname="Jans-MacBook-Air.local" tests="21" failures="0" errors="0" skipped="6" time="0.064597208">
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.019739042">
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.0045005">
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003333208">
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.001862584">
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.003694125">
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.003870875">
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001752416">
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000748916">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000487541">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000228417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000172167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000199083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.002811166">
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; prop: square &gt; can disable the rounded class" time="0.003072">
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; prop: square &gt; adds a rounded class to the root when omitted" time="0.001674542">
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; prop: variant &gt; adds a outlined class" time="0.00138475">
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; should set the elevation elevation class" time="0.0026665">
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; allows custom elevations via theme.shadows" time="0.007844042">
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; warnings &gt; warns if the given `elevation` is not implemented in the theme" time="0.001857541">
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; warnings &gt; warns if `elevation={numberGreaterThanZero}` is used with `variant=&quot;outlined&quot;`" time="0.000515583">
        </testcase>
        <testcase classname="packages/mui-material/src/Paper/Paper.test.js" name="&lt;Paper /&gt; &gt; should have no boxShadow or background-image on Paper with elevation 0 in dark mode using CSS variables" time="0.000267875">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Pagination/Pagination.test.js" timestamp="2025-09-10T11:25:37.501Z" hostname="Jans-MacBook-Air.local" tests="18" failures="0" errors="0" skipped="5" time="0.267307875">
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.041840291">
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.012055417">
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.013585">
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007549792">
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.009373833">
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.010458583">
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.005341334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000616625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000682791">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000933625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000745709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.014327458">
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; should render" time="0.005781959">
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; moves aria-current to the specified page" time="0.063864583">
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; fires onChange when a different page is clicked" time="0.025517459">
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; should not fire onChange when an ellipsis div is clicked" time="0.01063925">
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; renders controls with correct order in rtl theme" time="0.01963">
        </testcase>
        <testcase classname="packages/mui-material/src/Pagination/Pagination.test.js" name="&lt;Pagination /&gt; &gt; renders correct amount of buttons on correct order when boundaryCount is zero" time="0.022762917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/PaginationItem/PaginationItem.test.js" timestamp="2025-09-10T11:25:37.503Z" hostname="Jans-MacBook-Air.local" tests="28" failures="0" errors="0" skipped="5" time="0.245614708">
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.026502292">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.009640833">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005627292">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00483225">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.007205083">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00347025">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000882208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000403375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000466625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.00021625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000159375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.006955959">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; should render" time="0.00313075">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; should add the `selected` class to the root element if `selected={true}`" time="0.044457375">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; should add the `colorPrimary` class to the root element if `color=&quot;primary&quot;`" time="0.011445334">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; should add the `colorSecondary` class to the root element if `color=&quot;secondary&quot;`" time="0.007000084">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; prop: disabled &gt; should add the `disabled` class to the root element if `disabled={true}`" time="0.005638958">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; prop: disabled &gt; should render a disabled button if `disabled={true}`" time="0.011648209">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; should render a small button" time="0.00740525">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; should render a large button" time="0.002890542">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; should render a first-last button" time="0.006076875">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; should render a previous-next button" time="0.005913917">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; prop: slots, slotProps, components &gt; icons passed in slots prop should override default icons" time="0.012584458">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; prop: slots, slotProps, components &gt; slotProps should be applied to icons passed in slots prop" time="0.025309708">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; prop: slots, slotProps, components &gt; icons passed in slots should override icons passed in components prop " time="0.014873083">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; prop: slots, slotProps, components &gt; should apply slotProps to icons passed in slots prop" time="0.009057958">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; prop: slots, slotProps, components &gt; slotProps should override internal props" time="0.006212167">
        </testcase>
        <testcase classname="packages/mui-material/src/PaginationItem/PaginationItem.test.js" name="&lt;PaginationItem /&gt; &gt; prop: slots, slotProps, components &gt; should take RtlProvider into account when provided and apply slotProps to slots accordingly" time="0.003654625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Popper/Popper.test.js" timestamp="2025-09-10T11:25:37.504Z" hostname="Jans-MacBook-Air.local" tests="31" failures="0" errors="0" skipped="1" time="0.441039834">
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.087807584">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.019726625">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.009940167">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.000754833">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.00879775">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the componentsProps.root prop" time="0.012198208">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.root&apos; over componentsProps.root if both are defined" time="0.010040667">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.008358084">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.011106417">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the components.Root prop" time="0.0159645">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.root&apos; over components.Root if both are defined" time="0.006540458">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the components.Root prop" time="0.0180195">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.010154417">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: placement &gt; should have top placement" time="0.008839709">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: placement &gt; should flip bottom-end when direction=rtl is used" time="0.013522375">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: placement &gt; should flip bottom-start when direction=rtl is used" time="0.010046459">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: placement &gt; should flip top-end when direction=rtl is used" time="0.006125167">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: placement &gt; should flip top-start when direction=rtl is used" time="0.007831416">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: placement &gt; should not flip top when direction=rtl is used" time="0.00818475">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: placement &gt; should flip placement when edge is reached" time="0.001120125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: open &gt; should open without any issue" time="0.012526583">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: open &gt; should close without any issue" time="0.0097305">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: popperOptions &gt; should pass all popperOptions to popperjs" time="0.014189458">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: keepMounted &gt; should keep the children mounted in the DOM" time="0.002277042">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: keepMounted &gt; by default &gt; should remove the transition children in the DOM when closed whilst transition status is entering" time="0.044458416">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: transition &gt; should work" time="0.009316084">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: popperRef &gt; should return a ref" time="0.031279666">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: disablePortal &gt; should work" time="0.008642875">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; prop: disablePortal &gt; sets preventOverflow altBoundary to false when disablePortal is false" time="0.008149666">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; display &gt; should keep display:none when not toggled and transition/keepMounted/disablePortal props are set" time="0.015465292">
        </testcase>
        <testcase classname="packages/mui-material/src/Popper/Popper.test.js" name="&lt;Popper /&gt; &gt; default props &gt; should consume theme default props" time="0.006822417">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Portal/Portal.test.tsx" timestamp="2025-09-10T11:25:37.506Z" hostname="Jans-MacBook-Air.local" tests="10" failures="0" errors="0" skipped="0" time="0.096367083">
        <testcase classname="packages/mui-material/src/Portal/Portal.test.tsx" name="&lt;Portal /&gt; &gt; server-side &gt; render nothing on the server" time="0.00789775">
        </testcase>
        <testcase classname="packages/mui-material/src/Portal/Portal.test.tsx" name="&lt;Portal /&gt; &gt; ref &gt; should have access to the mountNode when disabledPortal={false}" time="0.03387675">
        </testcase>
        <testcase classname="packages/mui-material/src/Portal/Portal.test.tsx" name="&lt;Portal /&gt; &gt; ref &gt; should have access to the mountNode when disabledPortal={true}" time="0.00782975">
        </testcase>
        <testcase classname="packages/mui-material/src/Portal/Portal.test.tsx" name="&lt;Portal /&gt; &gt; ref &gt; should have access to the mountNode when switching disabledPortal" time="0.009517542">
        </testcase>
        <testcase classname="packages/mui-material/src/Portal/Portal.test.tsx" name="&lt;Portal /&gt; &gt; should render in a different node" time="0.004015167">
        </testcase>
        <testcase classname="packages/mui-material/src/Portal/Portal.test.tsx" name="&lt;Portal /&gt; &gt; should unmount when parent unmounts" time="0.005588333">
        </testcase>
        <testcase classname="packages/mui-material/src/Portal/Portal.test.tsx" name="&lt;Portal /&gt; &gt; should render overlay into container (document)" time="0.004120791">
        </testcase>
        <testcase classname="packages/mui-material/src/Portal/Portal.test.tsx" name="&lt;Portal /&gt; &gt; should render overlay into container (DOMNode)" time="0.0044225">
        </testcase>
        <testcase classname="packages/mui-material/src/Portal/Portal.test.tsx" name="&lt;Portal /&gt; &gt; should change container on prop change" time="0.007743458">
        </testcase>
        <testcase classname="packages/mui-material/src/Portal/Portal.test.tsx" name="&lt;Portal /&gt; &gt; should call ref after child effect" time="0.009867959">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Popover/Popover.test.js" timestamp="2025-09-10T11:25:37.506Z" hostname="Jans-MacBook-Air.local" tests="85" failures="0" errors="0" skipped="0" time="0.548640167">
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.059938792">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.016186625">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.008949542">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.0064935">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.007596541">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; sets custom properties on the paper slot&apos;s element with the slotProps.paper prop" time="0.007791125">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.paper with the built-in ones" time="0.005569125">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop prop" time="0.00657575">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.backdrop with the built-in ones" time="0.006547084">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition prop" time="0.004891667">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004424083">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; sets custom properties on the paper slot&apos;s element with the slotProps.paper callback" time="0.005258458">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop callback" time="0.004437708">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback" time="0.008832042">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.005184458">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; sets custom properties on the paper slot&apos;s element with the slotProps.paper callback using the ownerState" time="0.005430958">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; sets custom properties on the backdrop slot&apos;s element with the slotProps.backdrop callback using the ownerState" time="0.005804625">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback using the ownerState" time="0.005214458">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003588583">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002632291">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; allows overriding the paper slot with a component using the slots.paper prop" time="0.005853459">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; allows overriding the paper slot with an element using the slots.paper prop" time="0.004564">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; allows overriding the backdrop slot with a component using the slots.backdrop prop" time="0.004001708">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; allows overriding the backdrop slot with an element using the slots.backdrop prop" time="0.004202959">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; allows overriding the transition slot with a component using the slots.transition prop" time="0.005783333">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; allows overriding the transition slot with an element using the slots.transition prop" time="0.004795167">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.007237">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; root node &gt; should render a Modal with an invisible backdrop as the root node" time="0.004032625">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; root node &gt; should only render its children when open" time="0.007599875">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; root node &gt; hide its children immediately when closing but transition them out" time="0.011913959">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; root node &gt; getOffsetTop &gt; should return vertical when vertical is a number" time="0.000284334">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; root node &gt; getOffsetTop &gt; should return half of rect.height if vertical is &apos;center&apos;" time="0.00018475">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; root node &gt; getOffsetTop &gt; should return rect.height if vertical is &apos;bottom&apos;" time="0.000153958">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; root node &gt; getOffsetTop &gt; should return zero if vertical is something else" time="0.000144667">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; root node &gt; getOffsetLeft &gt; should return horizontal when horizontal is a number" time="0.000152542">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; root node &gt; getOffsetLeft &gt; should return half of rect.width if horizontal is &apos;center&apos;" time="0.000142291">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; root node &gt; getOffsetLeft &gt; should return rect.width if horizontal is &apos;right&apos;" time="0.000135209">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; root node &gt; getOffsetLeft &gt; should return zero if horizontal is something else" time="0.000136042">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; transition &gt; appears on mount" time="0.005550208">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; transition &gt; should fire Popover transition event callbacks" time="0.011031958">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; paper &gt; should have the paper class" time="0.005381542">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; paper &gt; should have a elevation prop passed down" time="0.009827542">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: PaperProps &gt; ref &gt; should position popover correctly" time="0.006248375">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: PaperProps &gt; className &gt; should add the className to the paper" time="0.004856167">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; transition lifecycle &gt; handleEntering(element) &gt; should set the inline styles for the enter phase" time="0.008327042">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; transition lifecycle &gt; paper styles &gt; should have opacity 1 only after onEntering has been called" time="0.009989917">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: anchorEl &gt; should accept a function" time="0.001576791">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: anchorEl &gt; should accept a virtual element" time="0.0055215">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; positioning on an anchor &gt; should be positioned over the top left of the anchor" time="0.006059458">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; positioning on an anchor &gt; should be positioned over the center left of the anchor" time="0.006210625">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; positioning on an anchor &gt; should be positioned over the bottom left of the anchor" time="0.005994083">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; positioning on an anchor &gt; should be positioned over the center center of the anchor" time="0.007480542">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; positioning on an anchor &gt; should be positioned over the top right of the anchor" time="0.006172041">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; positioning on an anchor &gt; should be positioned over the bottom right of the anchor" time="0.006134875">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; should pass through container prop if container and anchorEl props are provided" time="0.0051575">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; should use anchorEl&apos;s parent body as container if container not provided" time="0.005776917">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; warnings &gt; should warn if anchorEl is not valid" time="0.000839709">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; warnings &gt; warns if a component for the Paper is used that cant hold a ref" time="0.000489791">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop anchorReference=&quot;anchorPosition&quot; &gt; should be positioned according to the passed coordinates" time="0.006049792">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop anchorReference=&quot;anchorPosition&quot; &gt; should ignore the anchorOrigin prop when being positioned" time="0.008472417">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop anchorReference=&quot;none&quot; &gt; should not try to change the position" time="0.00624675">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; update position &gt; should recalculate position if the popover is open" time="0.008231541">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; update position &gt; should not recalculate position if the popover is closed" time="0.012966375">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; update position &gt; should be able to manually recalculate position" time="0.011109833">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=0` &gt; when no movement is needed" time="0.006054791">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=0` &gt; top &lt; marginThreshold" time="0.008910709">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=0` &gt; bottom &gt; heightThreshold &gt; test" time="0.005010709">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=0` &gt; left &lt; marginThreshold" time="0.009517709">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=0` &gt; right &gt; widthThreshold &gt; test" time="0.00509025">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=18` &gt; when no movement is needed" time="0.006165833">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=18` &gt; top &lt; marginThreshold" time="0.005020542">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=18` &gt; bottom &gt; heightThreshold &gt; test" time="0.005480084">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=18` &gt; left &lt; marginThreshold" time="0.007578709">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=18` &gt; right &gt; widthThreshold &gt; test" time="0.005389334">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=16` &gt; when no movement is needed" time="0.006918792">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=16` &gt; top &lt; marginThreshold" time="0.007117375">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=16` &gt; bottom &gt; heightThreshold &gt; test" time="0.00507525">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=16` &gt; left &lt; marginThreshold" time="0.005253958">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=16` &gt; right &gt; widthThreshold &gt; test" time="0.004610417">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: marginThreshold &gt; positioning when `marginThreshold=null` &gt; should not apply the marginThreshold when marginThreshold is null" time="0.007555875">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: transitionDuration &gt; should apply the auto prop if supported" time="0.007266417">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: transitionDuration &gt; should not apply the auto prop if not supported" time="0.004040291">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; should not throw if ownerState is used in slot&apos;s styleOverrides" time="0.00900825">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: slotProps &gt; paper &gt; should override PaperProps" time="0.0055025">
        </testcase>
        <testcase classname="packages/mui-material/src/Popover/Popover.test.js" name="&lt;Popover /&gt; &gt; prop: slotProps &gt; paper &gt; should position popover correctly when ref is provided" time="0.00479075">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Radio/Radio.test.js" timestamp="2025-09-10T11:25:37.510Z" hostname="Jans-MacBook-Air.local" tests="34" failures="0" errors="0" skipped="6" time="0.295476459">
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.04127825">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.013203875">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.01248525">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00949175">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.014370333">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.008919875">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.009593041">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.input with the built-in ones" time="0.00525375">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.0064335">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback" time="0.005282375">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.006007333">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback using the ownerState" time="0.005861125">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001660166">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001725708">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.003900917">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; allows overriding the input slot with an element using the slots.input prop" time="0.007894792">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.008015625">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00408925">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000350458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000208541">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000155625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000140458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000143125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.007082791">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; styleSheet &gt; should have the classes required for SwitchBase" time="0.000178875">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; prop: unchecked &gt; should render an unchecked icon" time="0.006654">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; prop: checked &gt; should render a checked icon" time="0.003969042">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; prop: size &gt; add sizeSmall class to the root element when the size prop equals &quot;small&quot;" time="0.058043334">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; with FormControl &gt; enabled &gt; should not have the disabled class" time="0.012954">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; with FormControl &gt; enabled &gt; should be overridden by props" time="0.012364667">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; with FormControl &gt; disabled &gt; should have the disabled class" time="0.005505125">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; with FormControl &gt; disabled &gt; should be overridden by props" time="0.011153333">
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; theme: customization &gt; should be customizable in the theme using the size prop." time="0.000228916">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Radio/Radio.test.js" name="&lt;Radio /&gt; &gt; deprecated `inputProps` should work" time="0.008068">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ScopedCssBaseline/ScopedCssBaseline.test.js" timestamp="2025-09-10T11:25:37.512Z" hostname="Jans-MacBook-Air.local" tests="11" failures="0" errors="0" skipped="3" time="0.071202833">
        <testcase classname="packages/mui-material/src/ScopedCssBaseline/ScopedCssBaseline.test.js" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.032122292">
        </testcase>
        <testcase classname="packages/mui-material/src/ScopedCssBaseline/ScopedCssBaseline.test.js" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.009367166">
        </testcase>
        <testcase classname="packages/mui-material/src/ScopedCssBaseline/ScopedCssBaseline.test.js" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004190084">
        </testcase>
        <testcase classname="packages/mui-material/src/ScopedCssBaseline/ScopedCssBaseline.test.js" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002515709">
        </testcase>
        <testcase classname="packages/mui-material/src/ScopedCssBaseline/ScopedCssBaseline.test.js" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005134958">
        </testcase>
        <testcase classname="packages/mui-material/src/ScopedCssBaseline/ScopedCssBaseline.test.js" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.007323083">
        </testcase>
        <testcase classname="packages/mui-material/src/ScopedCssBaseline/ScopedCssBaseline.test.js" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004305125">
        </testcase>
        <testcase classname="packages/mui-material/src/ScopedCssBaseline/ScopedCssBaseline.test.js" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000598208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ScopedCssBaseline/ScopedCssBaseline.test.js" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.0005575">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ScopedCssBaseline/ScopedCssBaseline.test.js" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000262125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ScopedCssBaseline/ScopedCssBaseline.test.js" name="&lt;ScopedCssBaseline /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003380208">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Rating/Rating.test.js" timestamp="2025-09-10T11:25:37.512Z" hostname="Jans-MacBook-Air.local" tests="59" failures="0" errors="0" skipped="10" time="0.379715208">
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.0216995">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005103875">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004071292">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00322325">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004944083">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.00602275">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.002468959">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label prop" time="0.002624417">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.label with the built-in ones" time="0.004272625">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.002638333">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label callback" time="0.002049333">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.003004208">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label callback using the ownerState" time="0.002095417">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001726791">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001910708">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; allows overriding the label slot with a component using the slots.label prop" time="0.002038333">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; allows overriding the label slot with an element using the slots.label prop" time="0.001686209">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.003805583">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.003483625">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000721292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000229542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000171917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000153875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000191959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003252542">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; sets custom properties on the icon slot&apos;s element with the slotProps.icon prop" time="0.004516">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.icon with the built-in ones" time="0.009962167">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; sets custom properties on the icon slot&apos;s element with the slotProps.icon callback" time="0.0031865">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; sets custom properties on the icon slot&apos;s element with the slotProps.icon callback using the ownerState" time="0.002794042">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; allows overriding the icon slot with a component using the slots.icon prop" time="0.003257125">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; allows overriding the icon slot with an element using the slots.icon prop" time="0.002868292">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; sets custom properties on the decimal slot&apos;s element with the slotProps.decimal prop" time="0.005058">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.decimal with the built-in ones" time="0.00427225">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; sets custom properties on the decimal slot&apos;s element with the slotProps.decimal callback" time="0.003763209">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; sets custom properties on the decimal slot&apos;s element with the slotProps.decimal callback using the ownerState" time="0.0040135">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; allows overriding the decimal slot with a component using the slots.decimal prop" time="0.003913833">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; MUI component API &gt; allows overriding the decimal slot with an element using the slots.decimal prop" time="0.003684">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; should render" time="0.005342458">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; should round the value to the provided precision" time="0.022405916">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; should handle mouse hover correctly" time="0.015271792">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; should handle mouse hover correctly for icons with spacing" time="0.039182292">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; should clear the rating" time="0.010323958">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; should select the rating" time="0.007966125">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; should change the value to null" time="0.008097042">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; should select the empty input if value is null" time="0.005170333">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; should support a defaultValue" time="0.008814083">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; has a customization point for the label of the empty value when it is active" time="0.056312834">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; should apply labelEmptyValueActive styles from theme" time="0.000903">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; should ensure a `name`" time="0.0167435">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; should use `name` as prefix of input element ids" time="0.005471708">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; should be able to replace the icon" time="0.004797875">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; prop: readOnly &gt; renders a role=&quot;img&quot;" time="0.008271708">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; prop: readOnly &gt; can be labelled with getLabelText" time="0.009467875">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; prop: readOnly &gt; should have a correct label when no value is set" time="0.009809083">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; prop: readOnly &gt; should have readOnly class applied" time="0.008442291">
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; &lt;form&gt; integration &gt; submits the expected form data #1" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; &lt;form&gt; integration &gt; submits the expected form data #2" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; &lt;form&gt; integration &gt; submits the expected form data #3" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Rating/Rating.test.js" name="&lt;Rating /&gt; &gt; &lt;form&gt; integration &gt; submits the expected form data #4" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/RadioGroup/RadioGroup.test.js" timestamp="2025-09-10T11:25:37.515Z" hostname="Jans-MacBook-Air.local" tests="28" failures="0" errors="0" skipped="0" time="0.389270459">
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.027476833">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.009944375">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002721834">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.000383541">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005991">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; the root component has the radiogroup role" time="0.007038041">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; should fire the onBlur callback" time="0.00471375">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; should fire the onKeyDown callback" time="0.034299584">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; should support uncontrolled mode" time="0.055039166">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; should support default value in uncontrolled mode" time="0.032805917">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; should have a default name" time="0.01048675">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; should support number value" time="0.01552425">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; imperative focus() &gt; should focus the first non-disabled radio" time="0.016724833">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; imperative focus() &gt; should not focus any radios if all are disabled" time="0.013974">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; imperative focus() &gt; should focus the selected radio" time="0.014053584">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; imperative focus() &gt; should focus the non-disabled radio rather than the disabled selected radio" time="0.037575834">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; imperative focus() &gt; should be able to focus with no radios" time="0.001385167">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; should accept invalid child" time="0.006369125">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; prop: onChange &gt; should fire onChange" time="0.013201583">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; prop: onChange &gt; should chain the onChange property" time="0.016385417">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; prop: onChange &gt; with non-string values &gt; passes the value of the selected Radio as a string" time="0.029243958">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; useRadioGroup &gt; from props &gt; should have the name prop from the instance" time="0.002241916">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; useRadioGroup &gt; from props &gt; should have the value prop from the instance" time="0.001806292">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; useRadioGroup &gt; from props &gt; should have a default name from the instance" time="0.001606792">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; useRadioGroup &gt; callbacks &gt; onChange &gt; should set the value state" time="0.004493375">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; warnings &gt; should warn when switching from controlled to uncontrolled" time="0.00797025">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; warnings &gt; should warn when switching between uncontrolled to controlled" time="0.004346583">
        </testcase>
        <testcase classname="packages/mui-material/src/RadioGroup/RadioGroup.test.js" name="&lt;RadioGroup /&gt; &gt; should apply the classnames" time="0.008429833">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Select/Select.test.js" timestamp="2025-09-10T11:25:37.517Z" hostname="Jans-MacBook-Air.local" tests="131" failures="0" errors="0" skipped="8" time="2.290178959">
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.076312375">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.019456458">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.021204041">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.015870667">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.01585">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.017123375">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.011048584">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: inputProps &gt; should be able to provide a custom classes property" time="0.013223625">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should be able to mount the component" time="0.013543125">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; the trigger is in tab order" time="0.044919292">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should accept null child" time="0.032318625">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should support conditional rendering with &quot;&quot;" time="0.024914792">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should support conditional rendering with &quot;0&quot;" time="0.019395542">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should support conditional rendering with &quot;false&quot;" time="0.028086542">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should support conditional rendering with &quot;undefined&quot;" time="0.038718125">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should support conditional rendering with &quot;NaN&quot;" time="0.016913875">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should have an input with [aria-hidden] by default" time="0.013896667">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should ignore onBlur when the menu opens" time="0.070877542">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; options should have a data-value attribute" time="0.03069">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should open menu when pressed   key on select" time="0.040257875">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should open menu when pressed ArrowUp key on select" time="0.039877084">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should open menu when pressed ArrowDown key on select" time="0.04250975">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should open menu when pressed Enter key on select" time="0.042782958">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should pass &quot;name&quot; as part of the event.target for onBlur" time="0.016006709">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should call onClose when the backdrop is clicked" time="0.02144425">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should call onClose when the same option is selected" time="0.059508333">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should focus select when its label is clicked" time="0.033829375">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should focus list if no selection" time="0.035939958">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: onChange &gt; should get selected element from arguments" time="0.034654459">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: onChange &gt; should call onChange before onClose" time="0.036130125">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: onChange &gt; should not be called if selected element has the current value (value did not change)" time="0.02486625">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: defaultOpen &gt; should be open on mount" time="0.0181525">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: value &gt; should select the option based on the number value" time="0.014961375">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: value &gt; should select the option based on the string value" time="0.016532667">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: value &gt; should select only the option that matches the object" time="0.017204084">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: value &gt; should be able to use an object" time="0.008174792">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: value &gt; warnings &gt; warns when the value is not present in any option" time="0.00678175">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should not have the selectable option selected when inital value provided is empty string on Select with ListSubHeader item" time="0.021420708">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; SVG icon &gt; should not present an SVG icon when native and multiple are specified" time="0.005777167">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; SVG icon &gt; should present an SVG icon" time="0.011311459">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; sets aria-expanded=&quot;true&quot; when the listbox is displayed" time="0.014471916">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; ARIA 1.2: aria-expanded=&quot;false&quot; if the listbox isn&apos;t displayed" time="0.009850625">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; sets aria-disabled=&quot;true&quot; when component is disabled" time="0.007948167">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; sets disabled attribute in input when component is disabled" time="0.007650625">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; aria-disabled is not present if component is not disabled" time="0.00959175">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; sets aria-required=&quot;true&quot; when component is required" time="0.008321583">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; aria-required is not present if component is not required" time="0.007395625">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; sets required attribute in input when component is required" time="0.006945417">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; sets aria-invalid=&quot;true&quot; when component is in the error state" time="0.015295458">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; aria-invalid is not present if component is not in an error state" time="0.011015834">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; indicates that activating the button displays a listbox" time="0.0077865">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; renders an element with listbox behavior" time="0.020420583">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; indicates that input element has combobox role and aria-controls set to id of listbox" time="0.016830375">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; does not set aria-controls when closed" time="0.006654125">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; the listbox is focusable" time="0.018113792">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; identifies each selectable element containing an option" time="0.036441583">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; indicates the selected option" time="0.019544959">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; when the first child is a ListSubheader &gt; first selectable option is focused to use the arrow" time="0.050526917">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; when the first child is a ListSubheader &gt; when also the second child is a ListSubheader &gt; first selectable option is focused to use the arrow" time="0.038679333">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; when the first child is a ListSubheader &gt; when the second child is null &gt; first selectable option is focused to use the arrow" time="0.026696125">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; when the first child is a ListSubheader &gt; when the second child is conditionally rendering with &quot;&quot; &gt; first selectable option is focused to use the arrow" time="0.032975333">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; when the first child is a ListSubheader &gt; when the second child is conditionally rendering with &quot;0&quot; &gt; first selectable option is focused to use the arrow" time="0.027290458">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; when the first child is a ListSubheader &gt; when the second child is conditionally rendering with &quot;false&quot; &gt; first selectable option is focused to use the arrow" time="0.019647208">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; when the first child is a ListSubheader &gt; when the second child is conditionally rendering with &quot;undefined&quot; &gt; first selectable option is focused to use the arrow" time="0.020686542">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; when the first child is a ListSubheader &gt; when the second child is conditionally rendering with &quot;NaN&quot; &gt; first selectable option is focused to use the arrow" time="0.02114025">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; when the first child is a ListSubheader wrapped in a custom component &gt; with the `muiSkipListHighlight` static field &gt; highlights the first selectable option below the header" time="0.012931834">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; when the first child is a ListSubheader wrapped in a custom component &gt; with the `muiSkipListHighlight` prop &gt; highlights the first selectable option below the header" time="0.017536375">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; when the first child is a MenuItem disabled &gt; highlights the first selectable option below the header" time="0.018822917">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; it will fallback to its content for the accessible name when it has no name" time="0.008507459">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; is labelled by itself when it has a name" time="0.006822708">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; is labelled by itself when it has an id which is preferred over name" time="0.008595125">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; can be labelled by an additional element if its id is provided in `labelId`" time="0.008453875">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; the list of options is not labelled by default" time="0.013176583">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; the list of options can be labelled by providing `labelId`" time="0.009897208">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; accessibility &gt; should have appropriate accessible description when provided in props" time="0.010181542">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: readOnly &gt; should not trigger any event with readOnly" time="0.007838458">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: MenuProps &gt; should apply additional props to the Menu component" time="0.019532042">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: MenuProps &gt; should be able to override PaperProps minWidth" time="0.016235833">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: MenuProps &gt; should merge `slotProps.paper` with the default Paper props" time="0.000442167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: MenuProps &gt; should merge `slotProps.list` with default List props" time="0.012142666">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: MenuProps &gt; should forward `slotProps` to menu" time="0.017651084">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: SelectDisplayProps &gt; should apply additional props to trigger element" time="0.007908083">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: displayEmpty &gt; should display the selected item even if its value is empty" time="0.006144208">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: displayEmpty &gt; should notch the outline to accommodate the label when displayEmpty" time="0.000304583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: renderValue &gt; should use the prop to render the value" time="0.013898375">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: open (controlled) &gt; should not focus on close controlled select" time="0.019097417">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: open (controlled) &gt; should allow to control closing by passing onClose props" time="0.024644375">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: open (controlled) &gt; should be open when initially true" time="0.012104292">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: open (controlled) &gt; open only with the left mouse button click" time="0.0086085">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: autoWidth &gt; should take the trigger parent element width into account by default" time="0.014986083">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: autoWidth &gt; should not take the trigger parent element width into account when autoWidth is true" time="0.018833417">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: multiple &gt; should serialize multiple select value" time="0.015611541">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: multiple &gt; should have aria-multiselectable=true when multiple is true" time="0.017505125">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: multiple &gt; should serialize multiple select display value" time="0.006665833">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: multiple &gt; should not throw an error if `value` is an empty array" time="0.004781833">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: multiple &gt; should not throw an error if `value` is not an empty array" time="0.004808958">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: multiple &gt; selects value based on their stringified equality when they&apos;re not objects" time="0.015201625">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: multiple &gt; selects values based on strict equality if they&apos;re objects" time="0.012614625">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: multiple &gt; errors &gt; should throw if non array" time="0.009227625">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: multiple &gt; prop: onChange &gt; should call onChange when clicking an item" time="0.022461708">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: multiple &gt; should apply multiple class to `select` slot" time="0.020856583">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: multiple &gt; should be able to override `multiple` rule name in `select` slot" time="0.000417875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: autoFocus &gt; should focus select after Select did mount" time="0.011371334">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should be able to return the input node via a ref object" time="0.007025291">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: inputRef &gt; should be able to return the input node via a ref object" time="0.008837833">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: inputRef &gt; should be able focus the trigger imperatively" time="0.010339333">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: name &gt; should have no id when name is not provided" time="0.007817458">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: name &gt; should have select-`name` id when name is provided" time="0.007478167">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: native &gt; renders a &lt;select /&gt;" time="0.007018958">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: native &gt; can be labelled with a &lt;label /&gt;" time="0.0240155">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prevents the default when releasing Space on the children" time="0.01671625">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should pass onClick prop to MenuItem" time="0.023020125">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should handle the browser autofill event and simple testing-library API" time="0.010916125">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should support native form validation" time="0.0004255">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should programmatically focus the select" time="0.011234583">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should not override the event.target on mouse events" time="0.026395666">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should only select options" time="0.025925416">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; slots overrides should work" time="0.000370209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; form submission &gt; includes Select value in formData only if the `name` attribute is provided" time="0.000218958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; theme styleOverrides: &gt; should override with error style when `native select` has `error` state" time="0.0001845">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; theme styleOverrides: &gt; should override with error style when `select` has `error` state" time="0.000164458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; variant overrides should work for &quot;standard&quot; variant" time="0.023515875">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; variant overrides should work for &quot;outlined&quot; variant" time="0.00983425">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; variant overrides should work for &quot;filled&quot; variant" time="0.019092542">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: input &gt; merges `ref` of `Select` and `input`" time="0.004486958">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: input &gt; should have root class" time="0.010796875">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; prop: input &gt; should merge the class names" time="0.00556125">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; should not focus select when clicking an arbitrary element with id=&quot;undefined&quot;" time="0.009138291">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; outlined icon should be selected from below css selectors" time="0.008158708">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; standard icon should be selected from below css selectors" time="0.009462292">
        </testcase>
        <testcase classname="packages/mui-material/src/Select/Select.test.js" name="&lt;Select /&gt; &gt; filled icon should be selected from below css selectors" time="0.006722167">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Slider/Slider.test.js" timestamp="2025-09-10T11:25:37.525Z" hostname="Jans-MacBook-Air.local" tests="188" failures="0" errors="0" skipped="9" time="1.260525208">
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.0355445">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prop components: &gt; can render another root component with the `components` prop" time="0.010144208">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.007595209">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.0059545">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00610925">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.0054075">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.004937834">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.00856925">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the componentsProps.root prop" time="0.005433834">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.root&apos; over componentsProps.root if both are defined" time="0.005846417">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the thumb slot&apos;s element with the slotProps.thumb prop" time="0.006653167">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.thumb with the built-in ones" time="0.00491725">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the thumb slot&apos;s element with the componentsProps.thumb prop" time="0.004341834">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.thumb&apos; over componentsProps.thumb if both are defined" time="0.00480475">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the track slot&apos;s element with the slotProps.track prop" time="0.004339375">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.track with the built-in ones" time="0.007141709">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the track slot&apos;s element with the componentsProps.track prop" time="0.006452542">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.track&apos; over componentsProps.track if both are defined" time="0.006572916">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the rail slot&apos;s element with the slotProps.rail prop" time="0.004796791">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.rail with the built-in ones" time="0.006483292">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the rail slot&apos;s element with the componentsProps.rail prop" time="0.004421">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.rail&apos; over componentsProps.rail if both are defined" time="0.0041005">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.004000916">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the componentsProps.input prop" time="0.006413">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.input&apos; over componentsProps.input if both are defined" time="0.004002791">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the mark slot&apos;s element with the slotProps.mark prop" time="0.003441417">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.mark with the built-in ones" time="0.00394675">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the mark slot&apos;s element with the componentsProps.mark prop" time="0.003651083">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.mark&apos; over componentsProps.mark if both are defined" time="0.003653417">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the markLabel slot&apos;s element with the slotProps.markLabel prop" time="0.003589542">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.markLabel with the built-in ones" time="0.003630333">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; sets custom properties on the markLabel slot&apos;s element with the componentsProps.markLabel prop" time="0.0042195">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.markLabel&apos; over componentsProps.markLabel if both are defined" time="0.005601917">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003526875">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.003205542">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the components.Root prop" time="0.003758875">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.root&apos; over components.Root if both are defined" time="0.003449208">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the components.Root prop" time="0.003343042">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the thumb slot with a component using the slots.thumb prop" time="0.003151875">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the thumb slot with an element using the slots.thumb prop" time="0.003250667">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the thumb slot with a component using the components.Thumb prop" time="0.002987709">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.thumb&apos; over components.Thumb if both are defined" time="0.003046458">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the thumb slot with an element using the components.Thumb prop" time="0.005031625">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the track slot with a component using the slots.track prop" time="0.005606917">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the track slot with an element using the slots.track prop" time="0.003687708">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the track slot with a component using the components.Track prop" time="0.003418875">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.track&apos; over components.Track if both are defined" time="0.003840417">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the track slot with an element using the components.Track prop" time="0.004137">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the rail slot with a component using the slots.rail prop" time="0.003778917">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the rail slot with an element using the slots.rail prop" time="0.003315917">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the rail slot with a component using the components.Rail prop" time="0.003260875">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.rail&apos; over components.Rail if both are defined" time="0.004923417">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the rail slot with an element using the components.Rail prop" time="0.003371209">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.003027917">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the input slot with an element using the slots.input prop" time="0.003194167">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the components.Input prop" time="0.00305025">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.input&apos; over components.Input if both are defined" time="0.003112958">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the input slot with an element using the components.Input prop" time="0.00313275">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the mark slot with a component using the slots.mark prop" time="0.003086458">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the mark slot with an element using the slots.mark prop" time="0.003022167">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the mark slot with a component using the components.Mark prop" time="0.005193834">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.mark&apos; over components.Mark if both are defined" time="0.003290709">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the mark slot with an element using the components.Mark prop" time="0.003009625">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the markLabel slot with a component using the slots.markLabel prop" time="0.003114">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the markLabel slot with an element using the slots.markLabel prop" time="0.00340225">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the markLabel slot with a component using the components.MarkLabel prop" time="0.003114917">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.markLabel&apos; over components.MarkLabel if both are defined" time="0.003080833">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; allows overriding the markLabel slot with an element using the components.MarkLabel prop" time="0.003247833">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006369041">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.007272625">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000396708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000238792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000180667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000175792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000151291">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.008135083">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; should call handlers" time="0.057256708">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; should only listen to changes from the same touchpoint" time="0.007459292">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; should hedge against a dropped mouseup event" time="0.006048">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; should only fire onChange when the value changes" time="0.006606875">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: classes &gt; adds custom classes to the component" time="0.003531417">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: orientation &gt; should render with the vertical classes" time="0.007308375">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: orientation &gt; should report the right position" time="0.005911666">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; range &gt; should support keyboard" time="0.017094416">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; range &gt; custom marks with restricted float values should support keyboard" time="0.018562333">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; range &gt; should focus the slider when dragging" time="0.012117666">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; range &gt; should support touch events" time="0.014953583">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; range &gt; should not react to right clicks" time="0.009037083">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; should not break when initial value is out of range" time="0.006698125">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; focuses the thumb on when touching" time="0.005438584">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: step &gt; when step is `null` &gt; values are defined by mark values" time="0.010284792">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: step &gt; change events with non integer numbers should work" time="0.009909333">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: step &gt; should round value to step precision" time="0.008659959">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: step &gt; should not fail to round value to step precision when step is very small" time="0.009285292">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: step &gt; should not fail to round value to step precision when step is very small and negative" time="0.00895625">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: disabled &gt; should render the disabled classes" time="0.004914333">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: disabled &gt; should not respond to drag events after becoming disabled" time="0.000261209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: disabled &gt; is not focused (visibly) after becoming disabled" time="0.000131625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: disabled &gt; should be customizable in the theme" time="0.006510709">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: track &gt; should render the track classes for false" time="0.003086">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: track &gt; should render the track classes for inverted" time="0.003851833">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; aria-valuenow &gt; should update the aria-valuenow" time="0.008695083">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: min &gt; should set the min and aria-valuemin on the input" time="0.0071745">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: min &gt; should use min as the step origin" time="0.0059965">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: min &gt; should not go less than the min" time="0.005249917">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: max &gt; should set the max and aria-valuemax on the input" time="0.011418709">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: max &gt; should not go more than the max" time="0.017800917">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: max &gt; should reach right edge value" time="0.016581">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: valueLabelDisplay &gt; should always display the value label according to on and off" time="0.007630667">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: valueLabelDisplay &gt; should display the value label only on hover for auto" time="0.005960083">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: valueLabelDisplay &gt; should be respected when using custom value label" time="0.006446375">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; markActive state &gt; sets the marks active that are `within` the value" time="0.005709208">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; markActive state &gt; uses closed intervals for the within check" time="0.006735375">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; markActive state &gt; should support inverted track" time="0.004255625">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; should forward mouseDown" time="0.002967334">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; rtl &gt; should add direction css" time="0.006549834">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; rtl &gt; should handle RTL" time="0.004982833">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: horizontal &gt; key: ArrowLeft decrements the value" time="0.012787">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: horizontal &gt; key: ArrowDown decrements the value" time="0.006842333">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: horizontal &gt; key: ArrowRight increments the value" time="0.008315042">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: horizontal &gt; key: ArrowUp increments the value" time="0.007753792">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: horizontal &gt; key: PageUp and key: PageDown change the value based on `shiftStep`" time="0.011173375">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: horizontal &gt; key: End sets the value to max" time="0.007126084">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: horizontal &gt; key: Home sets the value to min" time="0.009849958">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: horizontal &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowLeft decrements the value" time="0.015129292">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: horizontal &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowDown decrements the value" time="0.00818925">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: horizontal &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowRight increments the value" time="0.007041917">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: horizontal &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowUp increments the value" time="0.008738875">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: vertical &gt; key: ArrowLeft decrements the value" time="0.007910625">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: vertical &gt; key: ArrowDown decrements the value" time="0.005923917">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: vertical &gt; key: ArrowRight increments the value" time="0.005691084">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: vertical &gt; key: ArrowUp increments the value" time="0.005626084">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: vertical &gt; key: PageUp and key: PageDown change the value based on `shiftStep`" time="0.008085334">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: vertical &gt; key: End sets the value to max" time="0.006943625">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: vertical &gt; key: Home sets the value to min" time="0.006089292">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: vertical &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowLeft decrements the value" time="0.012760709">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: vertical &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowDown decrements the value" time="0.006614375">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: vertical &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowRight increments the value" time="0.006315083">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; ltr &gt; orientation: vertical &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowUp increments the value" time="0.010967959">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: horizontal &gt; key: ArrowRight decrements the value" time="0.011083625">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: horizontal &gt; key: ArrowDown decrements the value" time="0.006518375">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: horizontal &gt; key: ArrowLeft increments the value" time="0.005997833">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: horizontal &gt; key: ArrowUp increments the value" time="0.00670825">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: horizontal &gt; key: PageUp and key: PageDown change the value based on `shiftStep`" time="0.007339666">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: horizontal &gt; key: End sets the value to max" time="0.009501541">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: horizontal &gt; key: Home sets the value to min" time="0.008103458">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: horizontal &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowRight decrements the value" time="0.006395834">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: horizontal &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowDown decrements the value" time="0.009327375">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: horizontal &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowLeft increments the value" time="0.006818333">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: horizontal &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowUp increments the value" time="0.006205125">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: vertical &gt; key: ArrowRight decrements the value" time="0.015337625">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: vertical &gt; key: ArrowDown decrements the value" time="0.007482917">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: vertical &gt; key: ArrowLeft increments the value" time="0.007200916">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: vertical &gt; key: ArrowUp increments the value" time="0.00748">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: vertical &gt; key: PageUp and key: PageDown change the value based on `shiftStep`" time="0.011110417">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: vertical &gt; key: End sets the value to max" time="0.010257208">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: vertical &gt; key: Home sets the value to min" time="0.00633225">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: vertical &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowRight decrements the value" time="0.013406916">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: vertical &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowDown decrements the value" time="0.011937542">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: vertical &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowLeft increments the value" time="0.009432042">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; rtl &gt; orientation: vertical &gt; when `step` is `null` and values are restricted by `marks` &gt; key: ArrowUp increments the value" time="0.01489075">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; stops at the max value with custom marks" time="0.006949667">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; keyboard interactions &gt; stops at the min value with custom marks" time="0.014607625">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; warnings &gt; should warn if aria-valuetext is provided" time="0.002106">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; warnings &gt; should warn if aria-label is provided" time="0.000325792">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; warnings &gt; should warn when switching from controlled to uncontrolled" time="0.004834917">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; warnings &gt; should warn when switching between uncontrolled to controlled" time="0.003861125">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; should support getAriaValueText" time="0.007917958">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; should support getAriaLabel" time="0.005700542">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; should allow customization of the marks" time="0.007159166">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; should correctly display mark labels when ranges slider have the same start and end" time="0.007430625">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; should pass &quot;name&quot; and &quot;value&quot; as part of the event.target for onChange" time="0.006472333">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: ValueLabelComponent &gt; receives the formatted value" time="0.002126583">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; should not override the event.target on touch events" time="0.014301875">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; should not override the event.target on mouse events" time="0.007347041">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; dragging state &gt; should not apply class name for click modality" time="0.006196541">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; dragging state &gt; should apply class name for dragging modality" time="0.007500917">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; should remove the slider from the tab sequence" time="0.004388125">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: disableSwap &gt; should bound the value when using the keyboard" time="0.008917208">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: disableSwap &gt; should bound the value when using the mouse" time="0.006739708">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: disableSwap &gt; should bound the value when moving the first behind the second" time="0.006603958">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: size &gt; should render default slider" time="0.002456875">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: size &gt; should render small slider" time="0.002323">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: components &gt; should render custom components if specified" time="0.002421959">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; prop: componentsProps &gt; should forward the props to their respective components" time="0.002591167">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; marked slider should be customizable in the theme" time="0.000193875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; active marks should be customizable in theme" time="0.000118">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/Slider.test.js" name="&lt;Slider /&gt; &gt; When the onMouseUp event occurs at a different location than the last onChange event &gt; should pass onChangeCommitted the same value that was passed to the last onChange event" time="0.009571375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Slider/useSlider.test.js" timestamp="2025-09-10T11:25:37.534Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.0394435">
        <testcase classname="packages/mui-material/src/Slider/useSlider.test.js" name="useSlider &gt; getRootProps &gt; forwards external props including event handlers" time="0.028061292">
        </testcase>
        <testcase classname="packages/mui-material/src/Slider/useSlider.test.js" name="useSlider &gt; getHiddenInputProps &gt; forwards external props including event handlers" time="0.008942208">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Skeleton/Skeleton.test.js" timestamp="2025-09-10T11:25:37.534Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="5" time="0.100798583">
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.03775425">
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.011104375">
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.008084125">
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002283875">
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007753416">
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005532">
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00257925">
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000638959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000534458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000253875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.0001845">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000165417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004483084">
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; should render" time="0.002753334">
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; should get withChildren class when passed children" time="0.002087917">
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; should get fitContent class when passed children and no width" time="0.007450583">
        </testcase>
        <testcase classname="packages/mui-material/src/Skeleton/Skeleton.test.js" name="&lt;Skeleton /&gt; &gt; should get heightAuto class when passed children and no height" time="0.005553375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Snackbar/Snackbar.test.js" timestamp="2025-09-10T11:25:37.535Z" hostname="Jans-MacBook-Air.local" tests="55" failures="0" errors="0" skipped="6" time="0.287566875">
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.030339375">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.011894958">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.011723667">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00630025">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.005568125">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.006184166">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the content slot&apos;s element with the slotProps.content prop" time="0.004044667">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.content with the built-in ones" time="0.003977042">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition prop" time="0.005059125">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.005352916">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the content slot&apos;s element with the slotProps.content callback" time="0.003704166">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback" time="0.00619375">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.00394">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the content slot&apos;s element with the slotProps.content callback using the ownerState" time="0.003427459">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback using the ownerState" time="0.003418042">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003722667">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.003343458">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; allows overriding the content slot with a component using the slots.content prop" time="0.0032365">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; allows overriding the content slot with an element using the slots.content prop" time="0.002747125">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; allows overriding the transition slot with a component using the slots.transition prop" time="0.002513459">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005715958">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004510542">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000445833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000266125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000216125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004989834">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: onClose &gt; should be call when clicking away" time="0.004938584">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: onClose &gt; should be called when pressing Escape" time="0.006664958">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: onClose &gt; can limit which Snackbars are closed when pressing Escape" time="0.005653583">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; Consecutive messages &gt; should support synchronous onExited callback" time="0.009562417">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: autoHideDuration &gt; should call onClose when the timer is done" time="0.004007958">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: autoHideDuration &gt; calls onClose at timeout even if the prop changes" time="0.0078655">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: autoHideDuration &gt; should not call onClose when the autoHideDuration is reset" time="0.00625725">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: autoHideDuration &gt; should not call onClose if autoHideDuration is undefined" time="0.0037835">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: autoHideDuration &gt; should not call onClose if autoHideDuration is null" time="0.004690833">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: autoHideDuration &gt; should not call onClose when closed" time="0.006485208">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; interacting with mouse &gt; should be able to interrupt the timer" time="0.018938584">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; interacting with mouse &gt; should not call onClose with not timeout after user interaction" time="0.005507625">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; interacting with mouse &gt; should call onClose when timer done after user interaction" time="0.004995916">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; interacting with mouse &gt; should call onClose immediately after user interaction when 0" time="0.005032667">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; interacting with keyboard &gt; should be able to interrupt the timer" time="0.005898375">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; interacting with keyboard &gt; should not call onClose with not timeout after user interaction" time="0.004817666">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; interacting with keyboard &gt; should call onClose when timer done after user interaction" time="0.005087459">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; interacting with keyboard &gt; should call onClose immediately after user interaction when 0" time="0.005050667">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: disableWindowBlurListener &gt; should pause auto hide when not disabled and window lost focus" time="0.004138417">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: disableWindowBlurListener &gt; should not pause auto hide when disabled and window lost focus" time="0.003886583">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: open &gt; should not render anything when closed" time="0.00109075">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: open &gt; should be able show it after mounted" time="0.003347791">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: children &gt; should render the children" time="0.006527584">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: TransitionComponent &gt; should use a Grow by default" time="0.002587083">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: TransitionComponent &gt; accepts a different component that handles the transition" time="0.001685125">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: transitionDuration &gt; should render the default theme values by default" time="0.000285708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: transitionDuration &gt; should render the custom theme values" time="0.000215416">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; prop: transitionDuration &gt; should render the values provided via prop" time="0.000160083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/Snackbar.test.js" name="&lt;Snackbar /&gt; &gt; should skip default clickAway behavior when defaultMuiPrevented is true" time="0.003460167">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Snackbar/useSnackbar.test.tsx" timestamp="2025-09-10T11:25:37.538Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.061531084">
        <testcase classname="packages/mui-material/src/Snackbar/useSnackbar.test.tsx" name="useSnackbar &gt; getRootProps &gt; returns props for the root slot" time="0.014777959">
        </testcase>
        <testcase classname="packages/mui-material/src/Snackbar/useSnackbar.test.tsx" name="useSnackbar &gt; getRootProps &gt; forwards external props including event handlers" time="0.045145333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Slide/Slide.test.js" timestamp="2025-09-10T11:25:37.538Z" hostname="Jans-MacBook-Air.local" tests="33" failures="0" errors="0" skipped="3" time="0.392765834">
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.063417333">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.010122917">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.007632625">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.000598875">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.026635584">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; should not override children styles" time="0.033363417">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transition lifecycle &gt; tests" time="0.042690041">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; prop: timeout &gt; should create proper enter animation onEntering" time="0.005072958">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; prop: timeout &gt; should create proper exit animation" time="0.053001042">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; prop: timeout &gt; should render the default theme values by default" time="0.000984208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; prop: timeout &gt; should render the custom theme values" time="0.000955709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; prop: easing &gt; should create proper enter animation" time="0.009656625">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; prop: easing &gt; should create proper exit animation" time="0.004870042">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; prop: easing &gt; should render the default theme values by default" time="0.003021333">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; prop: easing &gt; should render the custom theme values" time="0.005625834">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; prop: direction &gt; should update the position" time="0.006115625">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; handleEnter() &gt; should set element transform and transition in the `left` direction" time="0.019773125">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; handleEnter() &gt; should set element transform and transition in the `right` direction" time="0.002526209">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; handleEnter() &gt; should set element transform and transition in the `up` direction" time="0.002218">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; handleEnter() &gt; should set element transform and transition in the `down` direction" time="0.004051708">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; handleEnter() &gt; should reset the previous transition if needed" time="0.004488292">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; handleEnter() &gt; should set element transform in the `up` direction when element is offscreen" time="0.009948125">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; handleEnter() &gt; should set element transform in the `left` direction when element is offscreen" time="0.006365167">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; handleExiting() &gt; should set element transform and transition in the `left` direction" time="0.006821542">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; handleExiting() &gt; should set element transform and transition in the `right` direction" time="0.004823625">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; handleExiting() &gt; should set element transform and transition in the `up` direction" time="0.013093584">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; handleExiting() &gt; should set element transform and transition in the `down` direction" time="0.00321075">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; prop: container &gt; should set element transform and transition in the `up` direction" time="0.000812792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; mount &gt; should work when initially hidden" time="0.003644292">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; resize &gt; should recompute the correct position" time="0.012078041">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; resize &gt; should take existing transform into account" time="0.000375333">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; transform styling &gt; resize &gt; should do nothing when visible" time="0.004265917">
        </testcase>
        <testcase classname="packages/mui-material/src/Slide/Slide.test.js" name="&lt;Slide /&gt; &gt; server-side &gt; should be initially hidden" time="0.004177791">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/SpeedDial/SpeedDial.test.js" timestamp="2025-09-10T11:25:37.539Z" hostname="Jans-MacBook-Air.local" tests="77" failures="0" errors="0" skipped="9" time="1.218354875">
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.0517825">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.015392125">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.009666333">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.010874792">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition prop" time="0.006911792">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.005415625">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.005575875">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback" time="0.004742167">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.005467041">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback using the ownerState" time="0.00606625">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.006372791">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; allows overriding the transition slot with a component using the slots.transition prop" time="0.003730583">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.004169334">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.004186291">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006873167">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.0044285">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000417833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000351709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000207541">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000202417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000176666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005540375">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; should render a Fade transition" time="0.008472667">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; should render a Fab" time="0.0548255">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; should render with a null child" time="0.020358167">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; should pass the open prop to its children" time="0.020514916">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; should reset the state of the tooltip when the speed dial is closed while it is open" time="0.062447584">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; prop: onKeyDown &gt; should be called when a key is pressed" time="0.0128095">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; prop: direction &gt; should place actions in the correct position when direction=up" time="0.012584042">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; prop: direction &gt; should place actions in the correct position when direction=down" time="0.027320792">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; prop: direction &gt; should place actions in the correct position when direction=left" time="0.017522667">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; prop: direction &gt; should place actions in the correct position when direction=right" time="0.013986833">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; prop: direction &gt; should place the tooltip in the correct position when direction=up" time="0.031270417">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; prop: direction &gt; should place the tooltip in the correct position when direction=down" time="0.023247209">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; prop: direction &gt; should place the tooltip in the correct position when direction=left" time="0.025694792">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; prop: direction &gt; should place the tooltip in the correct position when direction=right" time="0.023668708">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; keyboard &gt; should open the speed dial and move to the first action without closing" time="0.023048833">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; keyboard &gt; should reset the state of the tooltip when the speed dial is closed while it is open" time="0.000348458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; displays the actions on focus gain" time="0.017271042">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; considers arrow keys with the same initial orientation" time="0.021533208">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir up with keys ArrowUp,ArrowUp,ArrowUp,ArrowDown" time="0.034602208">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir up with keys ArrowDown,ArrowDown,ArrowDown,ArrowUp" time="0.023283625">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir right with keys ArrowRight,ArrowRight,ArrowRight,ArrowLeft" time="0.024676292">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir right with keys ArrowLeft,ArrowLeft,ArrowLeft,ArrowRight" time="0.027825959">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir down with keys ArrowDown,ArrowDown,ArrowDown,ArrowUp" time="0.031257416">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir down with keys ArrowUp,ArrowUp,ArrowUp,ArrowDown" time="0.028743459">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir left with keys ArrowLeft,ArrowLeft,ArrowLeft,ArrowRight" time="0.015430458">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir left with keys ArrowRight,ArrowRight,ArrowRight,ArrowLeft" time="0.012312791">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; ignores array keys orthogonal to the direction &gt; start dir up with keys ArrowUp,ArrowLeft,ArrowRight,ArrowUp" time="0.014885958">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; ignores array keys orthogonal to the direction &gt; start dir right with keys ArrowRight,ArrowUp,ArrowDown,ArrowRight" time="0.015106333">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; ignores array keys orthogonal to the direction &gt; start dir down with keys ArrowDown,ArrowLeft,ArrowRight,ArrowDown" time="0.013838542">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; ignores array keys orthogonal to the direction &gt; start dir left with keys ArrowLeft,ArrowUp,ArrowDown,ArrowLeft" time="0.014179208">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; does not wrap around &gt; start dir up with keys ArrowUp,ArrowDown,ArrowDown,ArrowUp" time="0.017502291">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; does not wrap around &gt; start dir right with keys ArrowRight,ArrowLeft,ArrowLeft,ArrowRight" time="0.015271917">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; does not wrap around &gt; start dir down with keys ArrowDown,ArrowUp,ArrowUp,ArrowDown" time="0.014364167">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus &gt; actions navigation &gt; does not wrap around &gt; start dir left with keys ArrowLeft,ArrowRight,ArrowRight,ArrowLeft" time="0.014284375">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; displays the actions on focus gain" time="0.014792834">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; considers arrow keys with the same initial orientation" time="0.015615375">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir up with keys ArrowUp,ArrowUp,ArrowUp,ArrowDown" time="0.014366042">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir up with keys ArrowDown,ArrowDown,ArrowDown,ArrowUp" time="0.01323425">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir right with keys ArrowRight,ArrowRight,ArrowRight,ArrowLeft" time="0.022659083">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir right with keys ArrowLeft,ArrowLeft,ArrowLeft,ArrowRight" time="0.010708084">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir down with keys ArrowDown,ArrowDown,ArrowDown,ArrowUp" time="0.014038042">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir down with keys ArrowUp,ArrowUp,ArrowUp,ArrowDown" time="0.012461084">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir left with keys ArrowLeft,ArrowLeft,ArrowLeft,ArrowRight" time="0.020822209">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; considers the first arrow key press as forward navigation &gt; start dir left with keys ArrowRight,ArrowRight,ArrowRight,ArrowLeft" time="0.022620917">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; ignores array keys orthogonal to the direction &gt; start dir up with keys ArrowUp,ArrowLeft,ArrowRight,ArrowUp" time="0.016926042">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; ignores array keys orthogonal to the direction &gt; start dir right with keys ArrowRight,ArrowUp,ArrowDown,ArrowRight" time="0.017214875">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; ignores array keys orthogonal to the direction &gt; start dir down with keys ArrowDown,ArrowLeft,ArrowRight,ArrowDown" time="0.022047542">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; ignores array keys orthogonal to the direction &gt; start dir left with keys ArrowLeft,ArrowUp,ArrowDown,ArrowLeft" time="0.029816">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; does not wrap around &gt; start dir up with keys ArrowUp,ArrowDown,ArrowDown,ArrowUp" time="0.023729833">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; does not wrap around &gt; start dir right with keys ArrowRight,ArrowLeft,ArrowLeft,ArrowRight" time="0.01340425">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; does not wrap around &gt; start dir down with keys ArrowDown,ArrowUp,ArrowUp,ArrowDown" time="0.020586166">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; dial focus with slotProps.fab &gt; actions navigation &gt; does not wrap around &gt; start dir left with keys ArrowLeft,ArrowRight,ArrowRight,ArrowLeft" time="0.01625225">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; prop: transitionDuration &gt; should render the default theme values by default" time="0.000298208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; prop: transitionDuration &gt; should render the custom theme values" time="0.000179125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDial/SpeedDial.test.js" name="&lt;SpeedDial /&gt; &gt; prop: transitionDuration &gt; should render the values provided via prop" time="0.000149541">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" timestamp="2025-09-10T11:25:37.543Z" hostname="Jans-MacBook-Air.local" tests="18" failures="0" errors="0" skipped="3" time="0.557457792">
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.046467833">
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.012729709">
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.087316958">
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.0275265">
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.055872209">
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.019827792">
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.00077825">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000472708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000607833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.012749">
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; prop: action &gt; should render the action" time="0.017680042">
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; prop: action &gt; should render an array of elements" time="0.010702333">
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; prop: message &gt; should render the message" time="0.117155125">
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; prop: role &gt; renders the default role" time="0.022493625">
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; prop: role &gt; can override the role" time="0.036688417">
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; CSS vars &gt; should not throw when background.default is a CSS variable" time="0.034718792">
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; prop: square &gt; should disable the rounded class when square is true" time="0.028339083">
        </testcase>
        <testcase classname="packages/mui-material/src/SnackbarContent/SnackbarContent.test.js" name="&lt;SnackbarContent /&gt; &gt; prop: square &gt; should apply the rounded class when square is not passed" time="0.022679875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" timestamp="2025-09-10T11:25:37.544Z" hostname="Jans-MacBook-Air.local" tests="20" failures="0" errors="0" skipped="5" time="0.106476542">
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.03381">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007517958">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0076935">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005183417">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.009376">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002846083">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000537209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000422041">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000511208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000267667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000267125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.006202375">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; should render the Add icon by default" time="0.002382916">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; should render an Icon" time="0.006720708">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; should render an openIcon" time="0.003250208">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; should render the icon with the icon class" time="0.003468375">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; should render the icon with the icon and iconOpen classes" time="0.005357167">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; should render the icon with the icon, iconOpen iconWithOpenIconOpen classes" time="0.002671125">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; should render the openIcon with the openIcon class" time="0.002804333">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialIcon/SpeedDialIcon.test.js" name="&lt;SpeedDialIcon /&gt; &gt; should render the openIcon with the openIcon, openIconOpen classes" time="0.003596459">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" timestamp="2025-09-10T11:25:37.545Z" hostname="Jans-MacBook-Air.local" tests="32" failures="0" errors="0" skipped="5" time="0.415996958">
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.083282541">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.0313545">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.012364834">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00057">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; sets custom properties on the fab slot&apos;s element with the slotProps.fab prop" time="0.010186625">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.fab with the built-in ones" time="0.008087417">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; sets custom properties on the tooltip slot&apos;s element with the slotProps.tooltip prop" time="0.0090775">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; sets custom properties on the fab slot&apos;s element with the slotProps.fab callback" time="0.005989083">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; sets custom properties on the tooltip slot&apos;s element with the slotProps.tooltip callback" time="0.0114355">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; sets custom properties on the fab slot&apos;s element with the slotProps.fab callback using the ownerState" time="0.005836">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; sets custom properties on the tooltip slot&apos;s element with the slotProps.tooltip callback using the ownerState" time="0.006871709">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; allows overriding the fab slot with a component using the slots.fab prop" time="0.006215583">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; allows overriding the tooltip slot with a component using the slots.tooltip prop" time="0.003799125">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.008852375">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.006699958">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000665167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000294959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.001108167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000862125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000656166">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.00742325">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; should be able to change the Tooltip classes" time="0.08793375">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; should be able to change the slotProps.tooltip.classes" time="0.021894583">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; should render a Fab" time="0.007619833">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; should have accessible name if tooltipOpen={true}" time="0.020496541">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; should have accessible name if slotProps.tooltip.open is true" time="0.01112325">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; should have accessible name if tooltipOpen={false}" time="0.013469125">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; should have accessible name if slotProps.tooltip.open is false" time="0.007747584">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; should render the button with the fab class" time="0.004678625">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; should render the button with the fab and fabClosed classes" time="0.008516542">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; should have staticTooltip class if tooltipOpen is true" time="0.003586708">
        </testcase>
        <testcase classname="packages/mui-material/src/SpeedDialAction/SpeedDialAction.test.js" name="&lt;SpeedDialAction /&gt; &gt; should have staticToolTip and staticToolTipLabel classes if tooltipOpen is true and custom slots are provided" time="0.004440333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Step/Step.test.js" timestamp="2025-09-10T11:25:37.547Z" hostname="Jans-MacBook-Air.local" tests="19" failures="0" errors="0" skipped="5" time="0.14125575">
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.016672333">
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.004446667">
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003282292">
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002298625">
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.003709792">
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.003528542">
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001422958">
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000459458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000490584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000233834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000175">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000160333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003427708">
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; merges styles and other props into the root node" time="0.021302334">
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; rendering children &gt; renders children" time="0.007116458">
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; rendering children &gt; should handle null children" time="0.007983375">
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; overriding context props &gt; overrides &quot;active&quot; context value" time="0.026093">
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; overriding context props &gt; overrides &quot;completed&quot; context value" time="0.02523625">
        </testcase>
        <testcase classname="packages/mui-material/src/Step/Step.test.js" name="&lt;Step /&gt; &gt; overriding context props &gt; overrides &quot;disabled&quot; context value" time="0.011621125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Stack/Stack.test.js" timestamp="2025-09-10T11:25:37.548Z" hostname="Jans-MacBook-Air.local" tests="13" failures="0" errors="0" skipped="5" time="0.047404958">
        <testcase classname="packages/mui-material/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.019459083">
        </testcase>
        <testcase classname="packages/mui-material/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.004545833">
        </testcase>
        <testcase classname="packages/mui-material/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003735667">
        </testcase>
        <testcase classname="packages/mui-material/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002215667">
        </testcase>
        <testcase classname="packages/mui-material/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.003737">
        </testcase>
        <testcase classname="packages/mui-material/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004299791">
        </testcase>
        <testcase classname="packages/mui-material/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001799625">
        </testcase>
        <testcase classname="packages/mui-material/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000609334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.001215125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000521541">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000263375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000221542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Stack/Stack.test.js" name="&lt;Stack /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003114625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/StepConnector/StepConnector.test.js" timestamp="2025-09-10T11:25:37.549Z" hostname="Jans-MacBook-Air.local" tests="16" failures="0" errors="0" skipped="3" time="0.084564458">
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.019370292">
        </testcase>
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004723958">
        </testcase>
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0031175">
        </testcase>
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.003432292">
        </testcase>
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005712917">
        </testcase>
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002045084">
        </testcase>
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000466209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000397041">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000486209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003252875">
        </testcase>
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; rendering &gt; renders a div containing a span" time="0.001714625">
        </testcase>
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; rendering &gt; has the class when horizontal" time="0.009577416">
        </testcase>
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; rendering &gt; has the class when vertical" time="0.004136542">
        </testcase>
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; rendering &gt; has the class when active" time="0.010971959">
        </testcase>
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; rendering &gt; has the class when completed" time="0.010862792">
        </testcase>
        <testcase classname="packages/mui-material/src/StepConnector/StepConnector.test.js" name="&lt;StepConnector /&gt; &gt; rendering &gt; has the class when disabled" time="0.002835916">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/StepButton/StepButton.test.js" timestamp="2025-09-10T11:25:37.549Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="3" time="0.205982625">
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; internals &gt; MUI component API &gt; applies the className to the root component" time="0.02386375">
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; internals &gt; MUI component API &gt; spreads props to the root component" time="0.00619675">
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; internals &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.011222208">
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; internals &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007887375">
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; internals &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006189292">
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; internals &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.003282875">
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; internals &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.00035425">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; internals &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000342">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; internals &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000433292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; internals &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.009273958">
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; internals &gt; passes active, completed, disabled to StepLabel" time="0.009672959">
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; internals &gt; should pass props to a provided StepLabel" time="0.006245167">
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; should disable the button" time="0.049700458">
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; should have `aria-current=step` when active" time="0.01877325">
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; should not have `aria-current` when non-active" time="0.020907875">
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; event handlers &gt; should forward mouseenter, mouseleave and touchstart" time="0.024715583">
        </testcase>
        <testcase classname="packages/mui-material/src/StepButton/StepButton.test.js" name="&lt;StepButton /&gt; &gt; can be used as a child of `Step`" time="0.00482725">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/StepIcon/StepIcon.test.js" timestamp="2025-09-10T11:25:37.550Z" hostname="Jans-MacBook-Air.local" tests="16" failures="0" errors="0" skipped="5" time="0.089959542">
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.025076958">
        </testcase>
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005089417">
        </testcase>
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004655042">
        </testcase>
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008583166">
        </testcase>
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006926042">
        </testcase>
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.006754459">
        </testcase>
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.002221333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000585584">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000563625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000278166">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000194125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.012083958">
        </testcase>
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; renders &lt;CheckCircle&gt; when completed" time="0.003255458">
        </testcase>
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; renders &lt;Warning&gt; when error occurred" time="0.0028405">
        </testcase>
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; contains text &quot;3&quot; when position is &quot;3&quot;" time="0.004100042">
        </testcase>
        <testcase classname="packages/mui-material/src/StepIcon/StepIcon.test.js" name="&lt;StepIcon /&gt; &gt; renders the custom icon" time="0.00398625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/StepContent/StepContent.test.js" timestamp="2025-09-10T11:25:37.551Z" hostname="Jans-MacBook-Air.local" tests="18" failures="0" errors="0" skipped="3" time="0.129183666">
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.032640917">
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006249834">
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.007280083">
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008792625">
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition prop" time="0.008222541">
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.transition with the built-in ones" time="0.004134167">
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback" time="0.008961167">
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback using the ownerState" time="0.004867333">
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; MUI component API &gt; allows overriding the transition slot with a component using the slots.transition prop" time="0.004170083">
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006814584">
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004483917">
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000392083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000235292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.001846875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.012521167">
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; renders children inside an Collapse component" time="0.008525375">
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; prop: transitionDuration &gt; should use default Collapse component" time="0.004012334">
        </testcase>
        <testcase classname="packages/mui-material/src/StepContent/StepContent.test.js" name="&lt;StepContent /&gt; &gt; prop: transitionDuration &gt; should use custom TransitionComponent" time="0.002601625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Stepper/Stepper.test.tsx" timestamp="2025-09-10T11:25:37.552Z" hostname="Jans-MacBook-Air.local" tests="26" failures="0" errors="0" skipped="5" time="0.113757583">
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.01737325">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.004750041">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004526792">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002548959">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005857667">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005573833">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001814542">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000500125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000630083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000787417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000211459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000166792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003529541">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; rendering children &gt; renders 3 Step and 2 StepConnector components" time="0.007027584">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; controlling child props &gt; controls children linearly based on the activeStep prop" time="0.008616542">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; controlling child props &gt; controls children non-linearly based on the activeStep prop" time="0.00601825">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; controlling child props &gt; passes index down correctly when rendering children containing arrays" time="0.002007917">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; step connector &gt; should have a default step connector" time="0.002601333">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; step connector &gt; should allow the developer to specify a custom step connector" time="0.001974084">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; step connector &gt; should allow the step connector to be removed" time="0.004917875">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; step connector &gt; should pass active prop to connector when second step is active" time="0.002044042">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; step connector &gt; should pass completed prop to connector when second step is completed" time="0.002021083">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; step connector &gt; should pass correct active and completed props to the StepConnector with nonLinear prop" time="0.010272834">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; renders with a null child" time="0.001586375">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; should hide the last connector" time="0.010319083">
        </testcase>
        <testcase classname="packages/mui-material/src/Stepper/Stepper.test.tsx" name="&lt;Stepper /&gt; &gt; should apply non-linear class" time="0.004312333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/StepLabel/StepLabel.test.js" timestamp="2025-09-10T11:25:37.554Z" hostname="Jans-MacBook-Air.local" tests="40" failures="0" errors="0" skipped="5" time="0.190035542">
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.02091325">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.00491075">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0065">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.010407625">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label prop" time="0.00730725">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.label with the built-in ones" time="0.004139333">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.002318333">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.009820125">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label callback" time="0.003931083">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.005453333">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; sets custom properties on the label slot&apos;s element with the slotProps.label callback using the ownerState" time="0.003544542">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.001754583">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; allows overriding the label slot with a component using the slots.label prop" time="0.001773875">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; allows overriding the label slot with an element using the slots.label prop" time="0.001818792">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.001487959">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001408583">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005218625">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004558959">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000494292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000250667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000208083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000176916">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000155083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.014971875">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; label content &gt; renders the label from children" time="0.004423833">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; label content &gt; renders &lt;StepIcon&gt; with props passed through StepIconProps" time="0.007585375">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; prop: StepIconComponent &gt; should render" time="0.009425417">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; prop: StepIconComponent &gt; should not render" time="0.003473167">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; &lt;Step /&gt; prop: active &gt; renders &lt;Typography&gt; with the className active" time="0.003010709">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; &lt;Step /&gt; prop: active &gt; renders &lt;StepIcon&gt; with the &lt;Step /&gt; prop active set to true" time="0.00616975">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; &lt;Step /&gt; prop: active &gt; renders &lt;Typography&gt; without the className active" time="0.003188791">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; &lt;Step /&gt; prop: completed &gt; renders &lt;Typography&gt; with the className completed" time="0.004758916">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; &lt;Step /&gt; prop: completed &gt; renders &lt;StepIcon&gt; with the prop completed set to true" time="0.005886792">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; prop: error &gt; renders &lt;Typography&gt; with the className error" time="0.003921291">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; prop: error &gt; renders &lt;StepIcon&gt; with the prop error set to true" time="0.0038045">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; &lt;Step /&gt; prop: disabled &gt; renders with disabled className when disabled" time="0.0022035">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; prop: optional = Optional Text &gt; creates a &lt;Typography&gt; component with text &quot;Optional Text&quot;" time="0.0054035">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; componentsProps: label &gt; spreads the props on the label element" time="0.00287975">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; renders &lt;StepIcon&gt; with the className completed &gt; renders with completed className when completed" time="0.004415125">
        </testcase>
        <testcase classname="packages/mui-material/src/StepLabel/StepLabel.test.js" name="&lt;StepLabel /&gt; &gt; renders &lt;StepIcon&gt; with the className active &gt; renders with active className when active" time="0.003285583">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" timestamp="2025-09-10T11:25:37.556Z" hostname="Jans-MacBook-Air.local" tests="53" failures="0" errors="0" skipped="10" time="0.585416375">
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; MUI component API &gt; prop components: &gt; can render another root component with the `components` prop" time="0.060091916">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.011006292">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.014548292">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.013671042">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.000401875">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.014029583">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; should render a Drawer and a SwipeArea" time="0.010526209">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; should hide the SwipeArea if swipe to open is disabled" time="0.005262333">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; should accept user custom style" time="0.009816667">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=left &gt; should open and close when swiping" time="0.050260875">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=left &gt; should open at correct position when swiping" time="0.000566167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=left &gt; should stay closed when not swiping far enough" time="0.015272375">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=left &gt; should stay opened when not swiping far enough" time="0.009937791">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=left &gt; should slide in a bit when touching near the edge" time="0.017100959">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=left &gt; should let user scroll the page" time="0.01071525">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=right &gt; should open and close when swiping" time="0.026713541">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=right &gt; should open at correct position when swiping" time="0.000303416">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=right &gt; should stay closed when not swiping far enough" time="0.014158584">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=right &gt; should stay opened when not swiping far enough" time="0.009451792">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=right &gt; should slide in a bit when touching near the edge" time="0.013081125">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=right &gt; should let user scroll the page" time="0.01102575">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=top &gt; should open and close when swiping" time="0.027801375">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=top &gt; should open at correct position when swiping" time="0.000257667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=top &gt; should stay closed when not swiping far enough" time="0.017359375">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=top &gt; should stay opened when not swiping far enough" time="0.009142375">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=top &gt; should slide in a bit when touching near the edge" time="0.014011834">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=top &gt; should let user scroll the page" time="0.00580825">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=bottom &gt; should open and close when swiping" time="0.022325667">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=bottom &gt; should open at correct position when swiping" time="0.000282209">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=bottom &gt; should stay closed when not swiping far enough" time="0.012872042">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=bottom &gt; should stay opened when not swiping far enough" time="0.008941166">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=bottom &gt; should slide in a bit when touching near the edge" time="0.017072916">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; anchor=bottom &gt; should let user scroll the page" time="0.005013333">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; should abort when the SwipeableDrawer is closed" time="0.012667">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; removes event listeners on unmount" time="0.004499708">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; toggles swipe handling when the variant is changed" time="0.012672083">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; prop: allowSwipeInChildren &gt; should allow swiping on children to open" time="0.01668075">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; swipe to open &gt; prop: allowSwipeInChildren &gt; should not allow swiping on children to open that are excluded via a function" time="0.014471416">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; should be able to attach paper ref passed through PaperProps" time="0.005678166">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; disableSwipeToOpen &gt; should not support swipe to open if disableSwipeToOpen is set" time="0.004479333">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; disableSwipeToOpen &gt; should support swipe to close if disableSwipeToOpen is set" time="0.007830667">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; lock &gt; should handle a single swipe at the time" time="0.014942125">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; does not crash when updating the parent component while swiping" time="0.020066">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; no backdrop &gt; should hide backdrop" time="0.004033916">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; no backdrop &gt; does not crash when backdrop is hidden while swiping" time="0.003813459">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; warnings &gt; warns if a component for the Paper is used that cant hold a ref" time="0.000785416">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; warnings &gt; warns if a component for the Backdrop is used that cant hold a ref" time="0.000243875">
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; native scroll &gt; should not drag is native scroll is available" time="0.00022025">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; should not prevent scrolling a container" time="0.000178833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; should not ignore scroll container if parent is overflow hidden" time="0.00016825">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; prop: transitionDuration &gt; should render the default theme values by default" time="0.000154375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; prop: transitionDuration &gt; should render the custom theme values" time="0.000152167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SwipeableDrawer/SwipeableDrawer.test.js" name="&lt;SwipeableDrawer /&gt; &gt; prop: transitionDuration &gt; should render the values provided via prop" time="0.000151042">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/SvgIcon/SvgIcon.test.js" timestamp="2025-09-10T11:25:37.558Z" hostname="Jans-MacBook-Air.local" tests="26" failures="0" errors="0" skipped="4" time="0.206454">
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.054509167">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.013062042">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003498833">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002333833">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008139625">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004821208">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002501417">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.001030875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000545916">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000978125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005298625">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; renders children by default" time="0.005116">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; renders children of provided svg and merge the props" time="0.001933583">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; prop: titleAccess &gt; should be able to make an icon accessible" time="0.008409708">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; prop: color &gt; should render with the user and SvgIcon classes" time="0.002042667">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; prop: color &gt; should render with the secondary color" time="0.00626975">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; prop: color &gt; should render with the action color" time="0.005102667">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; prop: color &gt; should render with the error color" time="0.006256584">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; prop: color &gt; should render with the primary class" time="0.0027395">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; prop: fontSize &gt; should be able to change the fontSize" time="0.002237542">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; prop: inheritViewBox &gt; should render with the default viewBox if neither inheritViewBox nor viewBox are provided" time="0.008570792">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; prop: inheritViewBox &gt; should render with given viewBox if inheritViewBox is not provided" time="0.002740709">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; prop: inheritViewBox &gt; should use the custom component&apos;s viewBox if true" time="0.001551041">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; should not override internal ownerState with the ownerState passed to the icon" time="0.0002335">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; should have `fill=&quot;currentColor&quot;`" time="0.044272459">
        </testcase>
        <testcase classname="packages/mui-material/src/SvgIcon/SvgIcon.test.js" name="&lt;SvgIcon /&gt; &gt; should not add `fill` if svg is a direct child" time="0.008772625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Tab/Tab.test.js" timestamp="2025-09-10T11:25:37.560Z" hostname="Jans-MacBook-Air.local" tests="30" failures="0" errors="0" skipped="9" time="0.460450375">
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.021946875">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007135084">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004192834">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004960584">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.015093875">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.003118959">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000430042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000389333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000438166">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000213042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000169708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005099667">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; should have a ripple" time="0.012466709">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; can disable the ripple" time="0.038479209">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; should have a focusRipple" time="0.00054175">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; can disable the focusRipple" time="0.10245025">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; prop: selected &gt; should render with the selected and root classes" time="0.142108">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; prop: disabled &gt; should render with the disabled and root classes" time="0.008959125">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; prop: onClick &gt; should be called when a click is triggered" time="0.015213791">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; prop: label &gt; should render label" time="0.0139445">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; prop: wrapped &gt; should add the wrapped class" time="0.009378708">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; prop: icon &gt; should render icon element" time="0.00566475">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; prop: icon &gt; should add a classname when passed together with label" time="0.015313791">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; prop: icon &gt; should have bottom margin when passed together with label" time="0.010317167">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; prop: textColor &gt; should support the inherit value" time="0.006357125">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; prop: fullWidth &gt; should have the fullWidth class" time="0.006623417">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; prop: style &gt; should be able to override everything" time="0.00556125">
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; should apply iconWrapper styles from theme" time="0.000794709">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; should apply icon styles from theme" time="0.000218334">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tab/Tab.test.js" name="&lt;Tab /&gt; &gt; icon styles should override iconWrapper styles from theme" time="0.000436583">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Switch/Switch.test.js" timestamp="2025-09-10T11:25:37.561Z" hostname="Jans-MacBook-Air.local" tests="53" failures="0" errors="0" skipped="3" time="0.490832959">
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.037415041">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.016195375">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.011795458">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.005039917">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.006474916">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the track slot&apos;s element with the slotProps.track prop" time="0.007018583">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.track with the built-in ones" time="0.005767333">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the thumb slot&apos;s element with the slotProps.thumb prop" time="0.004562">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.thumb with the built-in ones" time="0.007169">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the switchBase slot&apos;s element with the slotProps.switchBase prop" time="0.004371375">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.switchBase with the built-in ones" time="0.0056195">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.004257875">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.input with the built-in ones" time="0.011274583">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004749958">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the track slot&apos;s element with the slotProps.track callback" time="0.016630041">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the thumb slot&apos;s element with the slotProps.thumb callback" time="0.003763334">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the switchBase slot&apos;s element with the slotProps.switchBase callback" time="0.004350208">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback" time="0.003855167">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.005962583">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the track slot&apos;s element with the slotProps.track callback using the ownerState" time="0.003712875">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the thumb slot&apos;s element with the slotProps.thumb callback using the ownerState" time="0.003719291">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the switchBase slot&apos;s element with the slotProps.switchBase callback using the ownerState" time="0.003781375">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback using the ownerState" time="0.003484542">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.005219417">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.003970875">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the track slot with a component using the slots.track prop" time="0.005345042">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the track slot with an element using the slots.track prop" time="0.003449083">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the thumb slot with a component using the slots.thumb prop" time="0.003571667">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the thumb slot with an element using the slots.thumb prop" time="0.003636333">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the switchBase slot with a component using the slots.switchBase prop" time="0.002197583">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the switchBase slot with an element using the slots.switchBase prop" time="0.002542625">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.005745041">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; allows overriding the input slot with an element using the slots.input prop" time="0.006517125">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000366375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.00021225">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000156375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.007629084">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; styleSheet &gt; should have the classes required for SwitchBase" time="0.000899791">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; should render an .thumb element inside the .switchBase element" time="0.009053666">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; should render the track as the 2nd child" time="0.004281459">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; renders a `role=&quot;switch&quot;` with the Unchecked state by default" time="0.128258208">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; renders a switch with the Checked state when checked" time="0.017273958">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; the switch can be disabled" time="0.0070665">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; the switch can be readonly" time="0.009501583">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; renders a custom icon when provided" time="0.004411875">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; renders a custom checked icon when provided" time="0.005336708">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; the Checked state changes after change events" time="0.020741125">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; should not show warnings when custom `type` is provided" time="0.006346875">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; with FormControl &gt; enabled &gt; should not have the disabled class" time="0.011437">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; with FormControl &gt; enabled &gt; should be overridden by props" time="0.005859458">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; with FormControl &gt; disabled &gt; should have the disabled class" time="0.006810417">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; with FormControl &gt; disabled &gt; should be overridden by props" time="0.007892375">
        </testcase>
        <testcase classname="packages/mui-material/src/Switch/Switch.test.js" name="&lt;Switch /&gt; &gt; mergeClassName &gt; should merge the className" time="0.010770333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Table/Table.test.js" timestamp="2025-09-10T11:25:37.564Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="5" time="0.063419459">
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.019887333">
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005739375">
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.0036335">
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003742584">
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004491416">
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.003949042">
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002266542">
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000612833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000567291">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000288375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000198958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000173459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003170958">
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; prop: component &gt; can render a different component" time="0.003427625">
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; prop: component &gt; sets role=&quot;table&quot;" time="0.00544825">
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; should render children" time="0.001791875">
        </testcase>
        <testcase classname="packages/mui-material/src/Table/Table.test.js" name="&lt;Table /&gt; &gt; should define table in the child context" time="0.002429167">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" timestamp="2025-09-10T11:25:37.565Z" hostname="Jans-MacBook-Air.local" tests="18" failures="0" errors="0" skipped="5" time="0.114689209">
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.034852375">
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005427541">
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00700725">
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005174375">
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.007148666">
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.0044455">
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000497083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000531">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000519625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000232083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000170208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.0054985">
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; should render as a button with the root class" time="0.006910833">
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; prop: disabled &gt; should render with a opacity of 0" time="0.007659875">
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; prop: direction &gt; should render with the left icon" time="0.004673084">
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; prop: direction &gt; should render with the right icon" time="0.007435458">
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; should render with the custom start icon" time="0.00448025">
        </testcase>
        <testcase classname="packages/mui-material/src/TabScrollButton/TabScrollButton.test.js" name="&lt;TabScrollButton /&gt; &gt; should render with the custom end icon" time="0.010200042">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/GridLegacy/GridLegacy.test.js" timestamp="2025-09-10T11:25:37.566Z" hostname="Jans-MacBook-Air.local" tests="66" failures="0" errors="0" skipped="8" time="0.187012">
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.022291791">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.004092625">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003120458">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002132">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00383575">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.003319542">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001488916">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000444167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000461875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000232375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000170792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000160542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.002675625">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: container &gt; should apply the container class" time="0.002539042">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: container &gt; should apply the correct number of columns for nested containers" time="0.028506916">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: container &gt; should apply the correct number of columns for nested containers with undefined prop columns" time="0.005756833">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: container &gt; should apply the correct number of columns for nested containers with columns=12 (default)" time="0.004535083">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: item &gt; should apply the item class" time="0.0013065">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: xs &gt; should apply the flex-grow class" time="0.0016435">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: xs &gt; should apply the flex size class" time="0.001109708">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: xs &gt; should apply the flex auto class" time="0.0014625">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: xs &gt; should apply the styles necessary for variable width nested item when set to auto" time="0.000183792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: direction &gt; should have a direction" time="0.002021">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: direction &gt; should support responsive values" time="0.000800584">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: direction &gt; should generate correct responsive styles regardless of breakpoints order" time="0.000510666">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: direction &gt; should support custom breakpoints" time="0.000460458">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: direction &gt; should generate correct responsive styles regardless of custom breakpoints order" time="0.0004045">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: spacing &gt; should have a spacing" time="0.008761208">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: spacing &gt; should support decimal values" time="0.005013209">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: spacing &gt; should not support undefined values" time="0.00329575">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: spacing &gt; should not support zero values" time="0.005629541">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: spacing &gt; should support object values" time="0.012977583">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: spacing &gt; should ignore object values of zero" time="0.003310333">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: spacing &gt; should support custom breakpoints" time="0.003398834">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: spacing &gt; should ignore custom breakpoints with values of zero" time="0.003107125">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: spacing &gt; shouldn&apos;t support custom breakpoints without its spacing values" time="0.002853333">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: spacing &gt; should ignore custom breakpoints that doesn&apos;t exist in the theme" time="0.002801209">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: spacing &gt; should ignore custom breakpoints with negative values" time="0.002972875">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: spacing &gt; should ignore grid item with spacing object" time="0.004003042">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: spacing &gt; should warn of failed prop types when providing spacing object without the `container` prop" time="0.000621667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: spacing &gt; should not throw error for setting zero spacing in theme" time="0.007069458">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: rowSpacing, columnSpacing &gt; should generate correct responsive styles" time="0.000754375">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: rowSpacing, columnSpacing &gt; should support custom breakpoints and generate correct responsive styles" time="0.000407292">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: rowSpacing, columnSpacing &gt; shouldn&apos;t support custom breakpoints with values of zeros and shouldn&apos;t generate responsive styles" time="0.000404333">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: rowSpacing, columnSpacing &gt; shouldn&apos;t support custom breakpoints without its spacing values and shouldn&apos;t generate responsive styles" time="0.000345042">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: rowSpacing, columnSpacing &gt; should ignore custom breakpoints that doesn&apos;t exist in the theme and shouldn&apos;t generate responsive styles" time="0.000331">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: rowSpacing, columnSpacing &gt; should generate correct responsive styles regardless of breakpoints order " time="0.000347292">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: rowSpacing, columnSpacing &gt; should generate correct responsive styles regardless of custom breakpoints order " time="0.001266583">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: rowSpacing, columnSpacing &gt; should generate correct responsive styles for overriding with zero value styles for higher breakpoints" time="0.001454042">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: rowSpacing, columnSpacing &gt; should not generate responsive styles for lower breakpoints below a given non-zero breakpoint" time="0.000588667">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: rowSpacing, columnSpacing &gt; should support css variables mode" time="0.004375791">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: columns &gt; should generate responsive grid when grid item misses breakpoints of its container" time="0.000517708">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: columns &gt; should generate responsive grid when grid item misses breakpoints of its container and breakpoint starts from the middle" time="0.000371209">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: columns &gt; should generate responsive grid when grid item has a custom breakpoints" time="0.00035875">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: columns &gt; should generate responsive grid when grid item has a custom breakpoints with values of auto" time="0.000341833">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: columns &gt; should generate responsive grid when grid item has a custom breakpoints with values of true" time="0.000338375">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: columns &gt; shouldn&apos;t generate responsive grid when grid item has a custom breakpoints with values of false" time="0.000313125">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: columns &gt; shouldn&apos;t generate responsive grid when grid item has a breakpoints don&apos;t exist in the theme" time="0.00038325">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: columns &gt; should generate responsive grid when grid item has a custom breakpoints and grid container columns are responsive " time="0.000305417">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: columns &gt; should generate responsive grid when grid item misses custom breakpoints of its container" time="0.000325125">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: columns &gt; should generate responsive grid when grid item misses custom breakpoints of its container and custom breakpoint starts from the middle" time="0.000285459">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; spacing &gt; should generate the right values" time="0.000214625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; combines system properties with the sx prop" time="0.004165125">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: wrap &gt; should wrap by default" time="0.001782459">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: wrap &gt; should apply nowrap class and style" time="0.0018255">
        </testcase>
        <testcase classname="packages/mui-material/src/GridLegacy/GridLegacy.test.js" name="Material UI &lt;GridLegacy /&gt; &gt; prop: wrap &gt; should apply wrap-reverse class and style" time="0.001810458">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/TableCell/TableCell.test.js" timestamp="2025-09-10T11:25:37.569Z" hostname="Jans-MacBook-Air.local" tests="23" failures="0" errors="0" skipped="5" time="0.086196333">
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.019866125">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.00606375">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003621625">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.0028445">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.0048705">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.00476275">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002357">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.00052425">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000505167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000395583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000221834">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000304458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004708958">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; prop: padding &gt; doesn&apos;t not have a class for padding by default" time="0.00389225">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; prop: padding &gt; has a class when `none`" time="0.00187575">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; prop: padding &gt; has a class when `checkbox`" time="0.004197">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; has a class when `size=&quot;small&quot;`" time="0.003386125">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; should render children" time="0.001920125">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; should render aria-sort=&quot;ascending&quot; when prop sortDirection=&quot;asc&quot; provided" time="0.002609">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; should render aria-sort=&quot;descending&quot; when prop sortDirection=&quot;desc&quot; provided" time="0.002425333">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; should center content" time="0.003703917">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; should allow the default role (rowheader) to trigger" time="0.002768584">
        </testcase>
        <testcase classname="packages/mui-material/src/TableCell/TableCell.test.js" name="&lt;TableCell /&gt; &gt; should not set scope attribute when TableCell is rendered as &lt;td&gt; within table head" time="0.006412584">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/TableBody/TableBody.test.js" timestamp="2025-09-10T11:25:37.570Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="5" time="0.067052834">
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.020590708">
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005055833">
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003765583">
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002400167">
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.004767042">
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004947417">
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.003528708">
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.001763666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.002195208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000614959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.0002465">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000225917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003732583">
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; should render children" time="0.003050208">
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; should define table.body in the child context" time="0.001948958">
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; prop: component &gt; can render a different component" time="0.003473041">
        </testcase>
        <testcase classname="packages/mui-material/src/TableBody/TableBody.test.js" name="&lt;TableBody /&gt; &gt; prop: component &gt; sets role=&quot;rowgroup&quot;" time="0.002292542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/TableFooter/TableFooter.test.js" timestamp="2025-09-10T11:25:37.571Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="5" time="0.067357667">
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.024786125">
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.007009166">
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007742833">
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002980541">
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005008375">
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004101042">
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001764875">
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000525083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000536333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000257208">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000191666">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000173458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.00322025">
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; should render children" time="0.002621041">
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; should define table.footer in the child context" time="0.001510917">
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; prop: component &gt; can render a different component" time="0.001478292">
        </testcase>
        <testcase classname="packages/mui-material/src/TableFooter/TableFooter.test.js" name="&lt;TableFooter /&gt; &gt; prop: component &gt; sets role=&quot;rowgroup&quot;" time="0.001322375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/TableHead/TableHead.test.js" timestamp="2025-09-10T11:25:37.572Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="5" time="0.058064167">
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.018681708">
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005679959">
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.0034565">
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003154167">
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008551459">
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.0043745">
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001594833">
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000457875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000531125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000247125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000185542">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.00016575">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.002714583">
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; should render children" time="0.002465291">
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; should define table.head in the child context" time="0.001400792">
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; prop: component &gt; can render a different component" time="0.00134">
        </testcase>
        <testcase classname="packages/mui-material/src/TableHead/TableHead.test.js" name="&lt;TableHead /&gt; &gt; prop: component &gt; sets role=&quot;rowgroup&quot;" time="0.001113542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/TablePaginationActions/TablePaginationActions.test.js" timestamp="2025-09-10T11:25:37.574Z" hostname="Jans-MacBook-Air.local" tests="10" failures="0" errors="0" skipped="3" time="0.122495042">
        <testcase classname="packages/mui-material/src/TablePaginationActions/TablePaginationActions.test.js" name="&lt;TablePaginationActions /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.053718875">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePaginationActions/TablePaginationActions.test.js" name="&lt;TablePaginationActions /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.012506708">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePaginationActions/TablePaginationActions.test.js" name="&lt;TablePaginationActions /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.007922625">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePaginationActions/TablePaginationActions.test.js" name="&lt;TablePaginationActions /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.008135916">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePaginationActions/TablePaginationActions.test.js" name="&lt;TablePaginationActions /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.014358167">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePaginationActions/TablePaginationActions.test.js" name="&lt;TablePaginationActions /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00821375">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePaginationActions/TablePaginationActions.test.js" name="&lt;TablePaginationActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000663333">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TablePaginationActions/TablePaginationActions.test.js" name="&lt;TablePaginationActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000903708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TablePaginationActions/TablePaginationActions.test.js" name="&lt;TablePaginationActions /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.00107775">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TablePaginationActions/TablePaginationActions.test.js" name="&lt;TablePaginationActions /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.013335916">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/TableContainer/TableContainer.test.js" timestamp="2025-09-10T11:25:37.574Z" hostname="Jans-MacBook-Air.local" tests="13" failures="0" errors="0" skipped="5" time="0.049632458">
        <testcase classname="packages/mui-material/src/TableContainer/TableContainer.test.js" name="&lt;TableContainer /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.020763334">
        </testcase>
        <testcase classname="packages/mui-material/src/TableContainer/TableContainer.test.js" name="&lt;TableContainer /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006461042">
        </testcase>
        <testcase classname="packages/mui-material/src/TableContainer/TableContainer.test.js" name="&lt;TableContainer /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003983458">
        </testcase>
        <testcase classname="packages/mui-material/src/TableContainer/TableContainer.test.js" name="&lt;TableContainer /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002307958">
        </testcase>
        <testcase classname="packages/mui-material/src/TableContainer/TableContainer.test.js" name="&lt;TableContainer /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.0036765">
        </testcase>
        <testcase classname="packages/mui-material/src/TableContainer/TableContainer.test.js" name="&lt;TableContainer /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004460875">
        </testcase>
        <testcase classname="packages/mui-material/src/TableContainer/TableContainer.test.js" name="&lt;TableContainer /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.001820625">
        </testcase>
        <testcase classname="packages/mui-material/src/TableContainer/TableContainer.test.js" name="&lt;TableContainer /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.00052425">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableContainer/TableContainer.test.js" name="&lt;TableContainer /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.00054775">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableContainer/TableContainer.test.js" name="&lt;TableContainer /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000255292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableContainer/TableContainer.test.js" name="&lt;TableContainer /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000199833">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableContainer/TableContainer.test.js" name="&lt;TableContainer /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000177875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableContainer/TableContainer.test.js" name="&lt;TableContainer /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.002985708">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" timestamp="2025-09-10T11:25:37.575Z" hostname="Jans-MacBook-Air.local" tests="27" failures="0" errors="0" skipped="5" time="0.174883542">
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.036708458">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.007449209">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004914709">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.011666791">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; sets custom properties on the icon slot&apos;s element with the slotProps.icon prop" time="0.007610458">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.icon with the built-in ones" time="0.009214167">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; sets custom properties on the icon slot&apos;s element with the slotProps.icon callback" time="0.00370725">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; sets custom properties on the icon slot&apos;s element with the slotProps.icon callback using the ownerState" time="0.004253417">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; allows overriding the icon slot with a component using the slots.icon prop" time="0.01743375">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; allows overriding the icon slot with an element using the slots.icon prop" time="0.006801958">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006352208">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.005150209">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.001139875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000618083">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000534084">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000763458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000591">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.006535">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; should set the active class when active" time="0.003696917">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; should not set the active class when not active" time="0.010911542">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; has an icon &gt; should have one child with the icon class" time="0.006882792">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; has an icon &gt; when given direction desc should have desc direction class" time="0.003601375">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; has an icon &gt; when given direction asc should have asc direction class" time="0.002937375">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; has an icon &gt; should accept a custom icon for the sort icon" time="0.002571042">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; prop: hideSortIcon &gt; can hide icon when not active" time="0.002046375">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; prop: hideSortIcon &gt; does not hide icon by default when not active" time="0.005378792">
        </testcase>
        <testcase classname="packages/mui-material/src/TableSortLabel/TableSortLabel.test.js" name="&lt;TableSortLabel /&gt; &gt; prop: hideSortIcon &gt; does not hide icon when active" time="0.00296875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/TableRow/TableRow.test.js" timestamp="2025-09-10T11:25:37.577Z" hostname="Jans-MacBook-Air.local" tests="16" failures="0" errors="0" skipped="5" time="0.090728583">
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.027823667">
        </testcase>
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.007924625">
        </testcase>
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006577667">
        </testcase>
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003285459">
        </testcase>
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.009638458">
        </testcase>
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006308042">
        </testcase>
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.003328458">
        </testcase>
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000633167">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.00055875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000263792">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.0002695">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000249667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.008810042">
        </testcase>
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; should render children" time="0.003961041">
        </testcase>
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; prop: component &gt; can render a different component" time="0.004018167">
        </testcase>
        <testcase classname="packages/mui-material/src/TableRow/TableRow.test.js" name="&lt;TableRow /&gt; &gt; prop: component &gt; sets role=&quot;rowgroup&quot;" time="0.003093958">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/TablePagination/TablePagination.test.js" timestamp="2025-09-10T11:25:37.577Z" hostname="Jans-MacBook-Air.local" tests="72" failures="0" errors="0" skipped="3" time="1.354347333">
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.097758833">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; prop components: &gt; can render another root component with the `components` prop" time="0.085475167">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.034893834">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.039972959">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.027149542">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.046417291">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.029684541">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.024945083">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; sets custom properties on the toolbar slot&apos;s element with the slotProps.toolbar prop" time="0.021612875">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.toolbar with the built-in ones" time="0.021044083">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; sets custom properties on the spacer slot&apos;s element with the slotProps.spacer prop" time="0.018048416">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.spacer with the built-in ones" time="0.019095833">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; sets custom properties on the selectLabel slot&apos;s element with the slotProps.selectLabel prop" time="0.017046625">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.selectLabel with the built-in ones" time="0.015881875">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; sets custom properties on the displayedRows slot&apos;s element with the slotProps.displayedRows prop" time="0.011363167">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.displayedRows with the built-in ones" time="0.012311125">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.009896959">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; sets custom properties on the toolbar slot&apos;s element with the slotProps.toolbar callback" time="0.014237583">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; sets custom properties on the spacer slot&apos;s element with the slotProps.spacer callback" time="0.017909">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; sets custom properties on the selectLabel slot&apos;s element with the slotProps.selectLabel callback" time="0.012005417">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; sets custom properties on the displayedRows slot&apos;s element with the slotProps.displayedRows callback" time="0.034835208">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.010533042">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; sets custom properties on the toolbar slot&apos;s element with the slotProps.toolbar callback using the ownerState" time="0.011032792">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; sets custom properties on the spacer slot&apos;s element with the slotProps.spacer callback using the ownerState" time="0.0116635">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; sets custom properties on the selectLabel slot&apos;s element with the slotProps.selectLabel callback using the ownerState" time="0.016195791">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; sets custom properties on the displayedRows slot&apos;s element with the slotProps.displayedRows callback using the ownerState" time="0.011011666">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.014189458">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.016949542">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; allows overriding the toolbar slot with a component using the slots.toolbar prop" time="0.013804916">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; allows overriding the toolbar slot with an element using the slots.toolbar prop" time="0.009842833">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; allows overriding the spacer slot with a component using the slots.spacer prop" time="0.02028175">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; allows overriding the spacer slot with an element using the slots.spacer prop" time="0.015647667">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; allows overriding the selectLabel slot with a component using the slots.selectLabel prop" time="0.010439541">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; allows overriding the selectLabel slot with an element using the slots.selectLabel prop" time="0.015250583">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; allows overriding the displayedRows slot with a component using the slots.displayedRows prop" time="0.008962417">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; allows overriding the displayedRows slot with an element using the slots.displayedRows prop" time="0.006795792">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.021813292">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.011223417">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000414042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000207042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000149375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.008028542">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: labelDisplayedRows &gt; should use the labelDisplayedRows callback" time="0.017488">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: labelRowsPerPage &gt; labels the select for the current page" time="0.057181833">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: labelRowsPerPage &gt; accepts React nodes" time="0.017005542">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: page &gt; should disable the back button on the first page" time="0.018038542">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: page &gt; should disable the next button on the last page" time="0.015986042">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: onPageChange &gt; should handle next button clicks properly" time="0.013865958">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: onPageChange &gt; should handle back button clicks properly" time="0.01185075">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; label &gt; should display 0 as start number if the table is empty " time="0.008481459">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; label &gt; should hide the rows per page selector if there are less than two options" time="0.003683458">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: count=-1 &gt; should display the &quot;of more than&quot; text and keep the nextButton enabled" time="0.012471667">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: showFirstButton &gt; should change the page" time="0.014564083">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: showLastButton &gt; should change the page" time="0.012492916">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: backIconButtonProps &gt; should apply props to the back button" time="0.016201958">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: nextIconButtonProps &gt; should apply props to the next button" time="0.015845792">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: disabled &gt; should disable the first, last, next, and back buttons" time="0.032033833">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: disabled &gt; should disable TablePaginationSelect" time="0.017661292">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; warnings &gt; should raise a warning if the page prop is out of range" time="0.001184333">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: SelectProps &gt; does allow manual label ids" time="0.017346375">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: SelectProps &gt; should be able to apply the standard variant to select" time="0.021313875">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: SelectProps &gt; should be able to apply the outlined variant to select" time="0.020266458">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: SelectProps &gt; should be able to apply the filled variant to select" time="0.035957417">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: rowsPerPage &gt; should display max number of rows text when prop is -1" time="0.011547958">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: slotProps &gt; actions &gt; previousButton &gt; should override backIconButtonProps" time="0.012153125">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: slotProps &gt; actions &gt; nextButton &gt; should override nextIconButtonProps" time="0.015291708">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: slotProps &gt; actions &gt; should pass props to button icons" time="0.011740959">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: slotProps &gt; select &gt; should override SelectProps" time="0.016698042">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: slots &gt; should render custom action buttons" time="0.020454375">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; prop: slots &gt; should render custom action button icons" time="0.013573125">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; duplicated keys &gt; should not raise a warning due to duplicated keys" time="0.009600583">
        </testcase>
        <testcase classname="packages/mui-material/src/TablePagination/TablePagination.test.js" name="&lt;TablePagination /&gt; &gt; should not have &quot;variant&quot; attribute on TablePaginationSelect" time="0.013212917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" timestamp="2025-09-10T11:25:37.581Z" hostname="Jans-MacBook-Air.local" tests="15" failures="0" errors="0" skipped="3" time="0.479083208">
        <testcase classname="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" name="&lt;TextareaAutosize /&gt; &gt; should not crash when unmounting with Suspense" time="0.397507084">
        </testcase>
        <testcase classname="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" name="&lt;TextareaAutosize /&gt; &gt; should update height without an infinite rendering loop" time="0.019344583">
        </testcase>
        <testcase classname="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" name="&lt;TextareaAutosize /&gt; &gt; should update height without delay" time="0.001652375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" name="&lt;TextareaAutosize /&gt; &gt; layout &gt; resize &gt; should handle the resize event" time="0.004160958">
        </testcase>
        <testcase classname="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" name="&lt;TextareaAutosize /&gt; &gt; layout &gt; should update when uncontrolled" time="0.004554125">
        </testcase>
        <testcase classname="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" name="&lt;TextareaAutosize /&gt; &gt; layout &gt; should take the border into account with border-box" time="0.006195209">
        </testcase>
        <testcase classname="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" name="&lt;TextareaAutosize /&gt; &gt; layout &gt; should take the padding into account with content-box" time="0.003764208">
        </testcase>
        <testcase classname="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" name="&lt;TextareaAutosize /&gt; &gt; layout &gt; should have at least height of &quot;minRows&quot;" time="0.004535709">
        </testcase>
        <testcase classname="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" name="&lt;TextareaAutosize /&gt; &gt; layout &gt; should have at max &quot;maxRows&quot; rows" time="0.007901084">
        </testcase>
        <testcase classname="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" name="&lt;TextareaAutosize /&gt; &gt; layout &gt; should show scrollbar when having more rows than &quot;maxRows&quot;" time="0.006369542">
        </testcase>
        <testcase classname="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" name="&lt;TextareaAutosize /&gt; &gt; layout &gt; should update its height when the &quot;maxRows&quot; prop changes" time="0.005799917">
        </testcase>
        <testcase classname="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" name="&lt;TextareaAutosize /&gt; &gt; layout &gt; should not sync height if container width is 0px" time="0.008828125">
        </testcase>
        <testcase classname="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" name="&lt;TextareaAutosize /&gt; &gt; layout &gt; should compute the correct height if padding-right is greater than 0px" time="0.00493">
        </testcase>
        <testcase classname="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" name="&lt;TextareaAutosize /&gt; &gt; should apply the inline styles using the &quot;style&quot; prop" time="0.0006025">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TextareaAutosize/TextareaAutosize.test.tsx" name="&lt;TextareaAutosize /&gt; &gt; should not infinite loop document selectionchange" time="0.000214833">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Tabs/ScrollbarSize.test.js" timestamp="2025-09-10T11:25:37.582Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.029943">
        <testcase classname="packages/mui-material/src/Tabs/ScrollbarSize.test.js" name="&lt;ScrollbarSize /&gt; &gt; mount &gt; should call on initial load" time="0.019662792">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/ScrollbarSize.test.js" name="&lt;ScrollbarSize /&gt; &gt; prop: onChange &gt; should call on first resize event" time="0.005911084">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/ScrollbarSize.test.js" name="&lt;ScrollbarSize /&gt; &gt; prop: onChange &gt; should not call if height has not changed from previous resize" time="0.00314975">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Tabs/Tabs.test.js" timestamp="2025-09-10T11:25:37.582Z" hostname="Jans-MacBook-Air.local" tests="122" failures="0" errors="0" skipped="14" time="1.121932125">
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.027595333">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006942209">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.005926333">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.00409575">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.00550425">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.0039105">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003628041">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; sets custom properties on the scroller slot&apos;s element with the slotProps.scroller prop" time="0.003435958">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.scroller with the built-in ones" time="0.004493541">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; sets custom properties on the list slot&apos;s element with the slotProps.list prop" time="0.003717625">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.list with the built-in ones" time="0.005668916">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; sets custom properties on the indicator slot&apos;s element with the slotProps.indicator prop" time="0.003448542">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.indicator with the built-in ones" time="0.003017167">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.003069459">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; sets custom properties on the scroller slot&apos;s element with the slotProps.scroller callback" time="0.002750333">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; sets custom properties on the list slot&apos;s element with the slotProps.list callback" time="0.002530292">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; sets custom properties on the indicator slot&apos;s element with the slotProps.indicator callback" time="0.002643959">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.004359792">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; sets custom properties on the scroller slot&apos;s element with the slotProps.scroller callback using the ownerState" time="0.003136625">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; sets custom properties on the list slot&apos;s element with the slotProps.list callback using the ownerState" time="0.003096209">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; sets custom properties on the indicator slot&apos;s element with the slotProps.indicator callback using the ownerState" time="0.002733375">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002827292">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.002469542">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; allows overriding the scroller slot with a component using the slots.scroller prop" time="0.002631625">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; allows overriding the scroller slot with an element using the slots.scroller prop" time="0.002878417">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; allows overriding the list slot with a component using the slots.list prop" time="0.002478958">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; allows overriding the list slot with an element using the slots.list prop" time="0.0023195">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; allows overriding the indicator slot with a component using the slots.indicator prop" time="0.003955959">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; allows overriding the indicator slot with an element using the slots.indicator prop" time="0.002813708">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005557083">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002933125">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000364">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000213042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.00016">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004017459">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; can be named via `aria-label`" time="0.054279416">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; can be named via `aria-labelledby`" time="0.012809708">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; warnings &gt; should warn if the input is invalid" time="0.00415675">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: action &gt; should be able to access updateIndicator function" time="0.007538583">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: centered &gt; should render with the centered class" time="0.01234325">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: children &gt; should accept a null child" time="0.01058825">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: children &gt; should support empty children" time="0.002727708">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: children &gt; puts the selected child in tab order" time="0.012991083">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; props: slots and slotProps, should render custom start and end icons" time="0.012951375">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: value &gt; should pass selected prop to children" time="0.007315583">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: value &gt; should accept any value as selected tab value" time="0.010454417">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: value &gt; indicator &gt; should accept a false value" time="0.005372">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: value &gt; indicator &gt; should render the indicator" time="0.007573958">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: value &gt; indicator &gt; should update the indicator at each render" time="0.000274">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: value &gt; indicator &gt; should have &quot;right&quot; for RTL" time="0.026287875">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: value &gt; warnings &gt; warns when the value is not present in any tab" time="0.006204084">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: value &gt; warnings &gt; hidden tab / tabs &gt; should warn if a `Tab` has display: none" time="0.000218625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: value &gt; warnings &gt; hidden tab / tabs &gt; should not warn if the whole Tabs is hidden" time="0.000123958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: onChange &gt; should call onChange when clicking" time="0.009702959">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: onChange &gt; should not call onChange when already selected" time="0.0131835">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: onChange &gt; when `selectionFollowsFocus` should call if an unselected tab gets focused" time="0.011955917">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: onChange &gt; when `selectionFollowsFocus` should not call if an selected tab gets focused" time="0.008646625">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: variant=&quot;scrollable&quot; &gt; should render with the scrollable class" time="0.0098875">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: variant=&quot;scrollable&quot; &gt; should get a scrollbar size listener" time="0.011742167">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: variant=&quot;scrollable&quot; &gt; should handle theme styleOverrides for scrollable tabs without crashing" time="0.029323042">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: !variant=&quot;scrollable&quot; &gt; should not render with the scrollable class" time="0.010323083">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: scrollButtons &gt; should render scroll buttons" time="0.010549833">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: scrollButtons &gt; should append className from TabScrollButtonProps" time="0.012061541">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: scrollButtons &gt; should not hide scroll buttons when allowScrollButtonsMobile is true" time="0.013063542">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: scrollButtons &gt; scroll button visibility states &gt; should set neither left nor right scroll button state" time="0.000282459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: scrollButtons &gt; scroll button visibility states &gt; should set only left scroll button state" time="0.000166625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: scrollButtons &gt; scroll button visibility states &gt; should set only right scroll button state" time="0.00012575">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: scrollButtons &gt; scroll button visibility states &gt; should set both left and right scroll button state" time="0.000121166">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; scroll button behavior &gt; should scroll visible items" time="0.00082025">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; scroll button behavior &gt; should horizontally scroll by width of partially visible item" time="0.021304042">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; scroll button behavior &gt; should vertically scroll by width of partially visible item" time="0.019213083">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; scroll into view behavior &gt; should scroll left tab into view" time="0.000372875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: TabIndicatorProps &gt; should merge the style" time="0.004912042">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: orientation &gt; should support orientation=&quot;vertical&quot;" time="0.0003135">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: orientation &gt; does not add aria-orientation by default" time="0.003649833">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; prop: orientation &gt; adds the proper aria-orientation when vertical" time="0.004187542">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; server-side render &gt; should let the selected &lt;Tab /&gt; render the indicator server-side" time="0.010052458">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal ltr tablist &gt; ArrowLeft &gt; moves focus to the last tab without activating it if focus is on the first tab" time="0.021221459">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal ltr tablist &gt; ArrowLeft &gt; when `selectionFollowsFocus` moves focus to the last tab while activating it if focus is on the first tab" time="0.019396833">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal ltr tablist &gt; ArrowLeft &gt; moves focus to the previous tab without activating it" time="0.01788325">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal ltr tablist &gt; ArrowLeft &gt; when `selectionFollowsFocus` moves focus to the previous tab while activating it" time="0.012559417">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal ltr tablist &gt; ArrowLeft &gt; skips over disabled tabs" time="0.016159167">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal ltr tablist &gt; ArrowRight &gt; moves focus to the first tab without activating it if focus is on the last tab" time="0.011255083">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal ltr tablist &gt; ArrowRight &gt; when `selectionFollowsFocus` moves focus to the first tab while activating it if focus is on the last tab" time="0.012619458">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal ltr tablist &gt; ArrowRight &gt; moves focus to the next tab without activating it it" time="0.021688292">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal ltr tablist &gt; ArrowRight &gt; when `selectionFollowsFocus` moves focus to the next tab while activating it it" time="0.018958833">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal ltr tablist &gt; ArrowRight &gt; skips over disabled tabs" time="0.01567025">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal rtl tablist &gt; ArrowRight &gt; moves focus to the last tab without activating it if focus is on the first tab" time="0.01814725">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal rtl tablist &gt; ArrowRight &gt; when `selectionFollowsFocus` moves focus to the last tab while activating it if focus is on the first tab" time="0.016667667">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal rtl tablist &gt; ArrowRight &gt; moves focus to the previous tab without activating it" time="0.020043167">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal rtl tablist &gt; ArrowRight &gt; when `selectionFollowsFocus` moves focus to the previous tab while activating it" time="0.013730542">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal rtl tablist &gt; ArrowRight &gt; skips over disabled tabs" time="0.013829625">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal rtl tablist &gt; ArrowLeft &gt; moves focus to the first tab without activating it if focus is on the last tab" time="0.012985958">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal rtl tablist &gt; ArrowLeft &gt; when `selectionFollowsFocus` moves focus to the first tab while activating it if focus is on the last tab" time="0.01605125">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal rtl tablist &gt; ArrowLeft &gt; moves focus to the next tab without activating it it" time="0.011876125">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal rtl tablist &gt; ArrowLeft &gt; when `selectionFollowsFocus` moves focus to the next tab while activating it it" time="0.011347041">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a horizontal rtl tablist &gt; ArrowLeft &gt; skips over disabled tabs" time="0.009765333">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a vertical undefined tablist &gt; ArrowUp &gt; moves focus to the last tab without activating it if focus is on the first tab" time="0.018932">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a vertical undefined tablist &gt; ArrowUp &gt; when `selectionFollowsFocus` moves focus to the last tab while activating it if focus is on the first tab" time="0.012168625">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a vertical undefined tablist &gt; ArrowUp &gt; moves focus to the previous tab without activating it" time="0.019232416">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a vertical undefined tablist &gt; ArrowUp &gt; when `selectionFollowsFocus` moves focus to the previous tab while activating it" time="0.018088167">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a vertical undefined tablist &gt; ArrowUp &gt; skips over disabled tabs" time="0.012810958">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a vertical undefined tablist &gt; ArrowDown &gt; moves focus to the first tab without activating it if focus is on the last tab" time="0.010735875">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a vertical undefined tablist &gt; ArrowDown &gt; when `selectionFollowsFocus` moves focus to the first tab while activating it if focus is on the last tab" time="0.009570959">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a vertical undefined tablist &gt; ArrowDown &gt; moves focus to the next tab without activating it it" time="0.009362125">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a vertical undefined tablist &gt; ArrowDown &gt; when `selectionFollowsFocus` moves focus to the next tab while activating it it" time="0.011646916">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab element in a vertical undefined tablist &gt; ArrowDown &gt; skips over disabled tabs" time="0.016609875">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab regardless of orientation &gt; Home &gt; moves focus to the first tab without activating it" time="0.009438875">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab regardless of orientation &gt; Home &gt; when `selectionFollowsFocus` moves focus to the first tab without activating it" time="0.008841">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab regardless of orientation &gt; Home &gt; moves focus to first non-disabled tab" time="0.017583417">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab regardless of orientation &gt; End &gt; moves focus to the last tab without activating it" time="0.009598584">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab regardless of orientation &gt; End &gt; when `selectionFollowsFocus` moves focus to the last tab without activating it" time="0.010387">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; when focus is on a tab regardless of orientation &gt; End &gt; moves focus to first non-disabled tab" time="0.010070834">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; should allow to focus first tab when there are no active tabs" time="0.005998708">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; does not navigate when Alt is pressed with ArrowLeft" time="0.011082625">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; does not navigate when Shift is pressed with ArrowLeft" time="0.007871458">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; does not navigate when Ctrl is pressed with ArrowLeft" time="0.007126084">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; keyboard navigation when focus is on a tab &gt; does not navigate when Meta is pressed with ArrowLeft" time="0.009446709">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; dynamic tabs &gt; should not show scroll buttons if a tab added or removed in vertical mode" time="0.000259292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; scrollButton slot &gt; should render start and end scroll buttons" time="0.005646292">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; scrollButton slot &gt; should render a custom scroll button" time="0.003627416">
        </testcase>
        <testcase classname="packages/mui-material/src/Tabs/Tabs.test.js" name="&lt;Tabs /&gt; &gt; scrollButton slot &gt; should render a start and end scroll button icons" time="0.005058917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/TextField/TextField.test.js" timestamp="2025-09-10T11:25:37.588Z" hostname="Jans-MacBook-Air.local" tests="63" failures="0" errors="0" skipped="6" time="0.548319">
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.0341495">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.010429209">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.007392709">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.009933834">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.010978417">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the inputLabel slot&apos;s element with the slotProps.inputLabel prop" time="0.005388791">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the htmlInput slot&apos;s element with the slotProps.htmlInput prop" time="0.005412541">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the formHelperText slot&apos;s element with the slotProps.formHelperText prop" time="0.007088125">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.006679542">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.006167583">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback" time="0.00760025">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the inputLabel slot&apos;s element with the slotProps.inputLabel callback" time="0.004910583">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the htmlInput slot&apos;s element with the slotProps.htmlInput callback" time="0.008333333">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the formHelperText slot&apos;s element with the slotProps.formHelperText callback" time="0.004624875">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004308459">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback using the ownerState" time="0.009225416">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the inputLabel slot&apos;s element with the slotProps.inputLabel callback using the ownerState" time="0.008020916">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the htmlInput slot&apos;s element with the slotProps.htmlInput callback using the ownerState" time="0.00432175">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the formHelperText slot&apos;s element with the slotProps.formHelperText callback using the ownerState" time="0.004082584">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.004091125">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.002421917">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; allows overriding the inputLabel slot with a component using the slots.inputLabel prop" time="0.006299375">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; allows overriding the inputLabel slot with an element using the slots.inputLabel prop" time="0.003897625">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; allows overriding the htmlInput slot with a component using the slots.htmlInput prop" time="0.006482167">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; allows overriding the htmlInput slot with an element using the slots.htmlInput prop" time="0.005997375">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; allows overriding the formHelperText slot with a component using the slots.formHelperText prop" time="0.003995208">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; allows overriding the formHelperText slot with an element using the slots.formHelperText prop" time="0.004042791">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.003715625">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.006243042">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.011789333">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.008324958">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.00041175">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000209625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000160958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000153625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000195375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.005536042">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the select slot&apos;s element with the slotProps.select prop" time="0.015991375">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the select slot&apos;s element with the slotProps.select callback" time="0.011214958">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; sets custom properties on the select slot&apos;s element with the slotProps.select callback using the ownerState" time="0.022664167">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; MUI component API &gt; allows overriding the select slot with a component using the slots.select prop" time="0.00178225">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; structure &gt; should have an input as the only child" time="0.061771334">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; structure &gt; should forward the multiline prop to Input" time="0.016436334">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; structure &gt; should forward the fullWidth prop to Input" time="0.003535916">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; with a label &gt; label the input" time="0.011729333">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; with a label &gt; should apply the className to the label" time="0.010631166">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; with a label &gt; should not render empty () label element" time="0.00408375">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; with a label &gt; should not render empty (undefined) label element" time="0.008060292">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; with a helper text &gt; should apply the className to the FormHelperText" time="0.01220225">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; with a helper text &gt; has an accessible description" time="0.025214583">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; with an outline &gt; should set outline props" time="0.007521541">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; with an outline &gt; should set shrink prop on outline from label" time="0.006467">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; with an outline &gt; should render `0` label properly" time="0.004994458">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; with an outline &gt; should not set padding for empty, null or undefined label props" time="0.000222458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; prop: InputProps &gt; should apply additional props to the Input component" time="0.003946667">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; prop: select &gt; can render a &lt;select /&gt; when `native`" time="0.008615541">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; prop: select &gt; associates the label with the &lt;select /&gt; when `native={true}`" time="0.012500542">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; prop: select &gt; renders a combobox with the appropriate accessible name" time="0.014507333">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; prop: select &gt; creates an input[hidden] that has no accessible properties" time="0.009263">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; prop: select &gt; renders a combobox with the appropriate accessible description" time="0.017462875">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; event: click &gt; registers `onClick` on the root slot" time="0.010122292">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; prop: inputProps &gt; should apply additional props to the input element" time="0.005171291">
        </testcase>
        <testcase classname="packages/mui-material/src/TextField/TextField.test.js" name="&lt;TextField /&gt; &gt; autofill &gt; should be filled after auto fill event" time="0.007175542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ToggleButton/ToggleButton.test.js" timestamp="2025-09-10T11:25:37.590Z" hostname="Jans-MacBook-Air.local" tests="21" failures="0" errors="0" skipped="5" time="0.188936959">
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.031058375">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.01145225">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.006900042">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.007781125">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.00851325">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.004832667">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000474292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000362459">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000453583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000214667">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000154625">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003956625">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; adds the `selected` class to the root element if selected={true}" time="0.003737666">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; prop: color &gt; adds the class if color=&quot;primary&quot;" time="0.004984042">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; should render a disabled button if `disabled={true}`" time="0.0637225">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; can render a small button" time="0.004853458">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; should render a large button" time="0.006623125">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; prop: onChange &gt; should be called when clicked" time="0.006732667">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; prop: onChange &gt; should be called with the button value" time="0.005409625">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; prop: onChange &gt; should not be called if the click is prevented" time="0.007717583">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButton/ToggleButton.test.js" name="&lt;ToggleButton /&gt; &gt; server-side &gt; should server-side render" time="0.007077375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" timestamp="2025-09-10T11:25:37.591Z" hostname="Jans-MacBook-Air.local" tests="30" failures="0" errors="0" skipped="5" time="0.251389125">
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.020062167">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004158458">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.004362916">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.003640167">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.006482708">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.002513125">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000370875">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000320292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000432375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000204917">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000152125">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004462875">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; renders a `group`" time="0.024876458">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; can render group orientation vertically" time="0.031202292">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; should have horizontal class" time="0.014952334">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; should disable all ToggleButton if disabled prop is passed" time="0.010523458">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; exclusive &gt; should render a selected ToggleButton if value is selected" time="0.005140208">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; exclusive &gt; should not render a selected ToggleButton when its value is not selected" time="0.005668875">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; non exclusive &gt; should render a selected ToggleButton if value is selected" time="0.006526375">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; prop: onChange &gt; exclusive &gt; passed value should be null when current value is toggled off" time="0.011429541">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; prop: onChange &gt; exclusive &gt; should be a single value when value is toggled on" time="0.0128215">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; prop: onChange &gt; exclusive &gt; should be a single value when a new value is toggled on" time="0.007190791">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; prop: onChange &gt; non exclusive &gt; should be an empty array when current value is toggled off" time="0.006431291">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; prop: onChange &gt; non exclusive &gt; should be an array with a single value when value is toggled on" time="0.005779959">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; prop: onChange &gt; non exclusive &gt; should be an array with a single value when a secondary value is toggled off" time="0.008622458">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; prop: onChange &gt; non exclusive &gt; should be an array of all selected values when a second value is toggled on" time="0.005821709">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; should not be fullWidth by default" time="0.017328542">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; can pass fullWidth to Button" time="0.0064105">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; position classes &gt; correctly applies position classes to buttons" time="0.0168895">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/ToggleButtonGroup.test.js" name="&lt;ToggleButtonGroup /&gt; &gt; position classes &gt; does not apply any position classes to a single button" time="0.003708208">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/ToggleButtonGroup/isValueSelected.test.js" timestamp="2025-09-10T11:25:37.593Z" hostname="Jans-MacBook-Air.local" tests="8" failures="0" errors="0" skipped="0" time="0.00602525">
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/isValueSelected.test.js" name="&lt;ToggleButton /&gt; isValueSelected &gt; is false when value is undefined" time="0.001405875">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/isValueSelected.test.js" name="&lt;ToggleButton /&gt; isValueSelected &gt; is false when candidate is undefined" time="0.000510209">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/isValueSelected.test.js" name="&lt;ToggleButton /&gt; isValueSelected &gt; non exclusive &gt; is true if candidate is contained in value" time="0.000617041">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/isValueSelected.test.js" name="&lt;ToggleButton /&gt; isValueSelected &gt; non exclusive &gt; is false if value is not contained in candidate" time="0.000237">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/isValueSelected.test.js" name="&lt;ToggleButton /&gt; isValueSelected &gt; non exclusive &gt; is false if value is loosely contained in candidate" time="0.000261041">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/isValueSelected.test.js" name="&lt;ToggleButton /&gt; isValueSelected &gt; exclusive &gt; is true if candidate strictly equals value" time="0.000457417">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/isValueSelected.test.js" name="&lt;ToggleButton /&gt; isValueSelected &gt; exclusive &gt; is false if candidate does not equal value" time="0.000701625">
        </testcase>
        <testcase classname="packages/mui-material/src/ToggleButtonGroup/isValueSelected.test.js" name="&lt;ToggleButton /&gt; isValueSelected &gt; exclusive &gt; is false if candidate loosely equals value" time="0.000193875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Tooltip/Tooltip.test.js" timestamp="2025-09-10T11:25:37.593Z" hostname="Jans-MacBook-Air.local" tests="125" failures="0" errors="0" skipped="14" time="1.016497708">
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.098820292">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.031087959">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.012810417">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.000522291">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the popper slot&apos;s element with the slotProps.popper prop" time="0.01151125">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.popper with the built-in ones" time="0.015229">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the popper slot&apos;s element with the componentsProps.popper prop" time="0.012650166">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.popper&apos; over componentsProps.popper if both are defined" time="0.010505167">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition prop" time="0.012061792">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the componentsProps.transition prop" time="0.012584875">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.transition&apos; over componentsProps.transition if both are defined" time="0.009942959">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the tooltip slot&apos;s element with the slotProps.tooltip prop" time="0.010050333">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.tooltip with the built-in ones" time="0.012010042">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the tooltip slot&apos;s element with the componentsProps.tooltip prop" time="0.009017833">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.tooltip&apos; over componentsProps.tooltip if both are defined" time="0.009120875">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the arrow slot&apos;s element with the slotProps.arrow prop" time="0.012293209">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.arrow with the built-in ones" time="0.009329291">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the arrow slot&apos;s element with the componentsProps.arrow prop" time="0.01041275">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; prioritizes the &apos;slotProps.arrow&apos; over componentsProps.arrow if both are defined" time="0.010894125">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the popper slot&apos;s element with the slotProps.popper callback" time="0.009060708">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback" time="0.010238916">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the tooltip slot&apos;s element with the slotProps.tooltip callback" time="0.009161708">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the arrow slot&apos;s element with the slotProps.arrow callback" time="0.010781708">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the popper slot&apos;s element with the slotProps.popper callback using the ownerState" time="0.009865917">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the transition slot&apos;s element with the slotProps.transition callback using the ownerState" time="0.008933083">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the tooltip slot&apos;s element with the slotProps.tooltip callback using the ownerState" time="0.01195075">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; sets custom properties on the arrow slot&apos;s element with the slotProps.arrow callback using the ownerState" time="0.008832625">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; allows overriding the popper slot with a component using the slots.popper prop" time="0.003061834">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; allows overriding the popper slot with a component using the components.Popper prop" time="0.002597542">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.popper&apos; over components.Popper if both are defined" time="0.003602041">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; allows overriding the transition slot with a component using the slots.transition prop" time="0.006295458">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; allows overriding the transition slot with a component using the components.Transition prop" time="0.004597458">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.transition&apos; over components.Transition if both are defined" time="0.004546209">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; allows overriding the tooltip slot with a component using the slots.tooltip prop" time="0.0124885">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; allows overriding the tooltip slot with an element using the slots.tooltip prop" time="0.008443625">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; allows overriding the tooltip slot with a component using the components.Tooltip prop" time="0.008044625">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.tooltip&apos; over components.Tooltip if both are defined" time="0.015629875">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; allows overriding the tooltip slot with an element using the components.Tooltip prop" time="0.011136084">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; allows overriding the arrow slot with a component using the slots.arrow prop" time="0.008507375">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; allows overriding the arrow slot with an element using the slots.arrow prop" time="0.008230333">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; allows overriding the arrow slot with a component using the components.Arrow prop" time="0.009547625">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; prioritizes the &apos;slots.arrow&apos; over components.Arrow if both are defined" time="0.008167125">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; allows overriding the arrow slot with an element using the components.Arrow prop" time="0.008942417">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.013445625">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.009019">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000767375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000301375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000217375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.024014375">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; should render a popper" time="0.008279">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: disableHoverListener &gt; should hide the native title" time="0.004816375">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: title &gt; should display if the title is present" time="0.013494">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: title &gt; should display if the title is 0" time="0.006715583">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: title &gt; should not display if the title is an empty string" time="0.002201292">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: title &gt; should not display if the title is a false" time="0.001826917">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: title &gt; should not display if the title is a null" time="0.002622709">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: title &gt; should not display if the title is an undefined" time="0.002149708">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: title &gt; should label the child when closed" time="0.006126208">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: title &gt; cannot label the child when closed with an exotic title" time="0.003981541">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: title &gt; should label the child when open" time="0.009003333">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: title &gt; should label the child when open with an exotic title" time="0.018510083">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: title &gt; can describe the child when closed" time="0.003821666">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: title &gt; cannot describe the child when closed with an exotic title" time="0.002931916">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: title &gt; can describe the child when open" time="0.007321583">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: title &gt; can describe the child when open with an exotic title" time="0.007723417">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: placement &gt; should have top placement" time="0.002347208">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; should respond to external events" time="0.013876958">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; should be controllable" time="0.014504292">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; should not call onOpen again if already open" time="0.0071825">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; should not call onClose if already closed" time="0.002955959">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; is dismissible by pressing Escape" time="0.009447875">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; touch screen &gt; should not respond to quick events" time="0.005564958">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; touch screen &gt; should open on long press" time="0.015896833">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; touch screen &gt; should not open if disableTouchListener" time="0.003539333">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; mount &gt; should mount without any issue" time="0.009031583">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; mount &gt; should handle autoFocus + onFocus forwarding" time="0.000422583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: delay &gt; should take the enterDelay into account" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: delay &gt; should use hysteresis with the enterDelay" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: delay &gt; should take the leaveDelay into account" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: overrides &gt; should be transparent for the onTouchStart event" time="0.003854166">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: overrides &gt; should be transparent for the onTouchEnd event" time="0.006340083">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: overrides &gt; should be transparent for the onMouseEnter event" time="0.003116125">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: overrides &gt; should be transparent for the onMouseMove event" time="0.003206833">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: overrides &gt; should be transparent for the onMouseOver event" time="0.008463292">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: overrides &gt; should be transparent for the onMouseLeave event" time="0.003071416">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: overrides &gt; should be transparent for the focus and blur event" time="0.000341042">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: overrides &gt; should ignore event from the tooltip" time="0.006982542">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; disabled button warning &gt; should not raise a warning if title is empty" time="0.002033584">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; disabled button warning &gt; should raise a warning when we are uncontrolled and can not listen to events" time="0.001770958">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; disabled button warning &gt; should not raise a warning when we are controlled" time="0.012909625">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: disableInteractive &gt; when false should keep the overlay open if the popper element is hovered" time="0.010000375">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: disableInteractive &gt; when `true` should not keep the overlay open if the popper element is hovered" time="0.009498542">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: PopperProps &gt; should pass PopperProps to Popper Component" time="0.006119208">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: PopperProps &gt; should merge popperOptions with arrow modifier" time="0.012531292">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: PopperProps &gt; should merge popperOptions with custom modifier" time="0.013775166">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: slotProps.popper &gt; should merge popperOptions with arrow modifier" time="0.008174208">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: slotProps.popper &gt; should merge popperOptions with custom modifier" time="0.00885575">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop forwarding &gt; should forward props to the child element" time="0.002862667">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop forwarding &gt; should respect the props priority" time="0.005651458">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; focus &gt; ignores base focus" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; focus &gt; opens on focus-visible" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; focus &gt; closes on blur" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; focus &gt; should not prevent event handlers of children" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; focus &gt; should support event handlers with extra parameters" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; warnings &gt; should warn when switching between uncontrolled to controlled" time="0.002523084">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; warnings &gt; should warn when not forwarding props" time="0.001690125">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; warnings &gt; should warn when children is a string" time="0.000267958">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; should use the same Popper.js instance between two renders" time="0.008481542">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: PopperComponent &gt; can render a different component" time="0.002235083">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: followCursor &gt; should use the position of the mouse" time="0.010147334">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: components &gt; can render a different Popper component" time="0.002975542">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: components &gt; can render a different Tooltip component" time="0.005854209">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: components &gt; can render a different Arrow component" time="0.013515666">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: componentsProps &gt; can provide custom props for the inner Popper component" time="0.007215791">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: componentsProps &gt; can provide custom props for the inner Tooltip component" time="0.006462917">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: componentsProps &gt; can provide custom props for the inner Arrow component" time="0.008826792">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: slots &gt; can render a different Popper component" time="0.0019305">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: slots &gt; can render a different Tooltip component" time="0.013579333">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; prop: slots &gt; can render a different Arrow component" time="0.008953709">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; user-select state &gt; prevents text-selection during touch-longpress" time="0.007760208">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; user-select state &gt; ensures text-selection is reset after single press" time="0.003414167">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; user-select state &gt; restores user-select when unmounted during longpress" time="0.002887125">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; className &gt; should allow className from PopperProps" time="0.00603225">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; className &gt; should allow className from componentsProps.popper" time="0.012512334">
        </testcase>
        <testcase classname="packages/mui-material/src/Tooltip/Tooltip.test.js" name="&lt;Tooltip /&gt; &gt; className &gt; should apply both the className from PopperProps and componentsProps.popper if both are passed" time="0.006573333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Toolbar/Toolbar.test.js" timestamp="2025-09-10T11:25:37.599Z" hostname="Jans-MacBook-Air.local" tests="16" failures="0" errors="0" skipped="5" time="0.059782916">
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.020016667">
        </testcase>
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.006059375">
        </testcase>
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.003583708">
        </testcase>
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.002380542">
        </testcase>
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.006412875">
        </testcase>
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.004923334">
        </testcase>
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.003131708">
        </testcase>
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000623458">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000593292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.00028425">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000222708">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000189292">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003653875">
        </testcase>
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; should render with gutters class" time="0.002996333">
        </testcase>
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; can disable the gutters" time="0.001811">
        </testcase>
        <testcase classname="packages/mui-material/src/Toolbar/Toolbar.test.js" name="&lt;Toolbar /&gt; &gt; can condense itself" time="0.001399208">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" timestamp="2025-09-10T11:25:37.600Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="0" time="0.131164917">
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; should return focus to the root" time="0.025775583">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; should not return focus to the children when disableEnforceFocus is true" time="0.004648375">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; should focus first focusable child in portal" time="0.005870209">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; should warn if the root content is not focusable" time="0.009093">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; should not attempt to focus nonexistent children" time="0.001800708">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; should focus rootRef if no tabbable children are rendered" time="0.002906584">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; does not steal focus from a portaled element if any prop but open changes" time="0.004722083">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; undesired: lazy root does not get autofocus" time="0.002020667">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; does not bounce focus around due to sync focus-restore + focus-contain" time="0.003283833">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; does not focus if isEnabled returns false" time="0.045534917">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; restores focus when closed" time="0.002546833">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; undesired: enabling restore-focus logic when closing has no effect" time="0.00186675">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; undesired: setting `disableRestoreFocus` to false before closing has no effect" time="0.004703458">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; interval &gt; contains the focus if the active element is removed" time="0.005030542">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; interval &gt; prop: disableAutoFocus &gt; should not trap" time="0.004113959">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; interval &gt; prop: disableAutoFocus &gt; should trap once the focus moves inside" time="0.003075667">
        </testcase>
        <testcase classname="packages/mui-material/src/Unstable_TrapFocus/FocusTrap.test.tsx" name="&lt;FocusTrap /&gt; &gt; interval &gt; prop: disableAutoFocus &gt; should restore the focus" time="0.002988667">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Zoom/Zoom.test.js" timestamp="2025-09-10T11:25:37.601Z" hostname="Jans-MacBook-Air.local" tests="11" failures="0" errors="0" skipped="3" time="0.039506458">
        <testcase classname="packages/mui-material/src/Zoom/Zoom.test.js" name="&lt;Zoom /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.016720209">
        </testcase>
        <testcase classname="packages/mui-material/src/Zoom/Zoom.test.js" name="&lt;Zoom /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004237333">
        </testcase>
        <testcase classname="packages/mui-material/src/Zoom/Zoom.test.js" name="&lt;Zoom /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.003334125">
        </testcase>
        <testcase classname="packages/mui-material/src/Zoom/Zoom.test.js" name="&lt;Zoom /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.000388416">
        </testcase>
        <testcase classname="packages/mui-material/src/Zoom/Zoom.test.js" name="&lt;Zoom /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003839208">
        </testcase>
        <testcase classname="packages/mui-material/src/Zoom/Zoom.test.js" name="&lt;Zoom /&gt; &gt; transition lifecycle &gt; tests" time="0.005756917">
        </testcase>
        <testcase classname="packages/mui-material/src/Zoom/Zoom.test.js" name="&lt;Zoom /&gt; &gt; prop: appear &gt; should work when initially hidden: appear=true" time="0.001673291">
        </testcase>
        <testcase classname="packages/mui-material/src/Zoom/Zoom.test.js" name="&lt;Zoom /&gt; &gt; prop: appear &gt; should work when initially hidden: appear=false" time="0.001561458">
        </testcase>
        <testcase classname="packages/mui-material/src/Zoom/Zoom.test.js" name="&lt;Zoom /&gt; &gt; prop: timeout &gt; should render the default theme values by default" time="0.000520417">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Zoom/Zoom.test.js" name="&lt;Zoom /&gt; &gt; prop: timeout &gt; should render the custom theme values" time="0.000192791">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Zoom/Zoom.test.js" name="&lt;Zoom /&gt; &gt; prop: timeout &gt; should render the values provided via prop" time="0.000136709">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/Typography/Typography.test.js" timestamp="2025-09-10T11:25:37.602Z" hostname="Jans-MacBook-Air.local" tests="35" failures="0" errors="0" skipped="5" time="0.238259458">
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.080347333">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.007229709">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.004514">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.005139375">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005026791">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; MUI component API &gt; theme default components: &gt; respect theme&apos;s defaultProps" time="0.005836083">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; MUI component API &gt; default props provider: &gt; respect custom default props" time="0.00490575">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides custom state" time="0.000752375">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; MUI component API &gt; theme style overrides: &gt; respect theme&apos;s styleOverrides slots" time="0.000613959">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; MUI component API &gt; theme style overrides: &gt; overrideStyles does not replace each other in slots" time="0.000261583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; MUI component API &gt; theme variants: &gt; respect theme&apos;s variants" time="0.000267291">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; MUI component API &gt; theme variants: &gt; supports custom variant" time="0.000413583">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.003070584">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; should render the text" time="0.002760042">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; should render body1 root by default" time="0.001990834">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; should center text" time="0.006240709">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; should render h1 text" time="0.001855125">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; should render h2 text" time="0.0170805">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; should render h3 text" time="0.002037583">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; should render h4 text" time="0.003030708">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; should render h5 text" time="0.0015485">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; should render h6 text" time="0.001081917">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; should render subtitle1 text" time="0.001908375">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; should render body2 text" time="0.003043375">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; should render body1 text" time="0.005133333">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; should render caption text" time="0.004044208">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; should render button text" time="0.001708833">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; should render overline text" time="0.005975583">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; headline &gt; should render a span by default" time="0.004289334">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; headline &gt; should render a p with a paragraph" time="0.001253417">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; headline &gt; should render the mapped headline" time="0.001195667">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; headline &gt; should render a h1" time="0.001425375">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; prop: variantMapping &gt; should work with a single value" time="0.002427">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; prop: variantMapping &gt; should work event without the full mapping" time="0.002323709">
        </testcase>
        <testcase classname="packages/mui-material/src/Typography/Typography.test.js" name="&lt;Typography /&gt; &gt; combines system properties with the sx prop" time="0.044395">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/internal/SwitchBase.test.js" timestamp="2025-09-10T11:25:37.603Z" hostname="Jans-MacBook-Air.local" tests="45" failures="0" errors="0" skipped="1" time="0.417089833">
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; prop: component &gt; can render another root component with the `component` prop" time="0.042440083">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; applies the className to the root component" time="0.005935167">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; spreads props to the root component" time="0.006472541">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; ref &gt; attaches the ref" time="0.009551833">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; applies the root class to the root component if it has this class" time="0.005732625">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root prop" time="0.003803041">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.root with the built-in ones" time="0.003650375">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input prop" time="0.004023083">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; merges the class names provided in slotsProps.input with the built-in ones" time="0.005352625">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback" time="0.004585875">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback" time="0.002496708">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; sets custom properties on the root slot&apos;s element with the slotProps.root callback using the ownerState" time="0.002308834">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; sets custom properties on the input slot&apos;s element with the slotProps.input callback using the ownerState" time="0.006279167">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; allows overriding the root slot with a component using the slots.root prop" time="0.002679834">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; allows overriding the root slot with an element using the slots.root prop" time="0.001589458">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; allows overriding the input slot with a component using the slots.input prop" time="0.001941916">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; allows overriding the input slot with an element using the slots.input prop" time="0.002015959">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; MUI component API &gt; theme extended palette: &gt; should render without errors" time="0.004335042">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; should render a span" time="0.002367">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; should render an icon and input inside the button by default" time="0.064355833">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; should have a ripple" time="0.021552625">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; can have edge" time="0.00613775">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; can disable the ripple " time="0.028921084">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; should pass tabIndex to the input so it can be taken out of focus rotation" time="0.006906917">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; should pass value, disabled, checked, and name to the input" time="0.007534625">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; can disable the components, and render the ButtonBase with the disabled className" time="0.00458475">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; controlled &gt; should check the checkbox" time="0.011042333">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; controlled &gt; should uncheck the checkbox" time="0.006692375">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; can change checked state uncontrolled starting from defaultChecked" time="0.010938667">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; handleInputChange() &gt; should call onChange when uncontrolled" time="0.008530667">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; handleInputChange() &gt; should call onChange when controlled" time="0.023731834">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; handleInputChange() &gt; should not change checkbox state when event is default prevented" time="0.008173792">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; handleInputChange() &gt; prop: inputProps &gt; should be able to add aria" time="0.0053475">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; handleInputChange() &gt; prop: id &gt; should be able to add id to a checkbox input" time="0.004099083">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; handleInputChange() &gt; prop: id &gt; should be able to add id to a radio input" time="0.007960208">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; with FormControl &gt; enabled &gt; should not have the disabled class" time="0.017257125">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; with FormControl &gt; enabled &gt; should be overridden by props" time="0.007830875">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; with FormControl &gt; disabled &gt; should have the disabled class" time="0.004375">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; with FormControl &gt; disabled &gt; should be overridden by props" time="0.003537375">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; focus/blur &gt; forwards focus/blur events and notifies the FormControl" time="0.012311125">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; check transitioning between controlled states throws errors &gt; should error when uncontrolled and changed to controlled" time="0.010575083">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; check transitioning between controlled states throws errors &gt; should error when controlled and changed to uncontrolled" time="0.000808041">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; checkbox form submission &gt; `value` falls back to the platform default if no `value` is set" time="0.004353834">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; checkbox form submission &gt; `value` can be overwritten" time="0.004602916">
        </testcase>
        <testcase classname="packages/mui-material/src/internal/SwitchBase.test.js" name="&lt;SwitchBase /&gt; &gt; should call event handlers in slotProps when provided" time="0.004858667">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/internal/animate.test.js" timestamp="2025-09-10T11:25:37.605Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="3" time="0">
        <testcase classname="packages/mui-material/src/internal/animate.test.js" name="animate &gt; should work" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/internal/animate.test.js" name="animate &gt; should work when asking for the current value" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/internal/animate.test.js" name="animate &gt; should be able to cancel the animation" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/styles/ThemeProvider.test.tsx" timestamp="2025-09-10T11:25:37.605Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.116138875">
        <testcase classname="packages/mui-material/src/styles/ThemeProvider.test.tsx" name="ThemeProvider &gt; When theme is a function, it should not show warning" time="0.013292875">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProvider.test.tsx" name="ThemeProvider &gt; theme should be stable between renders if created outside of component" time="0.00362925">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProvider.test.tsx" name="ThemeProvider &gt; light &amp; dark &gt; should be able to use `useColorScheme`" time="0.010835333">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProvider.test.tsx" name="ThemeProvider &gt; light &amp; dark &gt; should be able to switch between modes" time="0.062657959">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProvider.test.tsx" name="ThemeProvider &gt; light &amp; dark &gt; allows default mode to be changed" time="0.004309584">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProvider.test.tsx" name="ThemeProvider &gt; nested ThemeProvider &gt; should have `vars` as null for nested non-vars theme" time="0.02043125">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" timestamp="2025-09-10T11:25:37.606Z" hostname="Jans-MacBook-Air.local" tests="15" failures="0" errors="0" skipped="1" time="0.25063775">
        <testcase classname="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" name="[Material UI] ThemeProviderWithVars &gt; All CSS vars &gt; palette" time="0.045637333">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" name="[Material UI] ThemeProviderWithVars &gt; All CSS vars &gt; opacity" time="0.012603">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" name="[Material UI] ThemeProviderWithVars &gt; All CSS vars &gt; shape" time="0.011600417">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" name="[Material UI] ThemeProviderWithVars &gt; Typography &gt; contain expected typography" time="0.009208458">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" name="[Material UI] ThemeProviderWithVars &gt; Spacing &gt; provides spacing utility" time="0.013329041">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" name="[Material UI] ThemeProviderWithVars &gt; Breakpoints &gt; provides breakpoint utilities" time="0.008415416">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" name="[Material UI] ThemeProviderWithVars &gt; Skipped vars &gt; should not contain `variants` in theme.vars" time="0.006746625">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" name="[Material UI] ThemeProviderWithVars &gt; Skipped vars &gt; should not contain `focus` in theme.vars" time="0.007189542">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" name="[Material UI] ThemeProviderWithVars &gt; should use numeric values in system&apos;s spacing" time="0.000541041">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" name="[Material UI] ThemeProviderWithVars &gt; warns when using `setMode` without configuring `colorSchemeSelector`" time="0.016018541">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" name="[Material UI] ThemeProviderWithVars &gt; do not warn when using `setMode` with `colorSchemeSelector` that is not `media`" time="0.02777325">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" name="[Material UI] ThemeProviderWithVars &gt; theme should remain the same when ThemeProvider rerenders" time="0.046161042">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" name="[Material UI] ThemeProviderWithVars &gt; theme does not change with CSS variables" time="0.020242792">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" name="[Material UI] ThemeProviderWithVars &gt; palette mode should change if not using CSS variables" time="0.007994375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/ThemeProviderWithVars.test.js" name="[Material UI] ThemeProviderWithVars &gt; `forceThemeRerender` recalculates the theme" time="0.014983833">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/styles/adaptV4Theme.test.js" timestamp="2025-09-10T11:25:37.606Z" hostname="Jans-MacBook-Air.local" tests="13" failures="0" errors="0" skipped="0" time="0.007263125">
        <testcase classname="packages/mui-material/src/styles/adaptV4Theme.test.js" name="adaptV4Theme &gt; theme.components &gt; moves props to components&apos; defaultProps" time="0.002749875">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/adaptV4Theme.test.js" name="adaptV4Theme &gt; theme.components &gt; moves overrides to components&apos; styleOverrides" time="0.000345667">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/adaptV4Theme.test.js" name="adaptV4Theme &gt; theme.components &gt; moves props, and overrides to components" time="0.000266875">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/adaptV4Theme.test.js" name="adaptV4Theme &gt; theme.components &gt; merges props and overrides to components" time="0.00013">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/adaptV4Theme.test.js" name="adaptV4Theme &gt; theme.components &gt; merges props and overrides from different components in appropriate key" time="0.000196458">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/adaptV4Theme.test.js" name="adaptV4Theme &gt; theme.components &gt; merges partially migrated props and overrides from different components in appropriate key" time="0.000160833">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/adaptV4Theme.test.js" name="adaptV4Theme &gt; theme.mixins.gutters() &gt; is added to the theme" time="0.000450542">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/adaptV4Theme.test.js" name="adaptV4Theme &gt; theme.mixins.gutters() &gt; respects theme spacing" time="0.000134375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/adaptV4Theme.test.js" name="adaptV4Theme &gt; theme.mixins.gutters() &gt; does not remove the mixins defined in the input theme" time="0.000449334">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/adaptV4Theme.test.js" name="adaptV4Theme &gt; theme.palette.text.hint &gt; is added to the theme" time="0.000109875">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/adaptV4Theme.test.js" name="adaptV4Theme &gt; theme.palette.text.hint &gt; is added to a dark theme using the old palette.type value" time="0.000080333">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/adaptV4Theme.test.js" name="adaptV4Theme &gt; theme.palette.text.hint &gt; is added to a dark theme" time="0.000070083">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/adaptV4Theme.test.js" name="adaptV4Theme &gt; theme.palette.mode &gt; converts theme.palette.type to theme.palette.mode" time="0.000061042">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/styles/createMixins.test.js" timestamp="2025-09-10T11:25:37.607Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.002546666">
        <testcase classname="packages/mui-material/src/styles/createMixins.test.js" name="createMixins &gt; should be able add other mixins" time="0.001828541">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/styles/createPalette.test.js" timestamp="2025-09-10T11:25:37.607Z" hostname="Jans-MacBook-Air.local" tests="19" failures="0" errors="0" skipped="0" time="0.006719541">
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; should create a palette with a rich color object" time="0.001675542">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; should create a palette with custom colors" time="0.000381292">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; should calculate light and dark colors if not provided" time="0.000409916">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; should calculate light and dark colors using a simple tonalOffset number value" time="0.000293541">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; should calculate light and dark colors using a custom tonalOffset object value" time="0.000273709">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; should calculate contrastText using the provided contrastThreshold" time="0.000174292">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; should create a dark palette" time="0.000431917">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; should create independent object" time="0.000318042">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; augmentColor &gt; should accept a color" time="0.00034625">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; augmentColor &gt; should accept a partial palette color" time="0.000146417">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; should create a palette with unique object references" time="0.000222583">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; warnings &gt; throws an exception when an invalid mode is specified" time="0.0002405">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; warnings &gt; throws an exception when a wrong color is provided" time="0.000436084">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; warnings &gt; logs an error when the contrast ratio does not reach AA" time="0.000166375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; color space &gt; should not throw an error when using color space" time="0.000101083">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; color space &gt; should use color-mix when using color space" time="0.000071834">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; color space &gt; should use oklch relative color for contrast text" time="0.000058833">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; color space &gt; should use color-mix with tonal when using color space" time="0.000068958">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createPalette.test.js" name="createPalette() &gt; color space &gt; should use color-mix when using color space variable" time="0.000062333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/styles/createTheme.test.js" timestamp="2025-09-10T11:25:37.608Z" hostname="Jans-MacBook-Air.local" tests="49" failures="0" errors="0" skipped="1" time="0.205103708">
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; should not create vars if cssVariables: false" time="0.003417542">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; color schemes dark: true" time="0.001031875">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; color schemes light: true" time="0.000771833">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; should provide spacing in px" time="0.001289875">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; should have a palette" time="0.000774958">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; should have the custom palette" time="0.000901458">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; should be customizable through `colorSchemes` node" time="0.000976917">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; should be customizable through `colorSchemes` node with non-existing fields" time="0.002274792">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; should work with `palette` and `colorSchemes`" time="0.002792875">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; should work with `palette` and a custom `colorSchemes.dark`" time="0.00076825">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; CSS variables &gt; should have default light with media selector if no `palette` and colorSchemes.dark is provided " time="0.005893458">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; CSS variables &gt; should have a light as a default colorScheme if only `palette` is provided" time="0.002817583">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; CSS variables &gt; should have a dark as a default colorScheme if only `palette` is provided" time="0.003146708">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; CSS variables &gt; should have light and dark colorSchemes" time="0.004972083">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; CSS variables &gt; should not have light if default color scheme is set to dark" time="0.001949">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; CSS variables &gt; should be able to customize tonal offset" time="0.00139075">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; CSS variables &gt; spacing &gt; should provide the default spacing" time="0.001733916">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; CSS variables &gt; spacing array &gt; should create spacing vars array" time="0.006259208">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; CSS variables &gt; spacing array &gt; should work with positive input" time="0.001402875">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; CSS variables &gt; spacing array &gt; should work with negative input" time="0.001326042">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; transitions &gt; [`easing`]: should provide the default values" time="0.000524666">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; transitions &gt; [`duration`]: should provide the default values" time="0.000573334">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; transitions &gt; [`easing`]: should provide the custom values" time="0.000360041">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; transitions &gt; [`duration`]: should provide the custom values" time="0.00039025">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; transitions &gt; should allow providing a partial structure" time="0.000290125">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; shadows &gt; should provide the default array" time="0.00027075">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; shadows &gt; should override the array as expected" time="0.000313791">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; components &gt; should have the components as expected" time="0.000646292">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; styleOverrides &gt; should warn when trying to override an internal state the wrong way" time="0.001263708">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; shallow merges multiple arguments" time="0.000363167">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; deep merges multiple arguments" time="0.000403">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; allows callbacks using theme in variants" time="0.073317083">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; should apply the correct borderRadius styles via sx prop if theme values are 0" time="0.00035475">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; should apply dark styles when using applyStyles if mode=&quot;dark&quot;" time="0.021165959">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; should not apply dark styles when using applyStyles if mode=&quot;light&quot;" time="0.004733958">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; should return the styles directly when using applyStyles if the selector is `&amp;`" time="0.0025595">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; Throw an informative error when the key `vars` is passed as part of `options` passed" time="0.001046209">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; should not throw for nested theme that includes `vars` node" time="0.021066625">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; should create a new object" time="0.0128255">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; should have `toRuntimeSource` for integrating with Pigment CSS" time="0.003418334">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; color manipulators &gt; should have the color manipulators" time="0.000444667">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; color manipulators &gt; should have the color manipulators with CSS variables" time="0.000933334">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; color manipulators &gt; [default] should use system color manipulators" time="0.000397291">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; color manipulators &gt; [default] `alpha()` should work with coefficient as string" time="0.000347583">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; color manipulators &gt; [CSS variables] `alpha()` should work with string and number coefficient" time="0.001105">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; color manipulators &gt; [CSS variables] `alpha()` should work with fallbacks" time="0.001931208">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; color manipulators &gt; [color space with CSS variables] should use CSS for manipulating colors" time="0.003194875">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; color manipulators &gt; [color space with CSS variables] should use CSS for manipulating vars" time="0.001063708">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTheme.test.js" name="createTheme &gt; color manipulators &gt; mixing color space" time="0.000985292">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/styles/createTransitions.test.js" timestamp="2025-09-10T11:25:37.610Z" hostname="Jans-MacBook-Air.local" tests="21" failures="0" errors="0" skipped="0" time="0.0054055">
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; should allow to customize the default duration" time="0.001735708">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; warnings &gt; should warn when first argument is of bad type" time="0.000696333">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; warnings &gt; should warn when bad &quot;duration&quot; option type" time="0.000232375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; warnings &gt; should warn when bad &quot;easing&quot; option type" time="0.000097792">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; warnings &gt; should warn when bad &quot;delay&quot; option type" time="0.000231166">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; warnings &gt; should warn when passed unrecognized option" time="0.000157542">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; should create default transition without arguments" time="0.00012875">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; should take string props as a first argument" time="0.000056375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; should also take array of props as first argument" time="0.000177167">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; should optionally accept number &quot;duration&quot; option in second argument" time="0.000073083">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; should optionally accept string &quot;duration&quot; option in second argument" time="0.000047041">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; should round decimal digits of &quot;duration&quot; prop to whole numbers" time="0.000043916">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; should optionally accept string &quot;easing&quot; option in second argument" time="0.000052083">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; should optionally accept number &quot;delay&quot; option in second argument" time="0.000056459">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; should optionally accept string &quot;delay&quot; option in second argument" time="0.000046208">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; should round decimal digits of &quot;delay&quot; prop to whole numbers" time="0.000041708">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; should return zero when not passed arguments" time="0.000050167">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; should return zero when passed undefined" time="0.000101042">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; should return zero when passed null" time="0.000036584">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; should return NaN when passed a negative number" time="0.000058125">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTransitions.test.js" name="createTransitions &gt; create() function &gt; should return values for pre-calculated positive examples" time="0.000061167">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/styles/createTypography.test.js" timestamp="2025-09-10T11:25:37.611Z" hostname="Jans-MacBook-Air.local" tests="11" failures="0" errors="0" skipped="0" time="0.004738375">
        <testcase classname="packages/mui-material/src/styles/createTypography.test.js" name="createTypography &gt; should create a material design typography according to spec" time="0.000918542">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTypography.test.js" name="createTypography &gt; should create a typography with custom fontSize" time="0.000265625">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTypography.test.js" name="createTypography &gt; should accept a function" time="0.000105791">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTypography.test.js" name="createTypography &gt; should accept a custom font size" time="0.000119">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTypography.test.js" name="createTypography &gt; should create a typography with a custom baseFontSize" time="0.00007225">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTypography.test.js" name="createTypography &gt; should create a typography with custom h1" time="0.000155042">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTypography.test.js" name="createTypography &gt; should apply a CSS property to all the variants" time="0.000246792">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTypography.test.js" name="createTypography &gt; only defines letter-spacing if the font-family is not overwritten" time="0.000169542">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTypography.test.js" name="createTypography &gt; should apply font CSS properties to inherit variant" time="0.000234041">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTypography.test.js" name="createTypography &gt; warnings &gt; logs an error if `fontSize` is not of type number" time="0.000354792">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/createTypography.test.js" name="createTypography &gt; warnings &gt; logs an error if `htmlFontSize` is not of type number" time="0.000098">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/styles/cssUtils.test.js" timestamp="2025-09-10T11:25:37.612Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="0" time="0.011766834">
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; isUnitless &gt; should work as expected" time="0.0011605">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; getUnit &gt; should work as expected" time="0.000307917">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; toUnitless &gt; should work as expected" time="0.000477">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; convertLength &gt; should work as expected" time="0.000414459">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; alignProperty &gt; aligns 8 on grid 4 to 8" time="0.000179958">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; alignProperty &gt; aligns 8 on grid 1 to 8" time="0.000069208">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; alignProperty &gt; aligns 8 on grid 9 to 9" time="0.000053166">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; alignProperty &gt; aligns 8 on grid 7 to 7" time="0.000044834">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; alignProperty &gt; aligns 8 on grid 17 to 0" time="0.00015825">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; fontGrid &gt; when 1.3 lineHeight, 4 pixels,
      16 htmlFontSize &gt; should return a font grid such that the relative lineHeight is aligned" time="0.000317667">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; fontGrid &gt; with 1.3 lineHeight, 4 pixels,
      16 htmlFontSize, the font grid is such that
      there is no smaller font aligning the lineHeight" time="0.000081667">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; fontGrid &gt; when 1.6 lineHeight, 9 pixels,
      15 htmlFontSize &gt; should return a font grid such that the relative lineHeight is aligned" time="0.00004025">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; fontGrid &gt; with 1.6 lineHeight, 9 pixels,
      15 htmlFontSize, the font grid is such that
      there is no smaller font aligning the lineHeight" time="0.000034833">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; fontGrid &gt; when 1 lineHeight, 3 pixels,
      14 htmlFontSize &gt; should return a font grid such that the relative lineHeight is aligned" time="0.000031834">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; fontGrid &gt; with 1 lineHeight, 3 pixels,
      14 htmlFontSize, the font grid is such that
      there is no smaller font aligning the lineHeight" time="0.000031375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; responsiveProperty &gt; when providing two breakpoints and pixel units &gt; should respond with three styles in pixels" time="0.003508958">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/cssUtils.test.js" name="cssUtils &gt; responsiveProperty &gt; when providing one breakpoint and requesting rem units &gt; should respond with two styles in rem" time="0.000511917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/styles/excludeVariablesFromRoot.test.ts" timestamp="2025-09-10T11:25:37.612Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.002301625">
        <testcase classname="packages/mui-material/src/styles/excludeVariablesFromRoot.test.ts" name="excludeVariablesFromRoot &gt; should return true" time="0.0014915">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/excludeVariablesFromRoot.test.ts" name="excludeVariablesFromRoot &gt; should return true for custom prefix" time="0.000208834">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/styles/extendTheme.test.js" timestamp="2025-09-10T11:25:37.612Z" hostname="Jans-MacBook-Air.local" tests="66" failures="0" errors="0" skipped="0" time="0.245942416">
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should have a light colorScheme by default" time="0.006323833">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should have a light as a default colorScheme regardless of key order" time="0.003338">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should have &quot;media&quot; colorSchemeSelector" time="0.002124916">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should have CSS color-scheme by default" time="0.002501375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should have CSS color-scheme: dark" time="0.004759875">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should throw error if the default color scheme is invalid" time="0.000805084">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should throw error if the default color scheme is missing" time="0.000427">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should not attach to `colorSchemes` if the provided scheme is invalid" time="0.001724333">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; disableCssColorScheme should remove CSS color-scheme" time="0.010445791">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should have the custom color schemes" time="0.005842958">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should generate color channels" time="0.001270625">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should generate dark color channels" time="0.001879958">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should generate common background, onBackground channels" time="0.001267083">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should generate dark common background, onBackground channels" time="0.001329667">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should generate color channels for custom colors" time="0.001013958">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; transitions &gt; [`easing`]: should provide the default values" time="0.000939417">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; transitions &gt; [`duration`]: should provide the default values" time="0.000963959">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; transitions &gt; [`easing`]: should provide the custom values" time="0.001036083">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; transitions &gt; [`duration`]: should provide the custom values" time="0.003070667">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; transitions &gt; should allow providing a partial structure" time="0.004173166">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; opacity &gt; should provide the default opacities" time="0.00392675">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; opacity &gt; should provide the default dark opacities" time="0.001934792">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; opacity &gt; should allow overriding of the default opacities" time="0.005363">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; opacity &gt; should allow overriding of the default dark opacities" time="0.001290625">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; overlays &gt; should provide the default array" time="0.00113075">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; overlays &gt; should provide the default array for dark" time="0.001563834">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; overlays &gt; should override the array as expected" time="0.001087208">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; shadows &gt; should provide the default array" time="0.001141">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; shadows &gt; should override the array as expected" time="0.002048708">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; components &gt; should have the components as expected" time="0.00143075">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; styleOverrides &gt; should warn when trying to override an internal state the wrong way" time="0.004065708">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; spacing &gt; produce spacing token by default" time="0.001100833">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; spacing &gt; turn number to pixel" time="0.001340208">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; spacing &gt; can be customized as a string" time="0.003300667">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; spacing &gt; uses the provided value if it is a string" time="0.001180167">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; spacing &gt; can be customized as an array" time="0.001349916">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; spacing &gt; can be customized as a function" time="0.00105975">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; spacing &gt; a custom function should not be altered" time="0.000877792">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; typography &gt; produce typography token by default" time="0.000984792">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; typography &gt; access font vars" time="0.001286791">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; typography &gt; use provided value if no font" time="0.000971834">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; container queries &gt; should generate container queries" time="0.000997375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; shallow merges multiple arguments" time="0.001095708">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; deep merges multiple arguments" time="0.001062833">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; allows callbacks using theme in variants" time="0.097343708">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; css var prefix &gt; has mui as default css var prefix" time="0.002546458">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; css var prefix &gt; custom css var prefix" time="0.001547958">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; warnings &gt; dependent token: should warn if the value cannot be parsed by color manipulators" time="0.003562792">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; warnings &gt; should not warn if channel token is provided" time="0.002448375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; warnings &gt; independent token: should skip warning" time="0.001037833">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; warnings &gt; custom palette should not throw errors" time="0.000999042">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should have the vars object" time="0.001001417">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; dark color scheme only &gt; should use dark as default color scheme" time="0.001786375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; dark color scheme only &gt; should not have colorSchemeSelector" time="0.001172667">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; dark color scheme only &gt; should have dark palette and not light color scheme" time="0.000985667">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; light and dark color schemes &gt; should use prefers-color-scheme (`media`) by default" time="0.004511375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; light and dark color schemes &gt; [media] should use prefers-color-scheme for styling" time="0.002142541">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; light and dark color schemes &gt; [media] should use prefers-color-scheme with dark as default" time="0.002086334">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; light and dark color schemes &gt; should use default class selector" time="0.001762125">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; light and dark color schemes &gt; should use a custom class selector" time="0.001604875">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; light and dark color schemes &gt; should use default data selector for styling" time="0.001516375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; light and dark color schemes &gt; should use data attribute selector" time="0.004063833">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; light and dark color schemes &gt; should use data attribute for styling" time="0.0017435">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; light and dark color schemes &gt; should use a custom class selector when dark is the default" time="0.001779792">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; light and dark color schemes &gt; should use a custom root selector" time="0.010105083">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/extendTheme.test.js" name="extendTheme &gt; should not generate vars for modularCssLayers" time="0.001135917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/styles/responsiveFontSizes.test.js" timestamp="2025-09-10T11:25:37.615Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.005976333">
        <testcase classname="packages/mui-material/src/styles/responsiveFontSizes.test.js" name="responsiveFontSizes &gt; should support unitless line height" time="0.003216584">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/responsiveFontSizes.test.js" name="responsiveFontSizes &gt; should disable vertical alignment" time="0.000854083">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/responsiveFontSizes.test.js" name="responsiveFontSizes &gt; should handle variants that have been reset to undefined" time="0.000526375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/responsiveFontSizes.test.js" name="responsiveFontSizes &gt; when requesting a responsive typography with non unitless line height and alignment &gt; should throw an error, as this is not supported" time="0.000643625">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/styles/stringifyTheme.test.ts" timestamp="2025-09-10T11:25:37.616Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.007709834">
        <testcase classname="packages/mui-material/src/styles/stringifyTheme.test.ts" name="StringifyTheme &gt; should serialize the theme" time="0.004949292">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/stringifyTheme.test.ts" name="StringifyTheme &gt; should serialize the custom theme" time="0.001534292">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/stringifyTheme.test.ts" name="StringifyTheme &gt; works with framework toRuntimeSource" time="0.000417291">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/styles/styled.test.js" timestamp="2025-09-10T11:25:37.616Z" hostname="Jans-MacBook-Air.local" tests="32" failures="0" errors="0" skipped="0" time="0.166562333">
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; should work" time="0.036885542">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; should work when styles are object" time="0.006482916">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; should use defaultTheme if no theme is provided" time="0.0042915">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; should use defaultTheme if no theme is provided when styles are object" time="0.002870375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; should use theme from context if available" time="0.010149791">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; should use theme from context if available when styles are object" time="0.004347875">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; dynamic styles &gt; can adapt styles to props" time="0.007301417">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; dynamic styles &gt; can adapt styles to props when styles are object" time="0.003330541">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; should support override as long as a resolver is provided" time="0.003979208">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; should work with specified muiOptions" time="0.004451083">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; should work with specified muiOptions when styles are object" time="0.001821541">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; overrides should be respected" time="0.002161333">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; overrides should be respected when styles are object" time="0.003428458">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; overrides should be respected when prop is specified" time="0.003878584">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; overrides should be respected when prop is specified when styles are object" time="0.00256425">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; variants should be skipped for non root slots" time="0.002095084">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; variants should respect skipVariantsResolver if defined" time="0.002488375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; variants should win over overrides" time="0.004228375">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; variants should win over overrides when styles are object" time="0.003835709">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; styled wrapper should win over variants" time="0.00493575">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; styled wrapper should win over variants when styles are object" time="0.005949541">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; should resolve the sx prop" time="0.01021175">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; should resolve the sx prop when styles are object" time="0.005039417">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; should respect the skipSx option" time="0.009439125">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; should set displayName properly" time="0.000850084">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; should set displayName as name + slot if both are specified" time="0.0002235">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; should set the className when generating the classes" time="0.002541958">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; should set the className as root if no slot is specified" time="0.001575584">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; should not propagate classes props to component if it is a root slot" time="0.001342875">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; should propagate classes props to component if it is not a root slot" time="0.001561625">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; should propagate classes props to component if no slot is specified" time="0.003655167">
        </testcase>
        <testcase classname="packages/mui-material/src/styles/styled.test.js" name="styled &gt; muiOptions &gt; classes props should be correctly applied to root and slot elements" time="0.005249583">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" timestamp="2025-09-10T11:25:37.617Z" hostname="Jans-MacBook-Air.local" tests="15" failures="0" errors="0" skipped="0" time="0.122729916">
        <testcase classname="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" name="useAutocomplete &gt; should preserve DOM nodes of options when re-ordering" time="0.055733708">
        </testcase>
        <testcase classname="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" name="useAutocomplete &gt; createFilterOptions &gt; defaults to getOptionLabel for text filtering" time="0.002539625">
        </testcase>
        <testcase classname="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" name="useAutocomplete &gt; createFilterOptions &gt; filters without error with empty option set" time="0.0005305">
        </testcase>
        <testcase classname="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" name="useAutocomplete &gt; createFilterOptions &gt; option: limit &gt; limits the number of suggested options to be shown" time="0.000395333">
        </testcase>
        <testcase classname="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" name="useAutocomplete &gt; createFilterOptions &gt; option: matchFrom &gt; any &gt; show all results that match" time="0.000332584">
        </testcase>
        <testcase classname="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" name="useAutocomplete &gt; createFilterOptions &gt; option: matchFrom &gt; empty &gt; does not call getOptionLabel if filter is empty" time="0.000483125">
        </testcase>
        <testcase classname="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" name="useAutocomplete &gt; createFilterOptions &gt; option: matchFrom &gt; start &gt; show only results that start with search" time="0.000273083">
        </testcase>
        <testcase classname="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" name="useAutocomplete &gt; createFilterOptions &gt; option: ignoreAccents &gt; does not ignore accents" time="0.000358333">
        </testcase>
        <testcase classname="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" name="useAutocomplete &gt; createFilterOptions &gt; option: ignoreCase &gt; matches results with case insensitive" time="0.000394958">
        </testcase>
        <testcase classname="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" name="useAutocomplete &gt; should warn if the input is not binded" time="0.009402541">
        </testcase>
        <testcase classname="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" name="useAutocomplete &gt; prop: freeSolo &gt; should not reset if the component value does not change on blur" time="0.031254875">
        </testcase>
        <testcase classname="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" name="useAutocomplete &gt; getInputProps &gt; should disable input element" time="0.008573875">
        </testcase>
        <testcase classname="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" name="useAutocomplete &gt; should allow tuples or arrays as value when multiple=false" time="0.007278416">
        </testcase>
        <testcase classname="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" name="useAutocomplete &gt; prop: defaultValue &gt; should not trigger onInputChange when defaultValue is provided" time="0.001996958">
        </testcase>
        <testcase classname="packages/mui-material/src/useAutocomplete/useAutocomplete.test.js" name="useAutocomplete &gt; prop: value &gt; should not trigger onInputChange when value is provided" time="0.001637666">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/useMediaQuery/useMediaQuery.test.js" timestamp="2025-09-10T11:25:37.618Z" hostname="Jans-MacBook-Air.local" tests="14" failures="0" errors="0" skipped="0" time="0.056045875">
        <testcase classname="packages/mui-material/src/useMediaQuery/useMediaQuery.test.js" name="useMediaQuery &gt; without window.matchMedia &gt; should work without window.matchMedia available" time="0.015659083">
        </testcase>
        <testcase classname="packages/mui-material/src/useMediaQuery/useMediaQuery.test.js" name="useMediaQuery &gt; with window.matchMedia &gt; option: defaultMatches &gt; should be false by default" time="0.003844208">
        </testcase>
        <testcase classname="packages/mui-material/src/useMediaQuery/useMediaQuery.test.js" name="useMediaQuery &gt; with window.matchMedia &gt; option: defaultMatches &gt; should take the option into account" time="0.00220825">
        </testcase>
        <testcase classname="packages/mui-material/src/useMediaQuery/useMediaQuery.test.js" name="useMediaQuery &gt; with window.matchMedia &gt; option: noSsr &gt; should render once if the default value match the expectation" time="0.002773083">
        </testcase>
        <testcase classname="packages/mui-material/src/useMediaQuery/useMediaQuery.test.js" name="useMediaQuery &gt; with window.matchMedia &gt; option: noSsr &gt; render API: should render once if the default value does not match the expectation" time="0.002949625">
        </testcase>
        <testcase classname="packages/mui-material/src/useMediaQuery/useMediaQuery.test.js" name="useMediaQuery &gt; with window.matchMedia &gt; option: noSsr &gt; render API: should render once if the default value does not match the expectation but `noSsr` is enabled" time="0.001572167">
        </testcase>
        <testcase classname="packages/mui-material/src/useMediaQuery/useMediaQuery.test.js" name="useMediaQuery &gt; with window.matchMedia &gt; option: noSsr &gt; hydrate API: should render twice if the default value does not match the expectation" time="0.00812775">
        </testcase>
        <testcase classname="packages/mui-material/src/useMediaQuery/useMediaQuery.test.js" name="useMediaQuery &gt; with window.matchMedia &gt; option: noSsr &gt; hydrate API: should render once if the default value does not match the expectation but `noSsr` is enabled" time="0.002951708">
        </testcase>
        <testcase classname="packages/mui-material/src/useMediaQuery/useMediaQuery.test.js" name="useMediaQuery &gt; with window.matchMedia &gt; should try to reconcile each time" time="0.004991916">
        </testcase>
        <testcase classname="packages/mui-material/src/useMediaQuery/useMediaQuery.test.js" name="useMediaQuery &gt; with window.matchMedia &gt; should be able to change the query dynamically" time="0.003637917">
        </testcase>
        <testcase classname="packages/mui-material/src/useMediaQuery/useMediaQuery.test.js" name="useMediaQuery &gt; with window.matchMedia &gt; should observe the media query" time="0.001577708">
        </testcase>
        <testcase classname="packages/mui-material/src/useMediaQuery/useMediaQuery.test.js" name="useMediaQuery &gt; server-side &gt; should use the SSR match media implementation" time="0.00197675">
        </testcase>
        <testcase classname="packages/mui-material/src/useMediaQuery/useMediaQuery.test.js" name="useMediaQuery &gt; theme scoping &gt; should work with theme scoping" time="0.00146475">
        </testcase>
        <testcase classname="packages/mui-material/src/useMediaQuery/useMediaQuery.test.js" name="useMediaQuery &gt; warnings &gt; warns on invalid `query` argument" time="0.000918542">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/usePagination/usePagination.test.js" timestamp="2025-09-10T11:25:37.618Z" hostname="Jans-MacBook-Air.local" tests="16" failures="0" errors="0" skipped="0" time="0.03990175">
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; has one page by default" time="0.011281125">
        </testcase>
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; has disabled previous &amp; next buttons by default" time="0.003526125">
        </testcase>
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; has a disabled previous button &amp; an enabled next button when count &gt; 1" time="0.002014292">
        </testcase>
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; has an enabled previous button &amp; disabled next button when page === count" time="0.001286833">
        </testcase>
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; has a disabled first button when showFirstButton === true" time="0.001882667">
        </testcase>
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; has a disabled last button when showLastButton === true" time="0.000871041">
        </testcase>
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; has an enabled first button when showFirstButton === true &amp;&amp; page &gt; 1" time="0.000927959">
        </testcase>
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; has an enabled last button when showLastButton === true &amp;&amp; page &lt; count" time="0.000844959">
        </testcase>
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; has no ellipses when count &lt;= 7" time="0.003640583">
        </testcase>
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; has an end ellipsis by default when count &gt;= 8" time="0.001432125">
        </testcase>
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; has a start ellipsis when page &gt;= 5" time="0.000730667">
        </testcase>
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; has start &amp; end ellipsis when count &gt;= 9" time="0.002398875">
        </testcase>
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; can have a reduced siblingCount" time="0.002550208">
        </testcase>
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; can have an increased siblingCount" time="0.000974125">
        </testcase>
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; can have an increased boundaryCount" time="0.002169792">
        </testcase>
        <testcase classname="packages/mui-material/src/usePagination/usePagination.test.js" name="usePagination &gt; should support boundaryCount={0}" time="0.00221175">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/utils/isMuiElement.test.js" timestamp="2025-09-10T11:25:37.619Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.002490375">
        <testcase classname="packages/mui-material/src/utils/isMuiElement.test.js" name="utils/index.js &gt; isMuiElement &gt; should match static muiName property" time="0.001510375">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/isMuiElement.test.js" name="utils/index.js &gt; isMuiElement &gt; should be truthy for matching components" time="0.000295584">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/utils/mergeSlotProps.test.ts" timestamp="2025-09-10T11:25:37.619Z" hostname="Jans-MacBook-Air.local" tests="13" failures="0" errors="0" skipped="0" time="0.0054225">
        <testcase classname="packages/mui-material/src/utils/mergeSlotProps.test.ts" name="utils/index.js &gt; mergeSlotProps &gt; external slot props is undefined" time="0.001355584">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/mergeSlotProps.test.ts" name="utils/index.js &gt; mergeSlotProps &gt; merge styles" time="0.000335416">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/mergeSlotProps.test.ts" name="utils/index.js &gt; mergeSlotProps &gt; merge sx" time="0.00020175">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/mergeSlotProps.test.ts" name="utils/index.js &gt; mergeSlotProps &gt; merge sx array" time="0.000106541">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/mergeSlotProps.test.ts" name="utils/index.js &gt; mergeSlotProps &gt; external slot props should override" time="0.000154">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/mergeSlotProps.test.ts" name="utils/index.js &gt; mergeSlotProps &gt; external slot props is a function" time="0.0001575">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/mergeSlotProps.test.ts" name="utils/index.js &gt; mergeSlotProps &gt; default slot props is a function" time="0.000077625">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/mergeSlotProps.test.ts" name="utils/index.js &gt; mergeSlotProps &gt; both slot props are functions" time="0.00011575">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/mergeSlotProps.test.ts" name="utils/index.js &gt; mergeSlotProps &gt; merge styles for callbacks" time="0.000212417">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/mergeSlotProps.test.ts" name="utils/index.js &gt; mergeSlotProps &gt; merge sx for callback" time="0.000095">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/mergeSlotProps.test.ts" name="utils/index.js &gt; mergeSlotProps &gt; merge sx array for callback" time="0.000075875">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/mergeSlotProps.test.ts" name="utils/index.js &gt; mergeSlotProps &gt; external callback should be called with default slot props" time="0.000105834">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/mergeSlotProps.test.ts" name="utils/index.js &gt; mergeSlotProps &gt; automatically merge function based on the default slot props" time="0.000671666">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/utils/useSlot.test.tsx" timestamp="2025-09-10T11:25:37.620Z" hostname="Jans-MacBook-Air.local" tests="16" failures="0" errors="0" skipped="0" time="0.155173666">
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; single slot &gt; should render correct tag" time="0.054048167">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; single slot &gt; should change leaf component and spread props" time="0.005376666">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; should render both tags" time="0.006270125">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; should have classes" time="0.005480708">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; should append classes" time="0.007808041">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; slotProps has higher priority" time="0.003547625">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; can change root leaf component with `component` prop" time="0.002511958">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; use slotProps `component` over `component` prop" time="0.002360667">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots &gt; can change decorator leaf component" time="0.003200625">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; unstyled popper as the root slot &gt; should render popper with styled-component" time="0.017304875">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; unstyled popper as the root slot &gt; the root slot should be replaceable" time="0.004139584">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; unstyled popper as the root slot &gt; the root component can be changed" time="0.011963208">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots with unstyled popper &gt; should render popper with styled-component" time="0.011662167">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots with unstyled popper &gt; the listbox slot should be replaceable" time="0.002710458">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots with unstyled popper &gt; the listbox leaf component can be changed" time="0.008055209">
        </testcase>
        <testcase classname="packages/mui-material/src/utils/useSlot.test.tsx" name="useSlot &gt; multiple slots with unstyled popper &gt; the option leaf component can be changed" time="0.0074395">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-material/src/useScrollTrigger/useScrollTrigger.test.js" timestamp="2025-09-10T11:25:37.622Z" hostname="Jans-MacBook-Air.local" tests="14" failures="0" errors="0" skipped="0" time="0.099842583">
        <testcase classname="packages/mui-material/src/useScrollTrigger/useScrollTrigger.test.js" name="useScrollTrigger &gt; defaultTrigger &gt; should be false by default" time="0.016534542">
        </testcase>
        <testcase classname="packages/mui-material/src/useScrollTrigger/useScrollTrigger.test.js" name="useScrollTrigger &gt; defaultTrigger &gt; should be false by default when using ref" time="0.004873958">
        </testcase>
        <testcase classname="packages/mui-material/src/useScrollTrigger/useScrollTrigger.test.js" name="useScrollTrigger &gt; defaultTrigger &gt; should do nothing when ref is null" time="0.005315583">
        </testcase>
        <testcase classname="packages/mui-material/src/useScrollTrigger/useScrollTrigger.test.js" name="useScrollTrigger &gt; scroll &gt; scroll container should render with ref" time="0.009425458">
        </testcase>
        <testcase classname="packages/mui-material/src/useScrollTrigger/useScrollTrigger.test.js" name="useScrollTrigger &gt; scroll &gt; should not trigger from window scroll events with ref" time="0.004327292">
        </testcase>
        <testcase classname="packages/mui-material/src/useScrollTrigger/useScrollTrigger.test.js" name="useScrollTrigger &gt; scroll &gt; should trigger above default threshold with ref" time="0.005222125">
        </testcase>
        <testcase classname="packages/mui-material/src/useScrollTrigger/useScrollTrigger.test.js" name="useScrollTrigger &gt; scroll &gt; should have correct hysteresis triggering threshold with ref" time="0.009167333">
        </testcase>
        <testcase classname="packages/mui-material/src/useScrollTrigger/useScrollTrigger.test.js" name="useScrollTrigger &gt; scroll &gt; should have correct hysteresis triggering with default threshold with ref" time="0.011153584">
        </testcase>
        <testcase classname="packages/mui-material/src/useScrollTrigger/useScrollTrigger.test.js" name="useScrollTrigger &gt; scroll &gt; should have correct hysteresis triggering with custom threshold with ref" time="0.007197667">
        </testcase>
        <testcase classname="packages/mui-material/src/useScrollTrigger/useScrollTrigger.test.js" name="useScrollTrigger &gt; scroll &gt; should not trigger at exact threshold value with ref" time="0.004155167">
        </testcase>
        <testcase classname="packages/mui-material/src/useScrollTrigger/useScrollTrigger.test.js" name="useScrollTrigger &gt; scroll &gt; should not trigger at exact threshold value with hysteresis disabled with ref" time="0.003953458">
        </testcase>
        <testcase classname="packages/mui-material/src/useScrollTrigger/useScrollTrigger.test.js" name="useScrollTrigger &gt; scroll &gt; should correctly evaluate sequential scroll events with identical scrollY offsets with ref" time="0.00402825">
        </testcase>
        <testcase classname="packages/mui-material/src/useScrollTrigger/useScrollTrigger.test.js" name="useScrollTrigger &gt; scroll &gt; should correctly evaluate sequential scroll events with identical scrollY offsets and hysteresis disabled with ref" time="0.0063375">
        </testcase>
        <testcase classname="packages/mui-material/src/useScrollTrigger/useScrollTrigger.test.js" name="useScrollTrigger &gt; scroll &gt; should correctly evaluate scroll events on page first load" time="0.007025208">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/appendOwnerState/appendOwnerState.test.ts" timestamp="2025-09-10T11:25:37.622Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.005632416">
        <testcase classname="packages/mui-utils/src/appendOwnerState/appendOwnerState.test.ts" name="appendOwnerState &gt; when the provided elementType is undefined &gt; returns the provided existingProps without modification " time="0.002853958">
        </testcase>
        <testcase classname="packages/mui-utils/src/appendOwnerState/appendOwnerState.test.ts" name="appendOwnerState &gt; when a DOM element is provided as elementType &gt; returns the provided existingProps without modification " time="0.000421334">
        </testcase>
        <testcase classname="packages/mui-utils/src/appendOwnerState/appendOwnerState.test.ts" name="appendOwnerState &gt; when a React component is provided as elementType &gt; returns the provided existingProps with added ownerState" time="0.00058875">
        </testcase>
        <testcase classname="packages/mui-utils/src/appendOwnerState/appendOwnerState.test.ts" name="appendOwnerState &gt; when a React component is provided as elementType &gt; merges the provided ownerState with existing ones" time="0.000206792">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/capitalize/capitalize.test.ts" timestamp="2025-09-10T11:25:37.623Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.0021135">
        <testcase classname="packages/mui-utils/src/capitalize/capitalize.test.ts" name="capitalize &gt; should work" time="0.000922667">
        </testcase>
        <testcase classname="packages/mui-utils/src/capitalize/capitalize.test.ts" name="capitalize &gt; should throw when not used correctly" time="0.000585209">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/clamp/clamp.test.ts" timestamp="2025-09-10T11:25:37.623Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.001670583">
        <testcase classname="packages/mui-utils/src/clamp/clamp.test.ts" name="clamp &gt; clamps a value based on min and max" time="0.001012667">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/chainPropTypes/chainPropTypes.test.ts" timestamp="2025-09-10T11:25:37.623Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.004471209">
        <testcase classname="packages/mui-utils/src/chainPropTypes/chainPropTypes.test.ts" name="chainPropTypes &gt; should have the right shape" time="0.0015375">
        </testcase>
        <testcase classname="packages/mui-utils/src/chainPropTypes/chainPropTypes.test.ts" name="chainPropTypes &gt; should return null for supported props" time="0.000522791">
        </testcase>
        <testcase classname="packages/mui-utils/src/chainPropTypes/chainPropTypes.test.ts" name="chainPropTypes &gt; should return an error for unsupported props" time="0.000288333">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/composeClasses/composeClasses.test.ts" timestamp="2025-09-10T11:25:37.623Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.00236475">
        <testcase classname="packages/mui-utils/src/composeClasses/composeClasses.test.ts" name="composeClasses &gt; should generate the classes based on the slots" time="0.00130025">
        </testcase>
        <testcase classname="packages/mui-utils/src/composeClasses/composeClasses.test.ts" name="composeClasses &gt; should consider classes if available" time="0.000291042">
        </testcase>
        <testcase classname="packages/mui-utils/src/composeClasses/composeClasses.test.ts" name="composeClasses &gt; should ignore false values" time="0.000175875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/debounce/debounce.test.ts" timestamp="2025-09-10T11:25:37.623Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.004551833">
        <testcase classname="packages/mui-utils/src/debounce/debounce.test.ts" name="debounce &gt; should debounce" time="0.003092834">
        </testcase>
        <testcase classname="packages/mui-utils/src/debounce/debounce.test.ts" name="debounce &gt; should clear a pending task" time="0.000822584">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/deprecatedPropType/deprecatedPropType.test.ts" timestamp="2025-09-10T11:25:37.623Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.006308417">
        <testcase classname="packages/mui-utils/src/deprecatedPropType/deprecatedPropType.test.ts" name="deprecatedPropType &gt; should not warn" time="0.003459542">
        </testcase>
        <testcase classname="packages/mui-utils/src/deprecatedPropType/deprecatedPropType.test.ts" name="deprecatedPropType &gt; should warn once" time="0.001154292">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/deepmerge/deepmerge.test.ts" timestamp="2025-09-10T11:25:37.624Z" hostname="Jans-MacBook-Air.local" tests="12" failures="0" errors="0" skipped="0" time="0.005739584">
        <testcase classname="packages/mui-utils/src/deepmerge/deepmerge.test.ts" name="deepmerge &gt; should not be subject to prototype pollution via __proto__" time="0.001405833">
        </testcase>
        <testcase classname="packages/mui-utils/src/deepmerge/deepmerge.test.ts" name="deepmerge &gt; should not be subject to prototype pollution via constructor" time="0.00035425">
        </testcase>
        <testcase classname="packages/mui-utils/src/deepmerge/deepmerge.test.ts" name="deepmerge &gt; should not be subject to prototype pollution via prototype" time="0.000177667">
        </testcase>
        <testcase classname="packages/mui-utils/src/deepmerge/deepmerge.test.ts" name="deepmerge &gt; should appropriately copy the fields without prototype pollution" time="0.000089916">
        </testcase>
        <testcase classname="packages/mui-utils/src/deepmerge/deepmerge.test.ts" name="deepmerge &gt; should merge objects across realms" time="0.001354875">
        </testcase>
        <testcase classname="packages/mui-utils/src/deepmerge/deepmerge.test.ts" name="deepmerge &gt; should not merge HTML elements" time="0.000310416">
        </testcase>
        <testcase classname="packages/mui-utils/src/deepmerge/deepmerge.test.ts" name="deepmerge &gt; should reset source when target is undefined" time="0.000336833">
        </testcase>
        <testcase classname="packages/mui-utils/src/deepmerge/deepmerge.test.ts" name="deepmerge &gt; should merge keys that do not exist in source" time="0.000147667">
        </testcase>
        <testcase classname="packages/mui-utils/src/deepmerge/deepmerge.test.ts" name="deepmerge &gt; should deep clone source key object if target key does not exist" time="0.000363791">
        </testcase>
        <testcase classname="packages/mui-utils/src/deepmerge/deepmerge.test.ts" name="deepmerge &gt; should not deep clone React element" time="0.00025">
        </testcase>
        <testcase classname="packages/mui-utils/src/deepmerge/deepmerge.test.ts" name="deepmerge &gt; should not deep clone React component" time="0.000104">
        </testcase>
        <testcase classname="packages/mui-utils/src/deepmerge/deepmerge.test.ts" name="deepmerge &gt; should deep clone example correctly" time="0.000082792">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/elementAcceptingRef/elementAcceptingRef.test.tsx" timestamp="2025-09-10T11:25:37.624Z" hostname="Jans-MacBook-Air.local" tests="12" failures="0" errors="0" skipped="12" time="0">
        <testcase classname="packages/mui-utils/src/elementAcceptingRef/elementAcceptingRef.test.tsx" name="elementAcceptingRef &gt; acceptance when not required &gt; accepts nully values" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-utils/src/elementAcceptingRef/elementAcceptingRef.test.tsx" name="elementAcceptingRef &gt; acceptance when not required &gt; accepts host components" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-utils/src/elementAcceptingRef/elementAcceptingRef.test.tsx" name="elementAcceptingRef &gt; acceptance when not required &gt; class components" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-utils/src/elementAcceptingRef/elementAcceptingRef.test.tsx" name="elementAcceptingRef &gt; acceptance when not required &gt; accepts pure class components" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-utils/src/elementAcceptingRef/elementAcceptingRef.test.tsx" name="elementAcceptingRef &gt; acceptance when not required &gt; accepts forwardRef" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-utils/src/elementAcceptingRef/elementAcceptingRef.test.tsx" name="elementAcceptingRef &gt; acceptance when not required &gt; accepts memo" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-utils/src/elementAcceptingRef/elementAcceptingRef.test.tsx" name="elementAcceptingRef &gt; acceptance when not required &gt; accepts lazy" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-utils/src/elementAcceptingRef/elementAcceptingRef.test.tsx" name="elementAcceptingRef &gt; acceptance when not required &gt; technically allows other exotics like strict mode" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-utils/src/elementAcceptingRef/elementAcceptingRef.test.tsx" name="elementAcceptingRef &gt; acceptance when not required &gt; accepts Fragment" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-utils/src/elementAcceptingRef/elementAcceptingRef.test.tsx" name="elementAcceptingRef &gt; rejections &gt; rejects undefined values when required" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-utils/src/elementAcceptingRef/elementAcceptingRef.test.tsx" name="elementAcceptingRef &gt; rejections &gt; rejects null values when required" time="0">
            <skipped/>
        </testcase>
        <testcase classname="packages/mui-utils/src/elementAcceptingRef/elementAcceptingRef.test.tsx" name="elementAcceptingRef &gt; rejections &gt; rejects function components" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/elementTypeAcceptingRef/elementTypeAcceptingRef.test.tsx" timestamp="2025-09-10T11:25:37.625Z" hostname="Jans-MacBook-Air.local" tests="10" failures="0" errors="0" skipped="0" time="0.039142459">
        <testcase classname="packages/mui-utils/src/elementTypeAcceptingRef/elementTypeAcceptingRef.test.tsx" name="elementTypeAcceptingRef &gt; acceptance &gt; accepts nully values" time="0.002560041">
        </testcase>
        <testcase classname="packages/mui-utils/src/elementTypeAcceptingRef/elementTypeAcceptingRef.test.tsx" name="elementTypeAcceptingRef &gt; acceptance &gt; accepts host components" time="0.012092583">
        </testcase>
        <testcase classname="packages/mui-utils/src/elementTypeAcceptingRef/elementTypeAcceptingRef.test.tsx" name="elementTypeAcceptingRef &gt; acceptance &gt; class components" time="0.003768416">
        </testcase>
        <testcase classname="packages/mui-utils/src/elementTypeAcceptingRef/elementTypeAcceptingRef.test.tsx" name="elementTypeAcceptingRef &gt; acceptance &gt; accepts pure class components" time="0.001986875">
        </testcase>
        <testcase classname="packages/mui-utils/src/elementTypeAcceptingRef/elementTypeAcceptingRef.test.tsx" name="elementTypeAcceptingRef &gt; acceptance &gt; accepts forwardRef" time="0.003643625">
        </testcase>
        <testcase classname="packages/mui-utils/src/elementTypeAcceptingRef/elementTypeAcceptingRef.test.tsx" name="elementTypeAcceptingRef &gt; acceptance &gt; accepts memo" time="0.00317525">
        </testcase>
        <testcase classname="packages/mui-utils/src/elementTypeAcceptingRef/elementTypeAcceptingRef.test.tsx" name="elementTypeAcceptingRef &gt; acceptance &gt; accepts lazy" time="0.006003125">
        </testcase>
        <testcase classname="packages/mui-utils/src/elementTypeAcceptingRef/elementTypeAcceptingRef.test.tsx" name="elementTypeAcceptingRef &gt; acceptance &gt; technically allows other exotics like strict mode" time="0.001588084">
        </testcase>
        <testcase classname="packages/mui-utils/src/elementTypeAcceptingRef/elementTypeAcceptingRef.test.tsx" name="elementTypeAcceptingRef &gt; acceptance &gt; accepts Fragment" time="0.001595334">
        </testcase>
        <testcase classname="packages/mui-utils/src/elementTypeAcceptingRef/elementTypeAcceptingRef.test.tsx" name="elementTypeAcceptingRef &gt; rejections &gt; rejects function components" time="0.000923375">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/exactProp/exactProp.test.ts" timestamp="2025-09-10T11:25:37.625Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.002211667">
        <testcase classname="packages/mui-utils/src/exactProp/exactProp.test.ts" name="exactProp() &gt; should return null for supported props" time="0.001303042">
        </testcase>
        <testcase classname="packages/mui-utils/src/exactProp/exactProp.test.ts" name="exactProp() &gt; should return an error for unsupported props" time="0.0003505">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/extractEventHandlers/extractEventHandlers.test.ts" timestamp="2025-09-10T11:25:37.626Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.003564">
        <testcase classname="packages/mui-utils/src/extractEventHandlers/extractEventHandlers.test.ts" name="extractEventHandlers &gt; extracts the fields starting with `on[A-Z]` and being a function" time="0.00208325">
        </testcase>
        <testcase classname="packages/mui-utils/src/extractEventHandlers/extractEventHandlers.test.ts" name="extractEventHandlers &gt; returns an empty object if an empty object is provided" time="0.000380459">
        </testcase>
        <testcase classname="packages/mui-utils/src/extractEventHandlers/extractEventHandlers.test.ts" name="extractEventHandlers &gt; returns an empty object if undefined is passed in" time="0.000119125">
        </testcase>
        <testcase classname="packages/mui-utils/src/extractEventHandlers/extractEventHandlers.test.ts" name="extractEventHandlers &gt; excludes the provided handlers from the result" time="0.00024725">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/generateUtilityClass/generateUtilityClass.test.ts" timestamp="2025-09-10T11:25:37.626Z" hostname="Jans-MacBook-Air.local" tests="5" failures="0" errors="0" skipped="0" time="0.00415925">
        <testcase classname="packages/mui-utils/src/generateUtilityClass/generateUtilityClass.test.ts" name="generateUtilityClass &gt; should generate the class correctly" time="0.001182584">
        </testcase>
        <testcase classname="packages/mui-utils/src/generateUtilityClass/generateUtilityClass.test.ts" name="generateUtilityClass &gt; should consider if slot should generate state class" time="0.00051525">
        </testcase>
        <testcase classname="packages/mui-utils/src/generateUtilityClass/generateUtilityClass.test.ts" name="generateUtilityClass &gt; ClassNameGenerator &gt; able to set custom generator" time="0.000648208">
        </testcase>
        <testcase classname="packages/mui-utils/src/generateUtilityClass/generateUtilityClass.test.ts" name="generateUtilityClass &gt; ClassNameGenerator &gt; does not affect state class" time="0.0001715">
        </testcase>
        <testcase classname="packages/mui-utils/src/generateUtilityClass/generateUtilityClass.test.ts" name="generateUtilityClass &gt; custom state prefix" time="0.00082525">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/getDisplayName/getDisplayName.test.tsx" timestamp="2025-09-10T11:25:37.626Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.002603792">
        <testcase classname="packages/mui-utils/src/getDisplayName/getDisplayName.test.tsx" name="utils/getDisplayName.js &gt; getDisplayName &gt; gets the display name of a React component" time="0.002025042">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/generateUtilityClasses/generateUtilityClasses.test.ts" timestamp="2025-09-10T11:25:37.626Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.003256125">
        <testcase classname="packages/mui-utils/src/generateUtilityClasses/generateUtilityClasses.test.ts" name="generateUtilityClasses &gt; should generate the classes correctly" time="0.00184925">
        </testcase>
        <testcase classname="packages/mui-utils/src/generateUtilityClasses/generateUtilityClasses.test.ts" name="generateUtilityClasses &gt; should consider if slot should generate state class" time="0.000461792">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/getReactElementRef/getReactElementRef.test.tsx" timestamp="2025-09-10T11:25:37.626Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.002759791">
        <testcase classname="packages/mui-utils/src/getReactElementRef/getReactElementRef.test.tsx" name="getReactElementRef &gt; should return undefined when not used correctly" time="0.001445375">
        </testcase>
        <testcase classname="packages/mui-utils/src/getReactElementRef/getReactElementRef.test.tsx" name="getReactElementRef &gt; should return the ref of a React element" time="0.00029025">
        </testcase>
        <testcase classname="packages/mui-utils/src/getReactElementRef/getReactElementRef.test.tsx" name="getReactElementRef &gt; should return null for a fragment" time="0.000282375">
        </testcase>
        <testcase classname="packages/mui-utils/src/getReactElementRef/getReactElementRef.test.tsx" name="getReactElementRef &gt; should return null for element with no ref" time="0.000091916">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/getScrollbarSize/getScrollbarSize.test.ts" timestamp="2025-09-10T11:25:37.627Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="1" time="0.001783833">
        <testcase classname="packages/mui-utils/src/getScrollbarSize/getScrollbarSize.test.ts" name="getScrollbarSize &gt; should return correct value when using a custom scrollbar" time="0.001107791">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" timestamp="2025-09-10T11:25:37.627Z" hostname="Jans-MacBook-Air.local" tests="17" failures="0" errors="0" skipped="0" time="0.005556417">
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; passes on undefined but fails on null value &gt; passes on undefined" time="0.002302166">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; passes on undefined but fails on null value &gt; fails on null" time="0.000410708">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; passes on zero" time="0.000109">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; passes on positive numbers" time="0.000078333">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; passes with the conversion before passing &gt; passes with conversion - parseInt" time="0.000187333">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; passes with the conversion before passing &gt; passes with the conversion - Math.floor" time="0.000099708">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; passes with the conversion before passing &gt; passes with the boolean conversion" time="0.000067542">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; passes on negative numbers" time="0.000103209">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; fails on non-integers &gt; fails when we pass float number" time="0.000356875">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; fails on non-integers &gt; fails when have been made computation which results in float number" time="0.000113042">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; fails on non-integers &gt; fails on string" time="0.000079125">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; fails on non-integers &gt; fails on boolean" time="0.0000655">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; fails on non-integers &gt; fails on array" time="0.000086875">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; fails on number edge cases &gt; fails on infinity" time="0.000059917">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; fails on number edge cases &gt; fails on NaN" time="0.000055667">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; isRequired &gt; passes when not required" time="0.000062834">
        </testcase>
        <testcase classname="packages/mui-utils/src/integerPropType/integerPropType.test.tsx" name="integerPropType &gt; isRequired &gt; fails when required" time="0.000112875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/mergeSlotProps/mergeSlotProps.test.ts" timestamp="2025-09-10T11:25:37.628Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.003286042">
        <testcase classname="packages/mui-utils/src/mergeSlotProps/mergeSlotProps.test.ts" name="mergeSlotProps &gt; overrides the internal props with the external ones" time="0.001067958">
        </testcase>
        <testcase classname="packages/mui-utils/src/mergeSlotProps/mergeSlotProps.test.ts" name="mergeSlotProps &gt; it joins all class names in order from least to most important &gt; when internal classNames from getSlotProps are included" time="0.000223209">
        </testcase>
        <testcase classname="packages/mui-utils/src/mergeSlotProps/mergeSlotProps.test.ts" name="mergeSlotProps &gt; it joins all class names in order from least to most important &gt; when getSlotProps is not present" time="0.000167333">
        </testcase>
        <testcase classname="packages/mui-utils/src/mergeSlotProps/mergeSlotProps.test.ts" name="mergeSlotProps &gt; merges the style props" time="0.000371792">
        </testcase>
        <testcase classname="packages/mui-utils/src/mergeSlotProps/mergeSlotProps.test.ts" name="mergeSlotProps &gt; returns the ref returned from the getSlotProps function" time="0.000138542">
        </testcase>
        <testcase classname="packages/mui-utils/src/mergeSlotProps/mergeSlotProps.test.ts" name="mergeSlotProps &gt; does not require any parameters" time="0.000107458">
        </testcase>
        <testcase classname="packages/mui-utils/src/mergeSlotProps/mergeSlotProps.test.ts" name="mergeSlotProps &gt; passes the external event handlers to the getSlotProps function (if defined)" time="0.000529833">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/omitEventHandlers/omitEventHandlers.test.ts" timestamp="2025-09-10T11:25:37.628Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.009469125">
        <testcase classname="packages/mui-utils/src/omitEventHandlers/omitEventHandlers.test.ts" name="omitEventHandlers &gt; should remove functions with names beginning with `on` followed by uppercase letter" time="0.003995917">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/requirePropFactory/requirePropFactory.test.tsx" timestamp="2025-09-10T11:25:37.628Z" hostname="Jans-MacBook-Air.local" tests="9" failures="0" errors="0" skipped="0" time="0.003292416">
        <testcase classname="packages/mui-utils/src/requirePropFactory/requirePropFactory.test.tsx" name="requirePropFactory &gt; should have the right shape" time="0.000829334">
        </testcase>
        <testcase classname="packages/mui-utils/src/requirePropFactory/requirePropFactory.test.tsx" name="requirePropFactory &gt; requireProp() &gt; should return a function" time="0.0001945">
        </testcase>
        <testcase classname="packages/mui-utils/src/requirePropFactory/requirePropFactory.test.tsx" name="requirePropFactory &gt; requireProp() &gt; requirePropValidator &gt; should not warn for propName not in props" time="0.000259959">
        </testcase>
        <testcase classname="packages/mui-utils/src/requirePropFactory/requirePropFactory.test.tsx" name="requirePropFactory &gt; requireProp() &gt; requirePropValidator &gt; should not warn for propName and requiredProp in props" time="0.000081834">
        </testcase>
        <testcase classname="packages/mui-utils/src/requirePropFactory/requirePropFactory.test.tsx" name="requirePropFactory &gt; requireProp() &gt; requirePropValidator &gt; propName is in props and requiredProp not in props &gt; should return Error" time="0.000158">
        </testcase>
        <testcase classname="packages/mui-utils/src/requirePropFactory/requirePropFactory.test.tsx" name="requirePropFactory &gt; requireProp() &gt; requirePropValidator &gt; propName is in props and requiredProp not in props &gt; propFullName given to validator &gt; returned error message should have propFullName" time="0.000121916">
        </testcase>
        <testcase classname="packages/mui-utils/src/requirePropFactory/requirePropFactory.test.tsx" name="requirePropFactory &gt; requireProp() &gt; requirePropValidator &gt; propName is in props and requiredProp not in props &gt; propFullName given to validator &gt; returned error message should not have propName" time="0.000058959">
        </testcase>
        <testcase classname="packages/mui-utils/src/requirePropFactory/requirePropFactory.test.tsx" name="requirePropFactory &gt; requireProp() &gt; requirePropValidator &gt; should work with chained proptypes coming from the default props" time="0.000183208">
        </testcase>
        <testcase classname="packages/mui-utils/src/requirePropFactory/requirePropFactory.test.tsx" name="requirePropFactory &gt; requireProp() &gt; requirePropValidator &gt; should validate default prop types coming from the component" time="0.000256875">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/resolveProps/resolveProps.test.ts" timestamp="2025-09-10T11:25:37.629Z" hostname="Jans-MacBook-Air.local" tests="13" failures="0" errors="0" skipped="0" time="0.005157125">
        <testcase classname="packages/mui-utils/src/resolveProps/resolveProps.test.ts" name="resolveProps &gt; use default props if no props" time="0.001403667">
        </testcase>
        <testcase classname="packages/mui-utils/src/resolveProps/resolveProps.test.ts" name="resolveProps &gt; use props if defined" time="0.000304667">
        </testcase>
        <testcase classname="packages/mui-utils/src/resolveProps/resolveProps.test.ts" name="resolveProps &gt; merge extra props" time="0.000137833">
        </testcase>
        <testcase classname="packages/mui-utils/src/resolveProps/resolveProps.test.ts" name="resolveProps &gt; use default props if prop value is undefined" time="0.000168292">
        </testcase>
        <testcase classname="packages/mui-utils/src/resolveProps/resolveProps.test.ts" name="resolveProps &gt; use props if default value is undefined" time="0.000200542">
        </testcase>
        <testcase classname="packages/mui-utils/src/resolveProps/resolveProps.test.ts" name="resolveProps &gt; null is a considered a valid value" time="0.000105583">
        </testcase>
        <testcase classname="packages/mui-utils/src/resolveProps/resolveProps.test.ts" name="resolveProps &gt; &quot;&quot; is a considered a valid value" time="0.000125583">
        </testcase>
        <testcase classname="packages/mui-utils/src/resolveProps/resolveProps.test.ts" name="resolveProps &gt; merge components and componentsProps props" time="0.000223333">
        </testcase>
        <testcase classname="packages/mui-utils/src/resolveProps/resolveProps.test.ts" name="resolveProps &gt; merge slots and slotProps props" time="0.000685083">
        </testcase>
        <testcase classname="packages/mui-utils/src/resolveProps/resolveProps.test.ts" name="resolveProps &gt; should not merge props that are not intended" time="0.000180042">
        </testcase>
        <testcase classname="packages/mui-utils/src/resolveProps/resolveProps.test.ts" name="resolveProps &gt; param: mergeClassNameAndStyle &gt; merge className and style props" time="0.000129167">
        </testcase>
        <testcase classname="packages/mui-utils/src/resolveProps/resolveProps.test.ts" name="resolveProps &gt; param: mergeClassNameAndStyle &gt; merge className props" time="0.0001045">
        </testcase>
        <testcase classname="packages/mui-utils/src/resolveProps/resolveProps.test.ts" name="resolveProps &gt; param: mergeClassNameAndStyle &gt; merge style props" time="0.0003275">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/setRef/setRef.test.ts" timestamp="2025-09-10T11:25:37.630Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.003499583">
        <testcase classname="packages/mui-utils/src/setRef/setRef.test.ts" name="setRef &gt; can handle callback refs" time="0.001605125">
        </testcase>
        <testcase classname="packages/mui-utils/src/setRef/setRef.test.ts" name="setRef &gt; can handle ref objects" time="0.000303917">
        </testcase>
        <testcase classname="packages/mui-utils/src/setRef/setRef.test.ts" name="setRef &gt; ignores falsy refs without errors" time="0.000081208">
        </testcase>
        <testcase classname="packages/mui-utils/src/setRef/setRef.test.ts" name="setRef &gt; throws on legacy string refs" time="0.0003195">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/unsupportedProp/unsupportedProp.test.ts" timestamp="2025-09-10T11:25:37.630Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.001868583">
        <testcase classname="packages/mui-utils/src/unsupportedProp/unsupportedProp.test.ts" name="unsupportedProp &gt; should return null for supported props" time="0.000890375">
        </testcase>
        <testcase classname="packages/mui-utils/src/unsupportedProp/unsupportedProp.test.ts" name="unsupportedProp &gt; should return an error for unsupported props" time="0.000423458">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/useControlled/useControlled.test.tsx" timestamp="2025-09-10T11:25:37.630Z" hostname="Jans-MacBook-Air.local" tests="8" failures="0" errors="0" skipped="0" time="0.029727917">
        <testcase classname="packages/mui-utils/src/useControlled/useControlled.test.tsx" name="useControlled &gt; works correctly when is not controlled" time="0.010982542">
        </testcase>
        <testcase classname="packages/mui-utils/src/useControlled/useControlled.test.tsx" name="useControlled &gt; works correctly when is controlled" time="0.002212125">
        </testcase>
        <testcase classname="packages/mui-utils/src/useControlled/useControlled.test.tsx" name="useControlled &gt; warns when switching from uncontrolled to controlled" time="0.002804291">
        </testcase>
        <testcase classname="packages/mui-utils/src/useControlled/useControlled.test.tsx" name="useControlled &gt; warns when switching from controlled to uncontrolled" time="0.002215209">
        </testcase>
        <testcase classname="packages/mui-utils/src/useControlled/useControlled.test.tsx" name="useControlled &gt; warns when changing the defaultValue prop after initial rendering &gt; should detect changes" time="0.001552209">
        </testcase>
        <testcase classname="packages/mui-utils/src/useControlled/useControlled.test.tsx" name="useControlled &gt; warns when changing the defaultValue prop after initial rendering &gt; should not warn when controlled" time="0.001474125">
        </testcase>
        <testcase classname="packages/mui-utils/src/useControlled/useControlled.test.tsx" name="useControlled &gt; warns when changing the defaultValue prop after initial rendering &gt; should not warn when NaN" time="0.001040542">
        </testcase>
        <testcase classname="packages/mui-utils/src/useControlled/useControlled.test.tsx" name="useControlled &gt; warns when changing the defaultValue prop after initial rendering &gt; should not warn when an array" time="0.006394">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/useId/useId.test.tsx" timestamp="2025-09-10T11:25:37.630Z" hostname="Jans-MacBook-Air.local" tests="5" failures="0" errors="0" skipped="0" time="0.036900875">
        <testcase classname="packages/mui-utils/src/useId/useId.test.tsx" name="useId &gt; returns the provided ID" time="0.021218375">
        </testcase>
        <testcase classname="packages/mui-utils/src/useId/useId.test.tsx" name="useId &gt; generates an ID if one isn&apos;t provided" time="0.004317875">
        </testcase>
        <testcase classname="packages/mui-utils/src/useId/useId.test.tsx" name="useId &gt; can be suffixed" time="0.00423475">
        </testcase>
        <testcase classname="packages/mui-utils/src/useId/useId.test.tsx" name="useId &gt; can be used in in IDREF attributes" time="0.003907875">
        </testcase>
        <testcase classname="packages/mui-utils/src/useId/useId.test.tsx" name="useId &gt; provides an ID on server in React 18" time="0.002205708">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/useForkRef/useForkRef.test.tsx" timestamp="2025-09-10T11:25:37.631Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.029042625">
        <testcase classname="packages/mui-utils/src/useForkRef/useForkRef.test.tsx" name="useForkRef &gt; returns a single ref-setter function that forks the ref to its inputs" time="0.0141">
        </testcase>
        <testcase classname="packages/mui-utils/src/useForkRef/useForkRef.test.tsx" name="useForkRef &gt; forks if only one of the branches requires a ref" time="0.005957333">
        </testcase>
        <testcase classname="packages/mui-utils/src/useForkRef/useForkRef.test.tsx" name="useForkRef &gt; does nothing if none of the forked branches requires a ref" time="0.00225375">
        </testcase>
        <testcase classname="packages/mui-utils/src/useForkRef/useForkRef.test.tsx" name="useForkRef &gt; changing refs &gt; handles changing from no ref to some ref" time="0.002190458">
        </testcase>
        <testcase classname="packages/mui-utils/src/useForkRef/useForkRef.test.tsx" name="useForkRef &gt; changing refs &gt; cleans up detached refs" time="0.001604292">
        </testcase>
        <testcase classname="packages/mui-utils/src/useForkRef/useForkRef.test.tsx" name="useForkRef &gt; calls clean up function if it exists" time="0.002013458">
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/useIsFocusVisible/useIsFocusVisible.test.tsx" timestamp="2025-09-10T11:25:37.631Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="1" time="0">
        <testcase classname="packages/mui-utils/src/useIsFocusVisible/useIsFocusVisible.test.tsx" name="useIsFocusVisible &gt; focus inside shadowRoot &gt; should set focus state for shadowRoot children" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="packages/mui-utils/src/useSlotProps/useSlotProps.test.tsx" timestamp="2025-09-10T11:25:37.631Z" hostname="Jans-MacBook-Air.local" tests="7" failures="0" errors="0" skipped="0" time="0.025743291">
        <testcase classname="packages/mui-utils/src/useSlotProps/useSlotProps.test.tsx" name="useSlotProps &gt; returns the provided slot props if no overrides are present" time="0.011368416">
        </testcase>
        <testcase classname="packages/mui-utils/src/useSlotProps/useSlotProps.test.tsx" name="useSlotProps &gt; calls getSlotProps with the external event handlers" time="0.00344175">
        </testcase>
        <testcase classname="packages/mui-utils/src/useSlotProps/useSlotProps.test.tsx" name="useSlotProps &gt; adds ownerState to props if the elementType is a component" time="0.002974875">
        </testcase>
        <testcase classname="packages/mui-utils/src/useSlotProps/useSlotProps.test.tsx" name="useSlotProps &gt; synchronizes refs provided by internal and external props" time="0.001652541">
        </testcase>
        <testcase classname="packages/mui-utils/src/useSlotProps/useSlotProps.test.tsx" name="useSlotProps &gt; constructs props from complex parameters" time="0.003368417">
        </testcase>
        <testcase classname="packages/mui-utils/src/useSlotProps/useSlotProps.test.tsx" name="useSlotProps &gt; should call externalSlotProps with ownerState if skipResolvingSlotProps is not provided" time="0.001061042">
        </testcase>
        <testcase classname="packages/mui-utils/src/useSlotProps/useSlotProps.test.tsx" name="useSlotProps &gt; should not call externalSlotProps if skipResolvingSlotProps is true" time="0.000911334">
        </testcase>
    </testsuite>
    <testsuite name="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" timestamp="2025-09-10T11:25:37.632Z" hostname="Jans-MacBook-Air.local" tests="22" failures="0" errors="0" skipped="0" time="0.01443675">
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should generate basic component API markdown" time="0.001897167">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should handle deprecated component" time="0.001235625">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should handle deprecated props" time="0.000690666">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should handle complex prop types" time="0.000506875">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should handle demos section" time="0.000383667">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should add origin to relative URLs in demos when origin option is provided" time="0.000190209">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should not modify absolute URLs when origin option is provided" time="0.000205792">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should handle slots section" time="0.000134542">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should handle classes section" time="0.000397125">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should handle inheritance" time="0.000138">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should add origin to inheritance URLs when origin option is provided" time="0.000191833">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should handle spread props" time="0.00007675">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should add origin to spread props inheritance URL when origin option is provided" time="0.000157917">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should handle ref forwarding" time="0.000072">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should handle components that cannot hold refs" time="0.000066084">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should handle theme default props" time="0.000887375">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should handle CSS component" time="0.000149834">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should handle source code section" time="0.000637833">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiJson &gt; should handle required props" time="0.000245375">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiFile &gt; should process API JSON file" time="0.002579708">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; processApiFile &gt; should process API JSON file with origin option" time="0.001185125">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processApi.test.ts" name="processApi &gt; HTML to Markdown conversion &gt; should convert HTML entities and tags correctly" time="0.000849375">
        </testcase>
    </testsuite>
    <testsuite name="packages-internal/scripts/generate-llms-txt/test/processComponent.test.ts" timestamp="2025-09-10T11:25:37.633Z" hostname="Jans-MacBook-Air.local" tests="9" failures="0" errors="0" skipped="0" time="0.012271541">
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processComponent.test.ts" name="generate-llms-txt &gt; replaceDemoWithSnippet &gt; should replace demo syntax with code snippet" time="0.003056792">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processComponent.test.ts" name="generate-llms-txt &gt; replaceDemoWithSnippet &gt; should handle white spaces in demo syntax" time="0.001026417">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processComponent.test.ts" name="generate-llms-txt &gt; replaceDemoWithSnippet &gt; should include only TS files" time="0.001376208">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processComponent.test.ts" name="generate-llms-txt &gt; replaceDemoWithSnippet &gt; should only include JS file when TS file does not exist" time="0.000794958">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processComponent.test.ts" name="generate-llms-txt &gt; replaceDemoWithSnippet &gt; should handle multiple demos in the same markdown" time="0.001597292">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processComponent.test.ts" name="generate-llms-txt &gt; replaceDemoWithSnippet &gt; should return original match when demo file is not found" time="0.000392917">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processComponent.test.ts" name="generate-llms-txt &gt; replaceDemoWithSnippet &gt; should handle demos with additional properties" time="0.000580792">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processComponent.test.ts" name="generate-llms-txt &gt; processMarkdownFile &gt; should process a markdown file correctly" time="0.001274083">
        </testcase>
        <testcase classname="packages-internal/scripts/generate-llms-txt/test/processComponent.test.ts" name="generate-llms-txt &gt; processMarkdownFile &gt; should handle nested directory structures" time="0.001265791">
        </testcase>
    </testsuite>
    <testsuite name="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" timestamp="2025-09-10T11:25:37.633Z" hostname="Jans-MacBook-Air.local" tests="28" failures="0" errors="0" skipped="0" time="1.678763542">
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; boolean-values-optional" time="0.101836583">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; boolean-values-required" time="0.016144667">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; code-order" time="0.089949583">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; component-type" time="0.012583875">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; default-value" time="0.01540025">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; generator-html-elements" time="0.015244958">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; generic" time="0.010277708">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; genericUnion" time="0.050195125">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; getThemeProps" time="0.107070625">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; injector-all-props-ignored" time="0.018270375">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; injector-should-include-component-based" time="0.026060291">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; injector-should-include-filename-based" time="0.037013916">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; injector-string-props" time="0.00880475">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; injector-whitelisted-props" time="0.014217375">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; interfaceUnion" time="0.016726417">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; jsdoc-interface" time="0.021320791">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; mixed-literals" time="0.0132795">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; omit-conditional" time="0.010883459">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; options-test" time="0.014417083">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; overloaded-function-component" time="0.045268708">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; partial-any-props" time="0.009608709">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; propTypes-casting" time="0.016215125">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; reconcile-prop-types" time="0.015334083">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; remove-proptypes" time="0.017607625">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; sort-unions" time="0.016551333">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; type-unknown" time="0.008918792">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; union-props" time="0.006868541">
        </testcase>
        <testcase classname="packages-internal/scripts/typescript-to-proptypes/test/typescript-to-proptypes.test.ts" name="typescript-to-proptypes &gt; unused-prop" time="0.00736775">
        </testcase>
    </testsuite>
    <testsuite name="docs/src/theming.test.tsx" timestamp="2025-09-10T11:25:37.634Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.155692917">
        <testcase classname="docs/src/theming.test.tsx" name="docs demo theming &gt; should inherit the theme.palette.mode from upper theme" time="0.121036375">
        </testcase>
        <testcase classname="docs/src/theming.test.tsx" name="docs demo theming &gt; able to render Joy components if upper theme of Joy UI is scoped" time="0.033739667">
        </testcase>
    </testsuite>
    <testsuite name="docs/src/modules/joy/generateThemeAugmentation.test.ts" timestamp="2025-09-10T11:25:37.634Z" hostname="Jans-MacBook-Air.local" tests="10" failures="0" errors="0" skipped="0" time="0.009975083">
        <testcase classname="docs/src/modules/joy/generateThemeAugmentation.test.ts" name="generateThemeAugmentation &gt; should not augment default tokens" time="0.003168542">
        </testcase>
        <testcase classname="docs/src/modules/joy/generateThemeAugmentation.test.ts" name="generateThemeAugmentation &gt; augment PalettePrimaryOverrides" time="0.00127325">
        </testcase>
        <testcase classname="docs/src/modules/joy/generateThemeAugmentation.test.ts" name="generateThemeAugmentation &gt; augment PaletteNeutralOverrides" time="0.0002905">
        </testcase>
        <testcase classname="docs/src/modules/joy/generateThemeAugmentation.test.ts" name="generateThemeAugmentation &gt; augment PaletteDangerOverrides" time="0.000087333">
        </testcase>
        <testcase classname="docs/src/modules/joy/generateThemeAugmentation.test.ts" name="generateThemeAugmentation &gt; augment PaletteSuccessOverrides" time="0.00007575">
        </testcase>
        <testcase classname="docs/src/modules/joy/generateThemeAugmentation.test.ts" name="generateThemeAugmentation &gt; augment PaletteWarningOverrides" time="0.000316916">
        </testcase>
        <testcase classname="docs/src/modules/joy/generateThemeAugmentation.test.ts" name="generateThemeAugmentation &gt; augment PaletteBackgroundOverrides" time="0.0005345">
        </testcase>
        <testcase classname="docs/src/modules/joy/generateThemeAugmentation.test.ts" name="generateThemeAugmentation &gt; augment PaletteCommonOverrides" time="0.000189208">
        </testcase>
        <testcase classname="docs/src/modules/joy/generateThemeAugmentation.test.ts" name="generateThemeAugmentation &gt; augment PaletteTextOverrides" time="0.000774083">
        </testcase>
        <testcase classname="docs/src/modules/joy/generateThemeAugmentation.test.ts" name="generateThemeAugmentation &gt; should augment new tokens" time="0.000240834">
        </testcase>
    </testsuite>
    <testsuite name="docs/src/modules/joy/literalToObject.test.ts" timestamp="2025-09-10T11:25:37.635Z" hostname="Jans-MacBook-Air.local" tests="1" failures="0" errors="0" skipped="0" time="0.002320084">
        <testcase classname="docs/src/modules/joy/literalToObject.test.ts" name="literalToObject &gt; should work with theme file" time="0.001630083">
        </testcase>
    </testsuite>
    <testsuite name="docs/src/modules/sandbox/CodeSandbox.test.js" timestamp="2025-09-10T11:25:37.635Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.007102417">
        <testcase classname="docs/src/modules/sandbox/CodeSandbox.test.js" name="CodeSandbox &gt; generate the correct JavaScript result" time="0.002714792">
        </testcase>
        <testcase classname="docs/src/modules/sandbox/CodeSandbox.test.js" name="CodeSandbox &gt; generate the correct TypeScript result" time="0.00149425">
        </testcase>
        <testcase classname="docs/src/modules/sandbox/CodeSandbox.test.js" name="CodeSandbox &gt; should generate the correct stylesheet font link in index.html for Material Two Tones icons" time="0.001946084">
        </testcase>
    </testsuite>
    <testsuite name="docs/src/modules/sandbox/Dependencies.test.js" timestamp="2025-09-10T11:25:37.635Z" hostname="Jans-MacBook-Air.local" tests="10" failures="0" errors="0" skipped="0" time="0.003818583">
        <testcase classname="docs/src/modules/sandbox/Dependencies.test.js" name="Dependencies &gt; should handle @ dependencies" time="0.001308416">
        </testcase>
        <testcase classname="docs/src/modules/sandbox/Dependencies.test.js" name="Dependencies &gt; should handle * dependencies" time="0.000249375">
        </testcase>
        <testcase classname="docs/src/modules/sandbox/Dependencies.test.js" name="Dependencies &gt; should support direct import" time="0.000169708">
        </testcase>
        <testcase classname="docs/src/modules/sandbox/Dependencies.test.js" name="Dependencies &gt; should support import for side effect" time="0.000092375">
        </testcase>
        <testcase classname="docs/src/modules/sandbox/Dependencies.test.js" name="Dependencies &gt; can collect required @types packages" time="0.000241083">
        </testcase>
        <testcase classname="docs/src/modules/sandbox/Dependencies.test.js" name="Dependencies &gt; should handle @types correctly" time="0.000127959">
        </testcase>
        <testcase classname="docs/src/modules/sandbox/Dependencies.test.js" name="Dependencies &gt; should handle multilines" time="0.000220167">
        </testcase>
        <testcase classname="docs/src/modules/sandbox/Dependencies.test.js" name="Dependencies &gt; should include core if lab present" time="0.000078625">
        </testcase>
        <testcase classname="docs/src/modules/sandbox/Dependencies.test.js" name="Dependencies &gt; can use codesandbox deploys if a commit is given" time="0.000259584">
        </testcase>
        <testcase classname="docs/src/modules/sandbox/Dependencies.test.js" name="Dependencies &gt; should not have . as a dependency" time="0.000231916">
        </testcase>
    </testsuite>
    <testsuite name="docs/src/modules/sandbox/StackBlitz.test.js" timestamp="2025-09-10T11:25:37.636Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.003289375">
        <testcase classname="docs/src/modules/sandbox/StackBlitz.test.js" name="StackBlitz &gt; generate the correct JavaScript result" time="0.001794542">
        </testcase>
        <testcase classname="docs/src/modules/sandbox/StackBlitz.test.js" name="StackBlitz &gt; generate the correct TypeScript result" time="0.000439834">
        </testcase>
        <testcase classname="docs/src/modules/sandbox/StackBlitz.test.js" name="StackBlitz &gt; should generate the correct stylesheet font link in index.html for Material Two Tones icons" time="0.000517667">
        </testcase>
    </testsuite>
    <testsuite name="docs/src/modules/utils/extractTemplates.test.js" timestamp="2025-09-10T11:25:37.636Z" hostname="Jans-MacBook-Air.local" tests="3" failures="0" errors="0" skipped="0" time="0.002534458">
        <testcase classname="docs/src/modules/utils/extractTemplates.test.js" name="extractTemplates &gt; get correct templates" time="0.001348583">
        </testcase>
        <testcase classname="docs/src/modules/utils/extractTemplates.test.js" name="extractTemplates &gt; extract correct template files" time="0.000379583">
        </testcase>
        <testcase classname="docs/src/modules/utils/extractTemplates.test.js" name="extractTemplates &gt; extract code variant" time="0.000179917">
        </testcase>
    </testsuite>
    <testsuite name="docs/src/modules/utils/findActivePage.test.js" timestamp="2025-09-10T11:25:37.636Z" hostname="Jans-MacBook-Air.local" tests="4" failures="0" errors="0" skipped="0" time="0.002704834">
        <testcase classname="docs/src/modules/utils/findActivePage.test.js" name="findActivePage &gt; old structure &gt; return first level page" time="0.001494166">
        </testcase>
        <testcase classname="docs/src/modules/utils/findActivePage.test.js" name="findActivePage &gt; old structure &gt; return nested page" time="0.000234333">
        </testcase>
        <testcase classname="docs/src/modules/utils/findActivePage.test.js" name="findActivePage &gt; old structure &gt; return deep nested page" time="0.000162667">
        </testcase>
        <testcase classname="docs/src/modules/utils/findActivePage.test.js" name="findActivePage &gt; new structure &gt; return deep nested page" time="0.000117125">
        </testcase>
    </testsuite>
    <testsuite name="docs/src/modules/utils/getProductInfoFromUrl.test.js" timestamp="2025-09-10T11:25:37.636Z" hostname="Jans-MacBook-Air.local" tests="12" failures="0" errors="0" skipped="0" time="0.007347041">
        <testcase classname="docs/src/modules/utils/getProductInfoFromUrl.test.js" name="getProductInfoFromUrl &gt; should handle Material UI" time="0.003238208">
        </testcase>
        <testcase classname="docs/src/modules/utils/getProductInfoFromUrl.test.js" name="getProductInfoFromUrl &gt; should ignore anchor" time="0.000362125">
        </testcase>
        <testcase classname="docs/src/modules/utils/getProductInfoFromUrl.test.js" name="getProductInfoFromUrl &gt; should handle MUI Base" time="0.000477375">
        </testcase>
        <testcase classname="docs/src/modules/utils/getProductInfoFromUrl.test.js" name="getProductInfoFromUrl &gt; should handle Joy UI" time="0.000185459">
        </testcase>
        <testcase classname="docs/src/modules/utils/getProductInfoFromUrl.test.js" name="getProductInfoFromUrl &gt; should handle MUI System" time="0.000464">
        </testcase>
        <testcase classname="docs/src/modules/utils/getProductInfoFromUrl.test.js" name="getProductInfoFromUrl &gt; should handle MUI X Data Drid" time="0.000142208">
        </testcase>
        <testcase classname="docs/src/modules/utils/getProductInfoFromUrl.test.js" name="getProductInfoFromUrl &gt; should handle MUI X Date Pickers" time="0.000167458">
        </testcase>
        <testcase classname="docs/src/modules/utils/getProductInfoFromUrl.test.js" name="getProductInfoFromUrl &gt; should handle MUI X" time="0.000197625">
        </testcase>
        <testcase classname="docs/src/modules/utils/getProductInfoFromUrl.test.js" name="getProductInfoFromUrl &gt; should return x" time="0.000204167">
        </testcase>
        <testcase classname="docs/src/modules/utils/getProductInfoFromUrl.test.js" name="getProductInfoFromUrl &gt; should return uncategorized" time="0.000124834">
        </testcase>
        <testcase classname="docs/src/modules/utils/getProductInfoFromUrl.test.js" name="getProductInfoFromUrl &gt; should handle Toolpad Core" time="0.000085208">
        </testcase>
        <testcase classname="docs/src/modules/utils/getProductInfoFromUrl.test.js" name="getProductInfoFromUrl &gt; should handle Toolpad Studio" time="0.000078834">
        </testcase>
    </testsuite>
    <testsuite name="docs/src/modules/utils/helpers.test.js" timestamp="2025-09-10T11:25:37.637Z" hostname="Jans-MacBook-Air.local" tests="2" failures="0" errors="0" skipped="0" time="0.006506458">
        <testcase classname="docs/src/modules/utils/helpers.test.js" name="docs getDependencies helpers &gt; should return correct title" time="0.004209167">
        </testcase>
        <testcase classname="docs/src/modules/utils/helpers.test.js" name="docs getDependencies helpers &gt; should remove `react-` prefix" time="0.000321167">
        </testcase>
    </testsuite>
    <testsuite name="docs/src/modules/utils/replaceMarkdownLinks.test.js" timestamp="2025-09-10T11:25:37.637Z" hostname="Jans-MacBook-Air.local" tests="6" failures="0" errors="0" skipped="0" time="0.002615708">
        <testcase classname="docs/src/modules/utils/replaceMarkdownLinks.test.js" name="replaceMarkdownLinks &gt; replace material related links" time="0.000876125">
        </testcase>
        <testcase classname="docs/src/modules/utils/replaceMarkdownLinks.test.js" name="replaceMarkdownLinks &gt; should not change if links have been updated" time="0.000265958">
        </testcase>
        <testcase classname="docs/src/modules/utils/replaceMarkdownLinks.test.js" name="replaceMarkdownLinks &gt; replace correct component links" time="0.000357584">
        </testcase>
        <testcase classname="docs/src/modules/utils/replaceMarkdownLinks.test.js" name="replaceMarkdownLinks &gt; should do nothing if the components have updated" time="0.000103166">
        </testcase>
        <testcase classname="docs/src/modules/utils/replaceMarkdownLinks.test.js" name="replaceMarkdownLinks &gt; replace correct API links" time="0.000241333">
        </testcase>
        <testcase classname="docs/src/modules/utils/replaceMarkdownLinks.test.js" name="replaceMarkdownLinks &gt; should do nothing if the APIs have updated" time="0.000081042">
        </testcase>
    </testsuite>
</testsuites>
