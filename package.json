{
  "name": "@mui/monorepo",
  "version": "7.3.1",
  "private": true,
  "scripts": {
    "preinstall": "npx only-allow pnpm",
    "proptypes": "tsx ./scripts/generateProptypes.ts",
    "deduplicate": "pnpm dedupe",
    "build": "lerna run build --ignore docs",
    "build:ci": "lerna run build --ignore docs --ignore @app/pigment-css-next-app --concurrency 8 --skip-nx-cache",
    "build:public": "lerna run --no-private build",
    "build:public:ci": "lerna run --no-private build --concurrency 8 --skip-nx-cache",
    "build:codesandbox": "NODE_OPTIONS=\"--max_old_space_size=4096\" lerna run --concurrency 8 --scope \"@mui/*\" --scope \"@mui-internal/*\" --no-private build",
    "pkg-pr-new-packages": "node -e \"console.log(Object.values(require('./.codesandbox/ci.json').publishDirectory).join(' '))\"",
    "pkg-pr-new-release": "pnpm dlx pkg-pr-new publish $(pnpm -s pkg-pr-new-packages) --template './examples/*' --comment=off --peerDeps",
    "release:version": "lerna version --no-changelog --no-push --no-git-tag-version --no-private --force-publish=@mui/core-downloads-tracker",
    "release:build": "lerna run --concurrency 8 --no-private build --skip-nx-cache",
    "release:changelog": "node scripts/releaseChangelog.mjs",
    "release:publish": "pnpm publish --recursive --tag latest",
    "release:publish:dry-run": "pnpm publish --recursive --tag latest --registry=\"http://localhost:4873/\"",
    "release:tag": "node scripts/releaseTag.mjs",
    "release:pack": "tsx scripts/releasePack.mts",
    "docs:api": "rimraf --glob ./docs/pages/**/api-docs ./docs/pages/**/api && pnpm docs:api:build",
    "docs:api:build": "tsx ./scripts/buidApiDocs/index.ts",
    "docs:llms:build": "rimraf --glob ./docs/public/material-ui/ && tsx ./scripts/buildLlmsDocs/index.ts --projectSettings ./packages/api-docs-builder-core/materialUi/projectSettings.ts",
    "docs:build": "pnpm docs:llms:build && pnpm --filter docs build",
    "docs:build-sw": "pnpm --filter docs build-sw",
    "docs:build-color-preview": "babel-node scripts/buildColorTypes",
    "docs:deploy": "pnpm --filter docs run deploy",
    "docs:dev": "pnpm --filter docs dev",
    "docs:icons": "pnpm --filter docs icons",
    "docs:size-why": "cross-env DOCS_STATS_ENABLED=true pnpm docs:build",
    "docs:start": "pnpm --filter docs start",
    "docs:create-playground": "pnpm --filter docs create-playground",
    "docs:i18n": "cross-env BABEL_ENV=development babel-node --extensions \".tsx,.ts,.js\" ./docs/scripts/i18n.ts",
    "docs:link-check": "pnpm --filter docs link-check",
    "docs:typescript": "pnpm docs:typescript:formatted --watch",
    "docs:typescript:check": "pnpm --filter docs typescript",
    "docs:typescript:formatted": "tsx ./docs/scripts/formattedTSDemos",
    "docs:sync-team": "tsx ./docs/scripts/syncTeamMembers.ts && pnpm prettier",
    "docs:mdicons:synonyms": "cross-env BABEL_ENV=development babel-node --extensions \".tsx,.ts,.js,.mjs\" ./docs/scripts/updateIconSynonyms && pnpm prettier",
    "docs:zipRules": "cd docs && rm mui-vale.zip && zip -r mui-vale.zip mui-vale && cd ../ && pnpm vale sync",
    "extract-error-codes": "cross-env MUI_EXTRACT_ERROR_CODES=true lerna run --concurrency 1 build:stable",
    "template:screenshot": "cross-env BABEL_ENV=development babel-node --extensions \".tsx,.ts,.js\" ./docs/scripts/generateTemplateScreenshots",
    "install:codesandbox": "pnpm install --no-frozen-lockfile",
    "jsonlint": "code-infra jsonlint",
    "eslint": "eslint . --cache --report-unused-disable-directives --ext .js,.ts,.tsx --max-warnings 0",
    "eslint:ci": "eslint . --report-unused-disable-directives --ext .js,.ts,.tsx --max-warnings 0",
    "stylelint": "stylelint --reportInvalidScopeDisables --reportNeedlessDisables \"docs/**/*.?(c|m)[jt]s?(x)\" --ignore-path .gitignore",
    "markdownlint": "markdownlint-cli2 \"**/*.md\"",
    "valelint": "pnpm vale sync && git ls-files | grep -h \".md$\" | xargs pnpm vale --filter='.Level==\"error\"'",
    "prettier": "pretty-quick --ignore-path .lintignore --branch master",
    "prettier:all": "prettier --write . --ignore-path .lintignore",
    "size:snapshot": "pnpm -F ./test/bundle-size check",
    "size:why": "pnpm size:snapshot --analyze --accurateBundles",
    "start": "pnpm install && pnpm docs:dev",
    "test": "node scripts/test.mjs",
    "tc": "nx run nx_test_tc",
    "test:attw": "pnpm run --parallel -r attw",
    "test:extended": "pnpm eslint && pnpm typescript && pnpm test:coverage",
    "test:coverage": "nx run nx_test_coverage",
    "test:coverage:ci": "nx run nx_test_coverage_ci",
    "test:coverage:html": "nx run nx_test_coverage_html",
    "test:e2e": "cross-env NODE_ENV=production pnpm test:e2e:build && concurrently --success first --kill-others \"pnpm test:e2e:run\" \"pnpm test:e2e:server\"",
    "test:e2e:build": "nx run nx_test_e2e_build",
    "test:e2e:dev": "concurrently \"pnpm test:e2e:build --watch\" \"pnpm test:e2e:server\"",
    "test:e2e:run": "nx run nx_test_e2e_run",
    "test:e2e:server": "serve test/e2e -p 5001",
    "test:e2e-website": "playwright test test/e2e-website --config test/e2e-website/playwright.config.ts",
    "test:e2e-website:dev": "cross-env PLAYWRIGHT_TEST_BASE_URL=http://localhost:3000 playwright test test/e2e-website --config test/e2e-website/playwright.config.ts",
    "test:karma": "nx run nx_test_karma",
    "test:karma:profile": "nx run nx_test_karma_profile",
    "test:regressions": "cross-env NODE_ENV=production pnpm test:regressions:build && concurrently --success first --kill-others \"pnpm test:regressions:run\" \"pnpm test:regressions:server\"",
    "test:regressions:build": "vite build test/regressions",
    "test:regressions:dev": "vite test/regressions --port 5001",
    "test:regressions:run": "nx run nx_test_regressions_run",
    "test:regressions:server": "vite preview test/regressions --port 5001",
    "test:regressions-pigment-css": "cross-env NODE_ENV=production pnpm test:regressions-pigment-css:build && concurrently --success first --kill-others \"pnpm test:regressions-pigment-css:run\" \"pnpm test:regressions-pigment-css:server\"",
    "test:regressions-pigment-css:build": "pnpm --filter @app/pigment-css-vite-app run build",
    "test:regressions-pigment-css:dev": "concurrently \"pnpm test:regressions-pigment-css:build --watch\" \"pnpm test:regressions-pigment-css:server\"",
    "test:regressions-pigment-css:run": "nx run nx_test_regressions_pigment_css_run",
    "test:regressions-pigment-css:server": "pnpm --filter @app/pigment-css-vite-app run preview --port 5001",
    "test:unit": "nx run nx_test_unit",
    "test:argos": "code-infra argos-push --folder test/regressions/screenshots/chrome",
    "typescript": "lerna run --no-bail typescript",
    "typescript:ci": "lerna run --concurrency 1 --no-bail typescript",
    "use-react-version": "node ./scripts/useReactVersion.mjs",
    "validate-declarations": "tsx scripts/validateTypescriptDeclarations.mts",
    "generate-codeowners": "node scripts/generateCodeowners.mjs",
    "canary:release": "tsx ./scripts/canaryRelease.mts",
    "nx_test_tc": "node test/cli.js",
    "nx_test_coverage_ci": "cross-env NODE_ENV=test BABEL_ENV=coverage nyc --reporter=lcov mocha \"packages/**/*.test.?(c|m)[jt]s?(x)\" \"packages-internal/**/*.test.?(c|m)[jt]s?(x)\" \"docs/**/*.test.?(c|m)[jt]s?(x)\"",
    "nx_test_coverage_html": "cross-env NODE_ENV=test BABEL_ENV=coverage nyc --reporter=html mocha \"packages/**/*.test.?(c|m)[jt]s?(x)\" \"packages-internal/**/*.test.?(c|m)[jt]s?(x)\" \"docs/**/*.test.?(c|m)[jt]s?(x)\"",
    "nx_test_coverage": "cross-env NODE_ENV=test BABEL_ENV=coverage nyc --reporter=text mocha \"packages/**/*.test.?(c|m)[jt]s?(x)\" \"packages-internal/**/*.test.?(c|m)[jt]s?(x)\" \"docs/**/*.test.?(c|m)[jt]s?(x)\"",
    "nx_test_e2e_build": "webpack --config test/e2e/webpack.config.js",
    "nx_test_e2e_run": "mocha --config test/e2e/.mocharc.js \"test/e2e/**/*.test.?(c|m)[jt]s?(x)\"",
    "nx_test_karma_profile": "cross-env NODE_ENV=test karma start test/karma.conf.profile.js",
    "nx_test_karma": "cross-env NODE_ENV=test karma start test/karma.conf.js",
    "nx_test_regressions_run": "mocha --config test/regressions/.mocharc.js --delay 'test/regressions/**/*.test.js'",
    "nx_test_regressions_pigment_css_run": "mocha --config apps/pigment-css-vite-app/.mocharc.cjs --delay 'apps/pigment-css-vite-app/**/*.test.js'",
    "clean": "pnpm -r exec rm -rf build",
    "nx_test_unit": "cross-env NODE_ENV=test mocha \"packages/**/*.test.?(c|m)[jt]s?(x)\" \"packages-internal/**/*.test.?(c|m)[jt]s?(x)\" \"docs/**/*.test.?(c|m)[jt]s?(x)\""
  },
  "dependencies": {
    "@netlify/functions": "^4.2.1",
    "@slack/bolt": "^4.4.0",
    "babel-plugin-transform-import-meta": "^2.3.3",
    "execa": "^9.6.0"
  },
  "devDependencies": {
    "@arethetypeswrong/cli": "^0.18.2",
    "@babel/cli": "^7.28.3",
    "@babel/core": "^7.28.3",
    "@babel/node": "^7.28.0",
    "@babel/plugin-transform-react-constant-elements": "^7.27.1",
    "@mui-internal/api-docs-builder": "workspace:^",
    "@mui-internal/api-docs-builder-core": "workspace:^",
    "@mui/internal-babel-plugin-minify-errors": "^2.0.8-canary.4",
    "@mui/internal-bundle-size-checker": "^1.0.9-canary.18",
    "@mui/internal-code-infra": "^0.0.2-canary.32",
    "@mui/internal-docs-utils": "workspace:^",
    "@mui/internal-scripts": "workspace:^",
    "@mui/internal-test-utils": "workspace:^",
    "@mui/joy": "workspace:*",
    "@mui/material": "workspace:^",
    "@mui/utils": "workspace:^",
    "@next/eslint-plugin-next": "^15.4.6",
    "@octokit/rest": "^22.0.0",
    "@pigment-css/react": "0.0.30",
    "@playwright/test": "1.54.2",
    "@types/babel__core": "^7.20.5",
    "@types/babel__register": "^7.17.3",
    "@types/fs-extra": "^11.0.4",
    "@types/lodash": "^4.17.20",
    "@types/mocha": "^10.0.10",
    "@types/node": "^20.19.11",
    "@types/react": "^19.1.10",
    "@types/yargs": "^17.0.33",
    "@vitejs/plugin-react": "^4.7.0",
    "@vitest/browser": "^3.2.4",
    "@vitest/coverage-v8": "^3.2.4",
    "@vvago/vale": "^3.12.0",
    "babel-loader": "^10.0.0",
    "babel-plugin-istanbul": "^7.0.0",
    "babel-plugin-module-resolver": "^5.0.2",
    "chalk": "^5.5.0",
    "compression-webpack-plugin": "^11.1.0",
    "concurrently": "^9.2.0",
    "cpy-cli": "^6.0.0",
    "cross-env": "^10.0.0",
    "danger": "^13.0.4",
    "eslint": "^9.33.0",
    "eslint-import-resolver-webpack": "^0.13.10",
    "eslint-plugin-consistent-default-export-name": "^0.0.15",
    "eslint-plugin-react": "^7.37.5",
    "fast-glob": "^3.3.3",
    "fs-extra": "^11.3.1",
    "git-url-parse": "^16.1.0",
    "globby": "^14.1.0",
    "jsonc-parser": "^3.3.1",
    "karma": "^6.4.4",
    "karma-browserstack-launcher": "~1.6.0",
    "karma-chrome-launcher": "^3.2.0",
    "karma-coverage-istanbul-reporter": "^3.0.3",
    "karma-firefox-launcher": "^2.1.3",
    "karma-mocha": "^2.0.1",
    "karma-sourcemap-loader": "^0.4.0",
    "karma-webpack": "^5.0.0",
    "lerna": "^8.2.3",
    "lodash": "^4.17.21",
    "markdownlint-cli2": "^0.18.1",
    "mocha": "^11.7.1",
    "nx": "^20.8.2",
    "nyc": "^17.1.0",
    "piscina": "^5.1.3",
    "postcss-styled-syntax": "^0.7.1",
    "prettier": "^3.6.2",
    "pretty-quick": "^4.2.2",
    "process": "^0.11.10",
    "react": "^19.1.1",
    "rimraf": "^6.0.1",
    "serve": "^14.2.4",
    "stylelint": "^16.23.1",
    "stylelint-config-standard": "^38.0.0",
    "terser-webpack-plugin": "^5.3.14",
    "tsconfig-paths-webpack-plugin": "^4.2.0",
    "tsx": "^4.20.4",
    "typescript": "^5.9.2",
    "vite": "^6.3.5",
    "vitest": "^3.2.4",
    "vitest-fail-on-console": "^0.9.0",
    "webpack": "^5.101.3",
    "webpack-bundle-analyzer": "^4.10.2",
    "webpack-cli": "^6.0.1",
    "yargs": "^17.7.2"
  },
  "packageManager": "pnpm@10.14.0",
  "engines": {
    "pnpm": "10.14.0"
  },
  "resolutions": {
    "@babel/core": "^7.28.3",
    "@babel/plugin-transform-runtime": "^7.28.3",
    "@babel/preset-env": "^7.28.3",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@babel/runtime": "^7.28.3",
    "@definitelytyped/header-parser": "^0.2.20",
    "@definitelytyped/typescript-versions": "^0.1.9",
    "@definitelytyped/utils": "^0.1.8",
    "@types/node": "^20.19.11",
    "cross-fetch": "^4.1.0",
    "@pigment-css/react": "0.0.30",
    "@pigment-css/unplugin": "0.0.30",
    "@pigment-css/nextjs-plugin": "0.0.30",
    "@pigment-css/vite-plugin": "0.0.30"
  },
  "nyc": {
    "include": [
      "packages/mui*/src/**/*.?(c|m)[jt]s?(x)"
    ],
    "exclude": [
      "**/*.test.?(c|m)[jt]s?(x)",
      "**/*.test/*"
    ],
    "sourceMap": false,
    "instrument": false
  },
  "nx": {
    "targets": {
      "nx_test_tc": {
        "dependsOn": [
          "@mui/internal-test-utils:build"
        ]
      },
      "nx_test_unit": {
        "dependsOn": [
          "@mui/internal-test-utils:build"
        ]
      },
      "nx_test_karma": {
        "dependsOn": [
          "@mui/internal-test-utils:build"
        ]
      },
      "nx_test_karma_profile": {
        "dependsOn": [
          "@mui/internal-test-utils:build"
        ]
      },
      "nx_test_coverage": {
        "dependsOn": [
          "@mui/internal-test-utils:build"
        ]
      },
      "nx_test_coverage_ci": {
        "dependsOn": [
          "@mui/internal-test-utils:build"
        ]
      },
      "nx_test_coverage_html": {
        "dependsOn": [
          "@mui/internal-test-utils:build"
        ]
      },
      "nx_test_regressions_run": {
        "dependsOn": [
          "@mui/internal-test-utils:build"
        ]
      },
      "nx_test_e2e_build": {
        "dependsOn": [
          "@mui/internal-test-utils:build"
        ]
      },
      "nx_test_e2e_run": {
        "dependsOn": [
          "@mui/internal-test-utils:build"
        ]
      }
    }
  }
}
