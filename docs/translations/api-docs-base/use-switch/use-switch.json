{
  "hookDescription": "The basic building block for creating custom switches.",
  "parametersDescriptions": {
    "checked": { "description": "If <code>true</code>, the component is checked." },
    "defaultChecked": {
      "description": "The default checked state. Use when the component is not controlled."
    },
    "disabled": { "description": "If <code>true</code>, the component is disabled." },
    "onChange": { "description": "Callback fired when the state is changed." },
    "readOnly": { "description": "If <code>true</code>, the component is read only." },
    "required": {
      "description": "If <code>true</code>, the <code>input</code> element is required."
    }
  },
  "returnValueDescriptions": {
    "checked": { "description": "If <code>true</code>, the component will be checked." },
    "disabled": { "description": "If <code>true</code>, the component will be disabled." },
    "focusVisible": {
      "description": "If <code>true</code>, it indicates that the component is being focused using keyboard."
    },
    "getInputProps": { "description": "Resolver for the input slot&#39;s props." },
    "inputRef": { "description": "Ref to the input slot&#39;s DOM node." },
    "readOnly": { "description": "If <code>true</code>, the component will be read only." }
  }
}
