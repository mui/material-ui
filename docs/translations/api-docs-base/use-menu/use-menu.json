{
  "hookDescription": "",
  "parametersDescriptions": {
    "autoFocus": {
      "description": "If <code>true</code> (Default) will focus the highligted item. If you set this prop to <code>false</code> the focus will not be moved inside the Menu component. This has severe accessibility implications and should only be considered if you manage focus otherwise."
    },
    "componentName": {
      "description": "The name of the component using useMenu. For debugging purposes."
    },
    "disabledItemsFocusable": {
      "description": "If <code>true</code>, it will be possible to highlight disabled items."
    },
    "disableListWrap": {
      "description": "If <code>true</code>, the highlight will not wrap around the list if arrow keys are used."
    },
    "id": { "description": "The id of the menu. If not provided, it will be generated." },
    "listboxRef": { "description": "The ref to the menu&#39;s listbox node." },
    "onItemsChange": { "description": "Callback fired when the menu items change." }
  },
  "returnValueDescriptions": {
    "contextValue": { "description": "The value to be passed into the MenuProvider." },
    "dispatch": {
      "description": "Action dispatcher for the menu component. Allows to programmatically control the menu."
    },
    "getListboxProps": { "description": "Resolver for the listbox slot&#39;s props." },
    "highlightedValue": { "description": "The highlighted option in the menu listbox." },
    "listboxRef": { "description": "The ref to the menu&#39;s listbox node." },
    "menuItems": { "description": "Items in the menu listbox." },
    "open": { "description": "If <code>true</code>, the menu is open." },
    "triggerElement": { "description": "An element that triggers the visibility of the menu." }
  }
}
