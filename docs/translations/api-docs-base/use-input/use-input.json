{
  "hookDescription": "",
  "parametersDescriptions": {
    "defaultValue": {
      "description": "The default value. Use when the component is not controlled."
    },
    "disabled": {
      "description": "If <code>true</code>, the component is disabled. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."
    },
    "error": {
      "description": "If <code>true</code>, the <code>input</code> will indicate an error by setting the <code>aria-invalid</code> attribute. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."
    },
    "required": {
      "description": "If <code>true</code>, the <code>input</code> element is required. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."
    }
  },
  "returnValueDescriptions": {
    "disabled": { "description": "If <code>true</code>, the component will be disabled." },
    "error": {
      "description": "If <code>true</code>, the <code>input</code> will indicate an error by setting the <code>aria-invalid</code> attribute."
    },
    "focused": { "description": "If <code>true</code>, the <code>input</code> will be focused." },
    "formControlContext": {
      "description": "Return value from the <code>useFormControlContext</code> hook."
    },
    "getInputProps": { "description": "Resolver for the input slot&#39;s props." },
    "getRootProps": { "description": "Resolver for the root slot&#39;s props." },
    "required": {
      "description": "If <code>true</code>, the <code>input</code> will indicate that it&#39;s required."
    },
    "value": { "description": "The <code>value</code> of the <code>input</code> element." }
  }
}
