{
  "hookDescription": "",
  "parametersDescriptions": {
    "children": { "description": "A single child content element." },
    "closeAfterTransition": {
      "description": "When set to true the Modal waits until a nested Transition is completed before closing."
    },
    "container": {
      "description": "An HTML element or function that returns one. The <code>container</code> will have the portal children appended to it.<br>You can also provide a callback, which is called in a React layout effect. This lets you set the container from a ref, and also makes server-side rendering possible.<br>By default, it uses the body of the top-level document object, so it&#39;s simply <code>document.body</code> most of the time."
    },
    "disableEscapeKeyDown": {
      "description": "If <code>true</code>, hitting escape will not fire the <code>onClose</code> callback."
    },
    "disableScrollLock": { "description": "Disable the scroll lock behavior." },
    "onClose": {
      "description": "Callback fired when the component requests to be closed. The <code>reason</code> parameter can optionally be used to control the response to <code>onClose</code>."
    },
    "onTransitionEnter": { "description": "A function called when a transition enters." },
    "onTransitionExited": { "description": "A function called when a transition has exited." },
    "open": { "description": "If <code>true</code>, the component is shown." }
  },
  "returnValueDescriptions": {
    "exited": {
      "description": "If <code>true</code>, the exiting transition finished (to be used for unmounting the component)."
    },
    "getBackdropProps": { "description": "Resolver for the backdrop slot&#39;s props." },
    "getRootProps": { "description": "Resolver for the root slot&#39;s props." },
    "getTransitionProps": { "description": "Resolver for the transition related props." },
    "hasTransition": {
      "description": "If <code>true</code>, the component&#39;s child is transition component."
    },
    "isTopModal": { "description": "If <code>true</code>, the modal is the top most one." },
    "portalRef": { "description": "A ref to the component&#39;s portal DOM element." },
    "rootRef": { "description": "A ref to the component&#39;s root DOM element." }
  }
}
