{
  "hookDescription": "",
  "parametersDescriptions": {
    "disabled": { "description": "If <code>true</code>, the tab will be disabled." },
    "id": {
      "description": "The id of the tab. If not provided, it will be automatically generated."
    },
    "onChange": { "description": "Callback invoked when new value is being set." },
    "onClick": { "description": "Callback fired when the tab is clicked." },
    "rootRef": { "description": "Ref to the root slot&#39;s DOM element." },
    "value": {
      "description": "The value of the tab. It&#39;s used to associate the tab with a tab panel(s) with the same value. If the value is not provided, it falls back to the position index."
    }
  },
  "returnValueDescriptions": {
    "active": {
      "description": "If <code>true</code>, the tab is active (as in <code>:active</code> pseudo-class; in other words, pressed)."
    },
    "focusVisible": {
      "description": "If <code>true</code>, the tab has visible focus. This is a workaround for browsers that do not support this feature natively."
    },
    "getRootProps": { "description": "Resolver for the root slot&#39;s props." },
    "highlighted": { "description": "If <code>true</code>, the tab is highlighted." },
    "index": { "description": "0-based index of the tab in the list of tabs." },
    "rootRef": { "description": "Ref to the root slot&#39;s DOM element." },
    "selected": { "description": "If <code>true</code>, the tab is selected." },
    "setFocusVisible": {
      "description": "Sets the focus-visible state of the tab. This is a workaround for browsers that do not support this feature natively."
    },
    "totalTabsCount": {
      "description": "Total number of tabs in the nearest parent TabsList. This can be used to determine if the tab is the last one to style it accordingly."
    }
  }
}
