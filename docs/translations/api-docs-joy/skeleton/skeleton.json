{
  "componentDescription": "",
  "propDescriptions": {
    "animation": {
      "description": "The animation. If <code>false</code> the animation effect is disabled."
    },
    "children": {
      "description": "Used to render icon or text elements inside the Skeleton if <code>src</code> is not set. This can be an element, or just a string."
    },
    "component": {
      "description": "The component used for the root node. Either a string to use a HTML element or a component."
    },
    "height": {
      "description": "Height of the skeleton. Useful when you don&#39;t want to adapt the skeleton to a text element but for instance a card."
    },
    "level": { "description": "Applies the theme typography styles." },
    "loading": { "description": "If <code>true</code>, the skeleton appears." },
    "overlay": {
      "description": "If <code>true</code>, the skeleton&#39;s position will change to <code>absolute</code> to fill the available space of the nearest parent. This prop is useful to create a placeholder that has the element&#39;s dimensions."
    },
    "slotProps": { "description": "The props used for each slot inside." },
    "slots": { "description": "The components used for each slot inside." },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles."
    },
    "variant": { "description": "The type of content that will be rendered." },
    "width": {
      "description": "Width of the skeleton. Useful when the skeleton is inside an inline element with no width of its own."
    }
  },
  "classDescriptions": {
    "body-lg": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"body-lg\"</code>"
    },
    "body-md": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"body-md\"</code>"
    },
    "body-sm": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"body-sm\"</code>"
    },
    "body-xs": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"body-xs\"</code>"
    },
    "h1": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"h1\"</code>"
    },
    "h2": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"h2\"</code>"
    },
    "h3": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"h3\"</code>"
    },
    "h4": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"h4\"</code>"
    },
    "title-lg": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"title-lg\"</code>"
    },
    "title-md": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"title-md\"</code>"
    },
    "title-sm": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>level=\"title-sm\"</code>"
    },
    "variantCircular": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"circular\"</code>"
    },
    "variantInline": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"inline\"</code>"
    },
    "variantOverlay": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"overlay\"</code>"
    },
    "variantRectangular": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"rectangular\"</code>"
    },
    "variantText": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"text\"</code>"
    }
  },
  "slotDescriptions": { "root": "The component that renders the root." }
}
