{
  "componentDescription": "",
  "propDescriptions": {
    "active": {
      "description": "If <code>true</code>, the active className is appended. You can customize the active state from the Stepper&#39;s <code>sx</code> prop."
    },
    "children": {
      "description": "Used to render icon or text elements inside the Step if <code>src</code> is not set. This can be an element, or just a string."
    },
    "completed": {
      "description": "If <code>true</code>, the completed className is appended. You can customize the active state from the Stepper&#39;s <code>sx</code> prop."
    },
    "component": {
      "description": "The component used for the root node. Either a string to use a HTML element or a component."
    },
    "disabled": {
      "description": "If <code>true</code>, the active className is appended. You can customize the active state from the Stepper&#39;s <code>sx</code> prop."
    },
    "indicator": {
      "description": "The indicator to display. If provided, a wrapper element will be used."
    },
    "orientation": { "description": "The component orientation." },
    "slotProps": { "description": "The props used for each slot inside." },
    "slots": { "description": "The components used for each slot inside." },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles."
    }
  },
  "classDescriptions": {
    "active": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>active</code> is true"
    },
    "completed": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>completed</code> is true"
    },
    "disabled": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>disabled</code> is true"
    },
    "horizontal": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>orientation=\"horizontal\"</code>"
    },
    "vertical": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>orientation=\"vertical\"</code>"
    }
  },
  "slotDescriptions": {
    "indicator": "The component that renders the indicator.",
    "root": "The component that renders the root."
  }
}
