{
  "componentDescription": "",
  "propDescriptions": {
    "accordionId": {
      "description": "The id to be used in the AccordionDetails which is controlled by the AccordionSummary. If not provided, the id is autogenerated."
    },
    "children": {
      "description": "Used to render icon or text elements inside the Accordion if <code>src</code> is not set. This can be an element, or just a string."
    },
    "color": {
      "description": "The color of the component. It supports those theme colors that make sense for this component."
    },
    "component": {
      "description": "The component used for the root node. Either a string to use a HTML element or a component."
    },
    "defaultExpanded": { "description": "If <code>true</code>, expands the accordion by default." },
    "disabled": { "description": "If <code>true</code>, the component is disabled." },
    "expanded": {
      "description": "If <code>true</code>, expands the accordion, otherwise collapse it. Setting this prop enables control over the accordion."
    },
    "onChange": {
      "description": "Callback fired when the expand/collapse state is changed.",
      "typeDescriptions": {
        "event": {
          "name": "event",
          "description": "The event source of the callback. <strong>Warning</strong>: This is a generic event not a change event."
        },
        "expanded": {
          "name": "expanded",
          "description": "The <code>expanded</code> state of the accordion."
        }
      }
    },
    "slotProps": { "description": "The props used for each slot inside." },
    "slots": { "description": "The components used for each slot inside." },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles."
    },
    "variant": {
      "description": "The <a href=\"https://mui.com/joy-ui/main-features/global-variants/\">global variant</a> to use."
    }
  },
  "classDescriptions": {
    "disabled": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>disabled</code> is true"
    },
    "expanded": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>expanded</code> is true"
    }
  },
  "slotDescriptions": { "root": "The component that renders the root." }
}
