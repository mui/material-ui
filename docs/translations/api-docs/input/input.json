{
  "componentDescription": "",
  "propDescriptions": {
    "autoComplete": {
      "description": "This prop helps users to fill forms faster, especially on mobile devices. The name can be confusing, as it&#39;s more like an autofill. You can learn more about it <a href=\"https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\">following the specification</a>."
    },
    "autoFocus": {
      "description": "If <code>true</code>, the <code>input</code> element is focused during the first mount."
    },
    "classes": { "description": "Override or extend the styles applied to the component." },
    "color": {
      "description": "The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\"https://mui.com/material-ui/customization/palette/#custom-colors\">palette customization guide</a>. The prop defaults to the value (<code>&#39;primary&#39;</code>) inherited from the parent FormControl component."
    },
    "components": { "description": "The components used for each slot inside." },
    "componentsProps": {
      "description": "The extra props for the slot components. You can override the existing props or add new ones."
    },
    "defaultValue": {
      "description": "The default value. Use when the component is not controlled."
    },
    "disabled": {
      "description": "If <code>true</code>, the component is disabled. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."
    },
    "disableUnderline": {
      "description": "If <code>true</code>, the <code>input</code> will not have an underline."
    },
    "endAdornment": { "description": "End <code>InputAdornment</code> for this component." },
    "error": {
      "description": "If <code>true</code>, the <code>input</code> will indicate an error. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."
    },
    "fullWidth": {
      "description": "If <code>true</code>, the <code>input</code> will take up the full width of its container."
    },
    "id": { "description": "The id of the <code>input</code> element." },
    "inputComponent": {
      "description": "The component used for the <code>input</code> element. Either a string to use a HTML element or a component."
    },
    "inputProps": {
      "description": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/input#attributes\">Attributes</a> applied to the <code>input</code> element."
    },
    "inputRef": { "description": "Pass a ref to the <code>input</code> element." },
    "margin": {
      "description": "If <code>dense</code>, will adjust vertical spacing. This is normally obtained via context from FormControl. The prop defaults to the value (<code>&#39;none&#39;</code>) inherited from the parent FormControl component."
    },
    "maxRows": {
      "description": "Maximum number of rows to display when multiline option is set to true."
    },
    "minRows": {
      "description": "Minimum number of rows to display when multiline option is set to true."
    },
    "multiline": {
      "description": "If <code>true</code>, a <a href=\"https://mui.com/material-ui/react-textarea-autosize/\">TextareaAutosize</a> element is rendered."
    },
    "name": { "description": "Name attribute of the <code>input</code> element." },
    "onChange": {
      "description": "Callback fired when the value is changed.",
      "typeDescriptions": {
        "event": "The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string)."
      }
    },
    "placeholder": {
      "description": "The short hint displayed in the <code>input</code> before the user enters a value."
    },
    "readOnly": {
      "description": "It prevents the user from changing the value of the field (not from interacting with the field)."
    },
    "required": {
      "description": "If <code>true</code>, the <code>input</code> element is required. The prop defaults to the value (<code>false</code>) inherited from the parent FormControl component."
    },
    "rows": { "description": "Number of rows to display when multiline option is set to true." },
    "slotProps": {
      "description": "The extra props for the slot components. You can override the existing props or add new ones.<br>This prop is an alias for the <code>componentsProps</code> prop, which will be deprecated in the future."
    },
    "slots": {
      "description": "The components used for each slot inside.<br>This prop is an alias for the <code>components</code> prop, which will be deprecated in the future."
    },
    "startAdornment": { "description": "Start <code>InputAdornment</code> for this component." },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles."
    },
    "type": {
      "description": "Type of the <code>input</code> element. It should be <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/input#input_types\">a valid HTML5 input type</a>."
    },
    "value": {
      "description": "The value of the <code>input</code> element, required for a controlled component."
    }
  },
  "classDescriptions": {
    "colorSecondary": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "color secondary"
    },
    "disabled": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>disabled={true}</code>"
    },
    "error": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>error={true}</code>"
    },
    "focused": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "the component is focused"
    },
    "formControl": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "the component is a descendant of <code>FormControl</code>"
    },
    "fullWidth": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>fullWidth={true}</code>"
    },
    "input": { "description": "Styles applied to {{nodeName}}.", "nodeName": "the input element" },
    "inputAdornedEnd": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the input element",
      "conditions": "<code>endAdornment</code> is provided",
      "deprecationInfo": "Combine the <a href=\"/material-ui/api/input-base/#inputbase-classes-input\">.MuiInputBase-input</a> and <a href=\"/material-ui/api/input-base/#inputbase-classes-adornedEnd\">.MuiInputBase-adornedEnd</a> classes instead. See <a href=\"/material-ui/migration/migrating-from-deprecated-apis/\">Migrating from deprecated APIs</a> for more details."
    },
    "inputAdornedStart": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the input element",
      "conditions": "<code>startAdornment</code> is provided",
      "deprecationInfo": "Combine the <a href=\"/material-ui/api/input-base/#inputbase-classes-input\">.MuiInputBase-input</a> and <a href=\"/material-ui/api/input-base/#inputbase-classes-adornedStart\">.MuiInputBase-adornedStart</a> classes instead. See <a href=\"/material-ui/migration/migrating-from-deprecated-apis/\">Migrating from deprecated APIs</a> for more details."
    },
    "inputMultiline": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the input element",
      "conditions": "<code>multiline={true}</code>",
      "deprecationInfo": "Combine the <a href=\"/material-ui/api/input-base/#inputbase-classes-input\">.MuiInputBase-input</a> and <a href=\"/material-ui/api/input-base/#inputbase-classes-multiline\">.MuiInputBase-multiline</a> classes instead. See <a href=\"/material-ui/migration/migrating-from-deprecated-apis/\">Migrating from deprecated APIs</a> for more details."
    },
    "inputSizeSmall": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the input element",
      "conditions": "<code>size=\"small\"</code>",
      "deprecationInfo": "Combine the <a href=\"/material-ui/api/input-base/#inputbase-classes-input\">.MuiInputBase-input</a> and <a href=\"/material-ui/api/input-base/#inputbase-classes-sizeSmall\">.MuiInputBase-sizeSmall</a> classes instead. See <a href=\"/material-ui/migration/migrating-from-deprecated-apis/\">Migrating from deprecated APIs</a> for more details."
    },
    "inputTypeSearch": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the input element",
      "conditions": "<code>type=\"search\"</code>"
    },
    "multiline": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>multiline={true}</code>"
    },
    "root": { "description": "Styles applied to the root element." },
    "sizeSmall": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the input element",
      "conditions": "<code>size=\"small\"</code>"
    },
    "underline": {
      "description": "Styles applied to {{nodeName}} unless {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>disableUnderline={true}</code>"
    }
  }
}
