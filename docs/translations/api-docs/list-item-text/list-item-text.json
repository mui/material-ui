{
  "componentDescription": "",
  "propDescriptions": {
    "children": { "description": "Alias for the <code>primary</code> prop." },
    "classes": { "description": "Override or extend the styles applied to the component." },
    "disableTypography": {
      "description": "If <code>true</code>, the children won&#39;t be wrapped by a Typography component. This can be useful to render an alternative Typography variant by wrapping the <code>children</code> (or <code>primary</code>) text, and optional <code>secondary</code> text with the Typography component."
    },
    "inset": {
      "description": "If <code>true</code>, the children are indented. This should be used if there is no left avatar or left icon."
    },
    "primary": { "description": "The main content element." },
    "primaryTypographyProps": {
      "description": "These props will be forwarded to the primary typography component (as long as disableTypography is not <code>true</code>)."
    },
    "secondary": { "description": "The secondary content element." },
    "secondaryTypographyProps": {
      "description": "These props will be forwarded to the secondary typography component (as long as disableTypography is not <code>true</code>)."
    },
    "slotProps": { "description": "The props used for each slot inside." },
    "slots": { "description": "The components used for each slot inside." },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles."
    }
  },
  "classDescriptions": {
    "dense": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the Typography component",
      "conditions": "dense"
    },
    "inset": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>inset={true}</code>"
    },
    "multiline": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the Typography component",
      "conditions": "primary and secondary are set"
    }
  },
  "slotDescriptions": {
    "primary": "The component that renders the primary slot.",
    "root": "The component that renders the root slot.",
    "secondary": "The component that renders the secondary slot."
  }
}
