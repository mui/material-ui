{
  "componentDescription": "Uses an additional container component if `ListItemSecondaryAction` is the last child.",
  "propDescriptions": {
    "alignItems": { "description": "Defines the <code>align-items</code> style property." },
    "children": {
      "description": "The content of the component if a <code>ListItemSecondaryAction</code> is used it must be the last child."
    },
    "classes": { "description": "Override or extend the styles applied to the component." },
    "component": {
      "description": "The component used for the root node. Either a string to use a HTML element or a component."
    },
    "components": { "description": "The components used for each slot inside." },
    "componentsProps": {
      "description": "The extra props for the slot components. You can override the existing props or add new ones."
    },
    "ContainerComponent": {
      "description": "The container component used when a <code>ListItemSecondaryAction</code> is the last child.",
      "requiresRef": true
    },
    "ContainerProps": { "description": "Props applied to the container component if used." },
    "dense": {
      "description": "If <code>true</code>, compact vertical padding designed for keyboard and mouse input is used. The prop defaults to the value inherited from the parent List component."
    },
    "disableGutters": {
      "description": "If <code>true</code>, the left and right padding is removed."
    },
    "disablePadding": { "description": "If <code>true</code>, all padding is removed." },
    "divider": {
      "description": "If <code>true</code>, a 1px light border is added to the bottom of the list item."
    },
    "secondaryAction": { "description": "The element to display at the end of ListItem." },
    "slotProps": {
      "description": "The extra props for the slot components. You can override the existing props or add new ones."
    },
    "slots": { "description": "The components used for each slot inside." },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles."
    }
  },
  "classDescriptions": {
    "alignItemsFlexStart": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the component element",
      "conditions": "<code>alignItems=\"flex-start\"</code>"
    },
    "container": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the container element",
      "conditions": "<code>children</code> includes <code>ListItemSecondaryAction</code>"
    },
    "dense": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the component element",
      "conditions": "dense"
    },
    "divider": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the inner <code>component</code> element",
      "conditions": "<code>divider={true}</code>"
    },
    "gutters": {
      "description": "Styles applied to {{nodeName}} unless {{conditions}}.",
      "nodeName": "the inner <code>component</code> element",
      "conditions": "<code>disableGutters={true}</code>"
    },
    "padding": {
      "description": "Styles applied to {{nodeName}} unless {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>disablePadding={true}</code>"
    },
    "root": {
      "description": "Styles applied to {{nodeName}}. May be wrapped by a <code>container</code>.",
      "nodeName": "the (normally root) <code>component</code> element"
    },
    "secondaryAction": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the component element",
      "conditions": "<code>children</code> includes <code>ListItemSecondaryAction</code>"
    }
  }
}
