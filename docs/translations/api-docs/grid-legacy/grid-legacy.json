{
  "componentDescription": "",
  "deprecationInfo": "Use the <a href=\"https://mui.com/material-ui/react-grid/\"><code>Grid</code></a> component instead.",
  "propDescriptions": {
    "children": { "description": "The content of the component." },
    "classes": { "description": "Override or extend the styles applied to the component." },
    "columns": { "description": "The number of columns." },
    "columnSpacing": {
      "description": "Defines the horizontal space between the type <code>item</code> components. It overrides the value of the <code>spacing</code> prop."
    },
    "component": {
      "description": "The component used for the root node. Either a string to use a HTML element or a component."
    },
    "container": {
      "description": "If <code>true</code>, the component will have the flex <em>container</em> behavior. You should be wrapping <em>items</em> with a <em>container</em>."
    },
    "direction": {
      "description": "Defines the <code>flex-direction</code> style property. It is applied for all screen sizes."
    },
    "item": {
      "description": "If <code>true</code>, the component will have the flex <em>item</em> behavior. You should be wrapping <em>items</em> with a <em>container</em>."
    },
    "lg": {
      "description": "If a number, it sets the number of columns the grid item uses. It can&#39;t be greater than the total number of columns of the container (12 by default). If &#39;auto&#39;, the grid item&#39;s width matches its content. If false, the prop is ignored. If true, the grid item&#39;s width grows to use the space available in the grid container. The value is applied for the <code>lg</code> breakpoint and wider screens if not overridden."
    },
    "md": {
      "description": "If a number, it sets the number of columns the grid item uses. It can&#39;t be greater than the total number of columns of the container (12 by default). If &#39;auto&#39;, the grid item&#39;s width matches its content. If false, the prop is ignored. If true, the grid item&#39;s width grows to use the space available in the grid container. The value is applied for the <code>md</code> breakpoint and wider screens if not overridden."
    },
    "rowSpacing": {
      "description": "Defines the vertical space between the type <code>item</code> components. It overrides the value of the <code>spacing</code> prop."
    },
    "sm": {
      "description": "If a number, it sets the number of columns the grid item uses. It can&#39;t be greater than the total number of columns of the container (12 by default). If &#39;auto&#39;, the grid item&#39;s width matches its content. If false, the prop is ignored. If true, the grid item&#39;s width grows to use the space available in the grid container. The value is applied for the <code>sm</code> breakpoint and wider screens if not overridden."
    },
    "spacing": {
      "description": "Defines the space between the type <code>item</code> components. It can only be used on a type <code>container</code> component."
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles."
    },
    "wrap": {
      "description": "Defines the <code>flex-wrap</code> style property. It&#39;s applied for all screen sizes."
    },
    "xl": {
      "description": "If a number, it sets the number of columns the grid item uses. It can&#39;t be greater than the total number of columns of the container (12 by default). If &#39;auto&#39;, the grid item&#39;s width matches its content. If false, the prop is ignored. If true, the grid item&#39;s width grows to use the space available in the grid container. The value is applied for the <code>xl</code> breakpoint and wider screens if not overridden."
    },
    "xs": {
      "description": "If a number, it sets the number of columns the grid item uses. It can&#39;t be greater than the total number of columns of the container (12 by default). If &#39;auto&#39;, the grid item&#39;s width matches its content. If false, the prop is ignored. If true, the grid item&#39;s width grows to use the space available in the grid container. The value is applied for all the screen sizes with the lowest priority."
    },
    "zeroMinWidth": {
      "description": "If <code>true</code>, it sets <code>min-width: 0</code> on the item. Refer to the limitations section of the documentation to better understand the use case."
    }
  },
  "classDescriptions": {
    "container": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>container={true}</code>"
    },
    "direction-xs-column": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>direction=\"column\"</code>"
    },
    "direction-xs-column-reverse": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>direction=\"column-reverse\"</code>"
    },
    "direction-xs-row-reverse": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>direction=\"row-reverse\"</code>"
    },
    "grid-xs-1": { "description": "" },
    "grid-xs-10": { "description": "" },
    "grid-xs-11": { "description": "" },
    "grid-xs-12": { "description": "" },
    "grid-xs-2": { "description": "" },
    "grid-xs-3": { "description": "" },
    "grid-xs-4": { "description": "" },
    "grid-xs-5": { "description": "" },
    "grid-xs-6": { "description": "" },
    "grid-xs-7": { "description": "" },
    "grid-xs-8": { "description": "" },
    "grid-xs-9": { "description": "" },
    "grid-xs-auto": { "description": "" },
    "grid-xs-true": { "description": "" },
    "item": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>item={true}</code>"
    },
    "root": { "description": "Styles applied to the root element." },
    "spacing-xs-1": { "description": "" },
    "spacing-xs-10": { "description": "" },
    "spacing-xs-2": { "description": "" },
    "spacing-xs-3": { "description": "" },
    "spacing-xs-4": { "description": "" },
    "spacing-xs-5": { "description": "" },
    "spacing-xs-6": { "description": "" },
    "spacing-xs-7": { "description": "" },
    "spacing-xs-8": { "description": "" },
    "spacing-xs-9": { "description": "" },
    "wrap-xs-nowrap": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>wrap=\"nowrap\"</code>"
    },
    "wrap-xs-wrap-reverse": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>wrap=\"reverse\"</code>"
    },
    "zeroMinWidth": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>zeroMinWidth={true}</code>"
    }
  }
}
