{
  "props": {
    "open": { "type": { "name": "bool" }, "required": true },
    "anchorOrigin": {
      "type": {
        "name": "shape",
        "description": "{ horizontal: 'center'<br>&#124;&nbsp;'left'<br>&#124;&nbsp;'right', vertical: 'bottom'<br>&#124;&nbsp;'top' }"
      },
      "default": "{ vertical: 'bottom', horizontal: 'right' }"
    },
    "animationDuration": { "type": { "name": "number" }, "default": "300" },
    "autoHideDuration": { "type": { "name": "number" }, "default": "null" },
    "color": {
      "type": {
        "name": "enum",
        "description": "'danger'<br>&#124;&nbsp;'neutral'<br>&#124;&nbsp;'primary'<br>&#124;&nbsp;'success'<br>&#124;&nbsp;'warning'"
      },
      "default": "'neutral'",
      "additionalInfo": { "joy-color": true }
    },
    "component": { "type": { "name": "elementType" } },
    "disableWindowBlurListener": { "type": { "name": "bool" }, "default": "false" },
    "endDecorator": { "type": { "name": "node" } },
    "invertedColors": { "type": { "name": "bool" }, "default": "false" },
    "key": { "type": { "name": "custom", "description": "any" } },
    "onClose": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(event: React.SyntheticEvent<any> | Event, reason: string) => void",
        "describedArgs": ["event", "reason"]
      }
    },
    "onUnmount": { "type": { "name": "func" } },
    "resumeHideDuration": { "type": { "name": "number" } },
    "size": {
      "type": { "name": "enum", "description": "'sm'<br>&#124;&nbsp;'md'<br>&#124;&nbsp;'lg'" },
      "default": "'md'",
      "additionalInfo": { "joy-size": true }
    },
    "slotProps": {
      "type": {
        "name": "shape",
        "description": "{ clickAway?: func<br>&#124;&nbsp;{ children: element, disableReactTree?: bool, mouseEvent?: 'onClick'<br>&#124;&nbsp;'onMouseDown'<br>&#124;&nbsp;'onMouseUp'<br>&#124;&nbsp;'onPointerDown'<br>&#124;&nbsp;'onPointerUp'<br>&#124;&nbsp;false, onClickAway: func, touchEvent?: 'onTouchEnd'<br>&#124;&nbsp;'onTouchStart'<br>&#124;&nbsp;false }, endDecorator?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object, startDecorator?: func<br>&#124;&nbsp;object }"
      },
      "default": "{}"
    },
    "slots": {
      "type": {
        "name": "shape",
        "description": "{ clickAway?: elementType, endDecorator?: elementType, root?: elementType, startDecorator?: elementType }"
      },
      "default": "{}",
      "additionalInfo": { "slotsApi": true }
    },
    "startDecorator": { "type": { "name": "node" } },
    "sx": {
      "type": {
        "name": "union",
        "description": "Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"
      },
      "additionalInfo": { "sx": true }
    },
    "variant": {
      "type": {
        "name": "enum",
        "description": "'outlined'<br>&#124;&nbsp;'plain'<br>&#124;&nbsp;'soft'<br>&#124;&nbsp;'solid'"
      },
      "default": "'outlined'",
      "additionalInfo": { "joy-variant": true }
    }
  },
  "name": "Snackbar",
  "imports": ["import Snackbar from '@mui/joy/Snackbar';", "import { Snackbar } from '@mui/joy';"],
  "slots": [
    {
      "name": "root",
      "description": "The component that renders the root.",
      "default": "'div'",
      "class": "MuiSnackbar-root"
    },
    {
      "name": "startDecorator",
      "description": "The component that renders the start decorator.",
      "default": "'span'",
      "class": "MuiSnackbar-startDecorator"
    },
    {
      "name": "endDecorator",
      "description": "The component that renders the end decorator.",
      "default": "'span'",
      "class": "MuiSnackbar-endDecorator"
    },
    {
      "name": "clickAway",
      "description": "The component that renders the click away.",
      "default": "ClickAwayListener",
      "class": null
    }
  ],
  "classes": [
    {
      "key": "anchorOriginBottomCenter",
      "className": "MuiSnackbar-anchorOriginBottomCenter",
      "description": "Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`.",
      "isGlobal": false
    },
    {
      "key": "anchorOriginBottomLeft",
      "className": "MuiSnackbar-anchorOriginBottomLeft",
      "description": "Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`.",
      "isGlobal": false
    },
    {
      "key": "anchorOriginBottomRight",
      "className": "MuiSnackbar-anchorOriginBottomRight",
      "description": "Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`.",
      "isGlobal": false
    },
    {
      "key": "anchorOriginTopCenter",
      "className": "MuiSnackbar-anchorOriginTopCenter",
      "description": "Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`.",
      "isGlobal": false
    },
    {
      "key": "anchorOriginTopLeft",
      "className": "MuiSnackbar-anchorOriginTopLeft",
      "description": "Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`.",
      "isGlobal": false
    },
    {
      "key": "anchorOriginTopRight",
      "className": "MuiSnackbar-anchorOriginTopRight",
      "description": "Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`.",
      "isGlobal": false
    },
    {
      "key": "colorDanger",
      "className": "MuiSnackbar-colorDanger",
      "description": "Class name applied to the root element if `color=\"danger\"`.",
      "isGlobal": false
    },
    {
      "key": "colorNeutral",
      "className": "MuiSnackbar-colorNeutral",
      "description": "Class name applied to the root element if `color=\"neutral\"`.",
      "isGlobal": false
    },
    {
      "key": "colorPrimary",
      "className": "MuiSnackbar-colorPrimary",
      "description": "Class name applied to the root element if `color=\"primary\"`.",
      "isGlobal": false
    },
    {
      "key": "colorSuccess",
      "className": "MuiSnackbar-colorSuccess",
      "description": "Class name applied to the root element if `color=\"success\"`.",
      "isGlobal": false
    },
    {
      "key": "colorWarning",
      "className": "MuiSnackbar-colorWarning",
      "description": "Class name applied to the root element if `color=\"warning\"`.",
      "isGlobal": false
    },
    {
      "key": "sizeLg",
      "className": "MuiSnackbar-sizeLg",
      "description": "Class name applied to the root element if `size=\"lg\"`.",
      "isGlobal": false
    },
    {
      "key": "sizeMd",
      "className": "MuiSnackbar-sizeMd",
      "description": "Class name applied to the root element if `size=\"md\"`.",
      "isGlobal": false
    },
    {
      "key": "sizeSm",
      "className": "MuiSnackbar-sizeSm",
      "description": "Class name applied to the root element if `size=\"sm\"`.",
      "isGlobal": false
    },
    {
      "key": "variantOutlined",
      "className": "MuiSnackbar-variantOutlined",
      "description": "Class name applied to the root element if `variant=\"outlined\"`.",
      "isGlobal": false
    },
    {
      "key": "variantPlain",
      "className": "MuiSnackbar-variantPlain",
      "description": "Class name applied to the root element if `variant=\"plain\"`.",
      "isGlobal": false
    },
    {
      "key": "variantSoft",
      "className": "MuiSnackbar-variantSoft",
      "description": "Class name applied to the root element if `variant=\"soft\"`.",
      "isGlobal": false
    },
    {
      "key": "variantSolid",
      "className": "MuiSnackbar-variantSolid",
      "description": "Class name applied to the root element if `variant=\"solid\"`.",
      "isGlobal": false
    }
  ],
  "spread": false,
  "themeDefaultProps": true,
  "muiName": "JoySnackbar",
  "forwardsRefTo": "HTMLDivElement",
  "filename": "/packages/mui-joy/src/Snackbar/Snackbar.tsx",
  "inheritance": null,
  "demos": "<ul><li><a href=\"/joy-ui/react-snackbar/\">Snackbar</a></li></ul>",
  "cssComponent": false
}
